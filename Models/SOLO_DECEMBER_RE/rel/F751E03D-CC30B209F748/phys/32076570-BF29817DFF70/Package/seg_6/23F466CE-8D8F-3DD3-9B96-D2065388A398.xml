<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PKG_VNT_LOAD_HSL_LOB" directorySegmentName="seg_6" id="23F466CE-8D8F-3DD3-9B96-D2065388A398">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_LOAD_HSL_LOB</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:17:38 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE      CHTR.PKG_VNT_LOAD_HSL_LOB&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name    : PKG_VNT_LOAD_HSL_LOB&lt;br/&gt;   ||  Created By      : Knoll&lt;br/&gt;   ||  Created Date    : 24-Sep-2014&lt;br/&gt;   ||  Subject Area    : House&lt;br/&gt;   ||  Description     : This is for loading HSL Lob details from the staging table &apos;VNT_HSL_LOB&apos;&lt;br/&gt;   ||&lt;br/&gt;   ||   Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ||     Cognizant      10-Nov-2014     Standardization Changes&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   PROCEDURE LOAD(&lt;br/&gt;         p_audit_user_i IN VARCHAR2,&lt;br/&gt;         p_this_thread NUMBER DEFAULT 1,&lt;br/&gt;         p_max_thread NUMBER DEFAULT 1,&lt;br/&gt;         p_batchsize NUMBER DEFAULT 1000 );&lt;br/&gt;END pkg_vnt_load_hsl_lob;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PKG_VNT_LOAD_HSL_LOB" id="23F466CE-8D8F-3DD3-9B96-D2065388A398">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_LOAD_HSL_LOB</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:17:39 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE BODY      CHTR.PKG_VNT_LOAD_HSL_LOB&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name    : PKG_VNT_LOAD_HSL_LOB&lt;br/&gt;   ||  Created By      : Knoll&lt;br/&gt;   ||  Created Date    : 24-Sep-2014&lt;br/&gt;   ||  Subject Area    : House&lt;br/&gt;   ||  Description     : This is for loading HSL Lob details from the staging table &apos;VNT_HSL_LOB&apos;&lt;br/&gt;   ||&lt;br/&gt;   ||   Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ||     Cognizant      10-Nov-2014     Standardization Changes&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   SUBTYPE t_unit_name IS VARCHAR2 (30);&lt;br/&gt;&lt;br/&gt;   -- CONSTANTS&lt;br/&gt;   c_stg_processed CONSTANT VARCHAR2 (1) := &apos;P&apos;;&lt;br/&gt;   c_stg_error CONSTANT VARCHAR2 (1) := &apos;E&apos;;&lt;br/&gt;   c_country_code CONSTANT VARCHAR2 (3) := &apos;USA&apos;;&lt;br/&gt;   c_pkg_name CONSTANT t_unit_name := &apos;PKG_VNT_LOAD_HSL_LOB&apos;;&lt;br/&gt;   -- EXCEPTION CONSTANTS&lt;br/&gt;   c_bulk_errors EXCEPTION;&lt;br/&gt;   PRAGMA EXCEPTION_INIT (c_bulk_errors, -24381);&lt;br/&gt;   -- THREADING BIND VARIABLES&lt;br/&gt;   g_this_thread NUMBER := 1;&lt;br/&gt;   g_max_thread NUMBER := 1;&lt;br/&gt;   g_batchsize NUMBER := 1000;&lt;br/&gt;&lt;br/&gt;   -- CURSORS&lt;br/&gt;   -- Staged HSL_LOB for loading&lt;br/&gt;   CURSOR cur_stg_hsl_lob&lt;br/&gt;   IS&lt;br/&gt;      SELECT&lt;br/&gt;         -- staging control data&lt;br/&gt;         hsl.ROWID AS ID,&lt;br/&gt;         hsl.record_load_cd,&lt;br/&gt;&lt;br/&gt;         -- surrogate keys&lt;br/&gt;         xref.address_id AS service_address_id,&lt;br/&gt;         NULL AS headend_id,&lt;br/&gt;&lt;br/&gt;         -- source keys&lt;br/&gt;         hsl.hse_key_hsl AS hse_key,&lt;br/&gt;&lt;br/&gt;         -- data&lt;br/&gt;         CASE&lt;br/&gt;            WHEN sys_hsl = 8313&lt;br/&gt;            THEN &apos;BRS&apos;&lt;br/&gt;            ELSE &apos;VNT&apos;&lt;br/&gt;         END AS data_source_type_cd,&lt;br/&gt;         hsl.delivery_segment_id_hsl AS line_of_business_cd,&lt;br/&gt;         hsl.connect_cde_hsl AS connection_status_cd,&lt;br/&gt;         hsl.node_hsl AS node_nm,&lt;br/&gt;         hsl.tap_stat_hsl AS tap_status_cd,&lt;br/&gt;         hsl.serv_stat_hsl AS serviceability_status_cd&lt;br/&gt;      FROM&lt;br/&gt;         stg.vnt_hsl_lob hsl&lt;br/&gt;      JOIN t_service_address_vantage_xref xref&lt;br/&gt;      ON&lt;br/&gt;         xref.hs_key = hsl.hse_key_hsl&lt;br/&gt;         --May Need data Model change to map T_LOC with T_HEADEND table. May need new interface with OMS application.&lt;br/&gt;         --LEFT OUTER JOIN t_headend th&lt;br/&gt;         --ON&lt;br/&gt;         --th.psid = hsl.head_end_cde_hsl&lt;br/&gt;      WHERE&lt;br/&gt;         hsl.record_load_cd IS NULL&lt;br/&gt;         AND MOD (ASCII (SUBSTR (hsl.ROWID, LENGTH (hsl.ROWID), 1)), g_max_thread ) = (g_this_thread - 1);&lt;br/&gt;&lt;br/&gt;TYPE t_cursor_data_tbl&lt;br/&gt;IS&lt;br/&gt;   TABLE OF cur_stg_hsl_lob%ROWTYPE INDEX BY PLS_INTEGER;&lt;br/&gt;&lt;br/&gt;TYPE t_ptr_tbl&lt;br/&gt;IS&lt;br/&gt;   TABLE OF PLS_INTEGER INDEX BY PLS_INTEGER;&lt;br/&gt;&lt;br/&gt;   -- Forward declarations&lt;br/&gt;PROCEDURE insert_service_address_lob(&lt;br/&gt;      p_process_rec_i IN pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io IN OUT NOCOPY t_cursor_data_tbl );&lt;br/&gt;&lt;br/&gt;PROCEDURE update_staging(&lt;br/&gt;      p_process_rec_i IN pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_i IN t_cursor_data_tbl );&lt;br/&gt;&lt;br/&gt;PROCEDURE LOAD(&lt;br/&gt;      p_audit_user_i IN VARCHAR2,&lt;br/&gt;      p_this_thread NUMBER DEFAULT 1,&lt;br/&gt;      p_max_thread NUMBER DEFAULT 1,&lt;br/&gt;      p_batchsize NUMBER DEFAULT 1000 )&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  SubProgram Name    : LOAD&lt;br/&gt;   ||  Estimated Run Time :&lt;br/&gt;   ||  Description        : This is for HSL LOB details from the staging table &apos;VNT_HSL_LOB&apos;. Added the Cursor&lt;br/&gt;   ||                       Opening and Closing Logic&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   l_proc_name t_unit_name := &apos;LOAD&apos;;&lt;br/&gt;   l_process_name t_process_log.process_name%TYPE := c_pkg_name;&lt;br/&gt;   l_process_rec pkg_logging.t_process_rec;&lt;br/&gt;   l_cursor_data t_cursor_data_tbl;&lt;br/&gt;BEGIN&lt;br/&gt;   l_process_rec.process_name := l_process_name;&lt;br/&gt;   pkg_logging.begin_process (l_process_rec, &apos;p_audit_user_i=&apos; || p_audit_user_i );&lt;br/&gt;   g_this_thread := p_this_thread;&lt;br/&gt;   g_max_thread := p_max_thread;&lt;br/&gt;   g_batchsize := p_batchsize;&lt;br/&gt;&lt;br/&gt;   IF pkg_utility.stopnow (c_pkg_name) THEN&lt;br/&gt;      RETURN;&lt;br/&gt;   END IF;&lt;br/&gt;&lt;br/&gt;   --Added on 10-Nov-2014 as part of Code Standardization Changes&lt;br/&gt;   IF (cur_stg_hsl_lob%ISOPEN) THEN&lt;br/&gt;      CLOSE cur_stg_hsl_lob;&lt;br/&gt;   END IF;&lt;br/&gt;&lt;br/&gt;   OPEN cur_stg_hsl_lob;&lt;br/&gt;&lt;br/&gt;   LOOP&lt;br/&gt;      FETCH&lt;br/&gt;         cur_stg_hsl_lob BULK COLLECT&lt;br/&gt;      INTO&lt;br/&gt;         l_cursor_data LIMIT g_batchsize;&lt;br/&gt;&lt;br/&gt;      IF (l_cursor_data.COUNT () &gt; 0) THEN&lt;br/&gt;         -- Insert service_address_line_of_bus&lt;br/&gt;         insert_service_address_lob (l_process_rec, l_cursor_data);&lt;br/&gt;         -- Update the staging rows with status&lt;br/&gt;         update_staging (l_process_rec, l_cursor_data);&lt;br/&gt;         -- Commit the batch&lt;br/&gt;         COMMIT;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      EXIT&lt;br/&gt;   WHEN l_cursor_data.COUNT () &lt; g_batchsize OR pkg_utility.stopnow (c_pkg_name);&lt;br/&gt;   END LOOP;&lt;br/&gt;&lt;br/&gt;   CLOSE cur_stg_hsl_lob;&lt;br/&gt;&lt;br/&gt;   pkg_logging.end_process (l_process_rec);&lt;br/&gt;EXCEPTION&lt;br/&gt;WHEN OTHERS THEN&lt;br/&gt;   ROLLBACK;&lt;br/&gt;&lt;br/&gt;   IF (cur_stg_hsl_lob%ISOPEN) THEN&lt;br/&gt;      CLOSE cur_stg_hsl_lob;&lt;br/&gt;   END IF;&lt;br/&gt;&lt;br/&gt;   pkg_logging.log_exception (l_process_rec, DBMS_UTILITY.format_error_stack () );&lt;br/&gt;   pkg_logging.end_process (l_process_rec, &apos;ERROR WHILE PROCESSING&apos;);&lt;br/&gt;   RAISE;&lt;br/&gt;END LOAD;&lt;br/&gt;&lt;br/&gt;PROCEDURE insert_service_address_lob(&lt;br/&gt;      p_process_rec_i IN pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io IN OUT NOCOPY t_cursor_data_tbl )&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  SubProgram Name    : INSERT_SERVICE_ADDRESS_LOB&lt;br/&gt;   ||  Estimated Run Time :&lt;br/&gt;   ||  Description        : This is for HSL LOB details specifically into the target table &apos;&lt;br/&gt;   t_service_address_line_of_bus&apos;&lt;br/&gt;   ||                       from the staging table &apos;VNT_HSL_LOB&apos; via Bilk Load Mechanism.&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   l_proc_name t_unit_name := &apos;INSERT_SERVICE_ADDRESS_LOB&apos;;&lt;br/&gt;   l_errors NUMBER;&lt;br/&gt;   l_coll_idx PLS_INTEGER;&lt;br/&gt;BEGIN&lt;br/&gt;   pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, cnt=&apos; || p_cursor_data_io.COUNT () );&lt;br/&gt;&lt;br/&gt;   BEGIN&lt;br/&gt;      FORALL i IN 1 .. p_cursor_data_io.COUNT SAVE EXCEPTIONS&lt;br/&gt;      INSERT&lt;br/&gt;      INTO&lt;br/&gt;         t_service_address_line_of_bus a&lt;br/&gt;         (&lt;br/&gt;            a.line_of_business_cd,&lt;br/&gt;            a.service_address_id,&lt;br/&gt;            a.headend_id,&lt;br/&gt;            a.connection_status_cd,&lt;br/&gt;            a.node_nm,&lt;br/&gt;            a.tap_status_cd,&lt;br/&gt;            a.serviceability_status_cd,&lt;br/&gt;            a.data_source_type_cd,&lt;br/&gt;            a.record_stat,&lt;br/&gt;            a.created_dttm,&lt;br/&gt;            a.created_by&lt;br/&gt;         )&lt;br/&gt;         VALUES&lt;br/&gt;         (&lt;br/&gt;            p_cursor_data_io (i).line_of_business_cd,&lt;br/&gt;            p_cursor_data_io (i).service_address_id,&lt;br/&gt;            p_cursor_data_io (i).headend_id,&lt;br/&gt;            p_cursor_data_io (i).connection_status_cd,&lt;br/&gt;            p_cursor_data_io (i).node_nm,&lt;br/&gt;            p_cursor_data_io (i).tap_status_cd,&lt;br/&gt;            p_cursor_data_io (i).serviceability_status_cd,&lt;br/&gt;            p_cursor_data_io (i).data_source_type_cd,&lt;br/&gt;            &apos;A&apos;,&lt;br/&gt;            SYSTIMESTAMP,&lt;br/&gt;            c_pkg_name&lt;br/&gt;         );&lt;br/&gt;   EXCEPTION&lt;br/&gt;   WHEN c_bulk_errors THEN&lt;br/&gt;      l_errors := SQL%BULK_EXCEPTIONS.COUNT;&lt;br/&gt;&lt;br/&gt;      FOR i IN 1 .. l_errors&lt;br/&gt;      LOOP&lt;br/&gt;         NULL;&lt;br/&gt;         l_coll_idx := SQL%BULK_EXCEPTIONS (i).ERROR_INDEX;&lt;br/&gt;         p_cursor_data_io (l_coll_idx).record_load_cd := c_stg_error;&lt;br/&gt;         pkg_logging.log_exception (p_process_rec_i, l_proc_name || &apos;, bulk insert exception, key=&apos; || p_cursor_data_io&lt;br/&gt;         (l_coll_idx).hse_key || &apos;, exception=&apos; || SQL%BULK_EXCEPTIONS (i).ERROR_CODE );&lt;br/&gt;      END LOOP;&lt;br/&gt;   END;&lt;br/&gt;&lt;br/&gt;   pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, end&apos;);&lt;br/&gt;END insert_service_address_lob;&lt;br/&gt;&lt;br/&gt;PROCEDURE update_staging&lt;br/&gt;   (&lt;br/&gt;      p_process_rec_i IN pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_i IN t_cursor_data_tbl&lt;br/&gt;   )&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  SubProgram Name    : LOAD&lt;br/&gt;   ||  Estimated Run Time :&lt;br/&gt;   ||  Description        : This is for updating the staging table &apos;VNT_HSL_LOB&apos; for the column&lt;br/&gt;   ||                       Record_Cd_Load with value of &apos;P&apos; which indicates the Finished status.&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   l_proc_name t_unit_name := &apos;UPDATE_STAGING&apos;;&lt;br/&gt;BEGIN&lt;br/&gt;   pkg_logging.log_debug (p_process_rec_i, l_proc_name);&lt;br/&gt;   FORALL i IN 1 .. p_cursor_data_i.COUNT&lt;br/&gt;   UPDATE&lt;br/&gt;      stg.vnt_hsl_lob s&lt;br/&gt;   SET&lt;br/&gt;      s.record_load_cd = c_stg_processed,&lt;br/&gt;      s.record_dttm = SYSTIMESTAMP&lt;br/&gt;   WHERE&lt;br/&gt;      ROWID = p_cursor_data_i (i).ID;&lt;br/&gt;END update_staging;&lt;br/&gt;END pkg_vnt_load_hsl_lob;</source>
</body>
</PackageOracle>
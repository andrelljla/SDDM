<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PKG_EQUIP_UTILITY" directorySegmentName="seg_6" id="7DB3368F-F593-2EFE-4450-36E5B52AC225">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_EQUIP_UTILITY</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:17:13 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE      CHTR.PKG_EQUIP_UTILITY&lt;br/&gt;IS&lt;br/&gt;/****************************************************************************************************************&lt;br/&gt;||  Program Name    : pkg_equip_utility&lt;br/&gt;||  Created By      : knoll&lt;br/&gt;||  Created Date    : FEB-2015&lt;br/&gt;||  Subject Area    : General&lt;br/&gt;||  Description     : The package pkg_equip_utility is for SOLO equipment processing.&lt;br/&gt;||  Change log:&lt;br/&gt;||&lt;br/&gt;||    Changed By      Changed On      Change Description&lt;br/&gt;||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;******************************************************************************************************************/&lt;br/&gt;   exp_recon_not_started         EXCEPTION;&lt;br/&gt;   exp_multiple_logs_for_recon   EXCEPTION;&lt;br/&gt;&lt;br/&gt;   FUNCTION cnvrt_eqmt_addr (i_eqmt_addr IN VARCHAR2)&lt;br/&gt;      RETURN VARCHAR2;&lt;br/&gt;&lt;br/&gt;   FUNCTION is_csg_settop_box (equip_type IN VARCHAR2)&lt;br/&gt;      RETURN BOOLEAN;&lt;br/&gt;&lt;br/&gt;   PROCEDURE finalize (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i    IN   VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   FUNCTION recon_cutoff_time&lt;br/&gt;      RETURN TIMESTAMP;&lt;br/&gt;END pkg_equip_utility;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PKG_EQUIP_UTILITY" id="7DB3368F-F593-2EFE-4450-36E5B52AC225">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_EQUIP_UTILITY</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:17:14 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE BODY CHTR.PKG_EQUIP_UTILITY&lt;br/&gt;IS&lt;br/&gt;/****************************************************************************************************************&lt;br/&gt;||  Program Name    : pkg_equip_utility&lt;br/&gt;||  Created By      : knoll&lt;br/&gt;||  Created Date    : FEB-2015&lt;br/&gt;||  Subject Area    : General&lt;br/&gt;||  Description     : The package pkg_equip_utility is for SOLO equipment processing.&lt;br/&gt;||  Change log:&lt;br/&gt;||&lt;br/&gt;||   Changed By      Changed On      Change Description&lt;br/&gt;||   --------------  --------------  --------------------------------------------------------------------------&lt;br/&gt;||   Senthil          06/10/2015     - Modified recon_cutoff_time function to use recon_process_ctrl table.&lt;br/&gt;||   Senthil          06/10/2015     - Added new procedures for Equipment Change notification (Moved from rrt and recon pkg)&lt;br/&gt;||                                       update_settop_box, finalize&lt;br/&gt;******************************************************************************************************************/&lt;br/&gt;   SUBTYPE t_unit_name IS VARCHAR2 (30);&lt;br/&gt;&lt;br/&gt;   SUBTYPE t_userid IS VARCHAR2 (100 BYTE);&lt;br/&gt;&lt;br/&gt;   PROCEDURE update_settop_box (&lt;br/&gt;      p_process_rec_i        IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i         IN   t_userid,&lt;br/&gt;      p_equip_prod_inst_id   IN   t_equip_prod_inst.equip_prod_inst_id%TYPE&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   FUNCTION cnvrt_eqmt_addr (i_eqmt_addr IN VARCHAR2)&lt;br/&gt;      RETURN VARCHAR2&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : Function cnvrt_eqmt_addr&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : Convert Solo mac addresses to standard hex format.&lt;br/&gt;      ||                       Note: Solo mac addresses from CSG/Vantage have already had colons removed,&lt;br/&gt;      ||                       been trimmed etc.  Mac addresses from other source data may require changes!!!&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_eqmt_addr     VARCHAR2 (20) := NULL;&lt;br/&gt;      l_format_code   CHAR (1)      := NULL;&lt;br/&gt;      l_length        NUMBER        := 0;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_eqmt_addr := i_eqmt_addr;&lt;br/&gt;      l_length := LENGTH (l_eqmt_addr);&lt;br/&gt;&lt;br/&gt;      -- Length 12, nothing to do&lt;br/&gt;      IF l_length = 12&lt;br/&gt;      THEN&lt;br/&gt;         NULL;&lt;br/&gt;      -- Length 9&lt;br/&gt;      ELSIF l_length = 9&lt;br/&gt;      THEN&lt;br/&gt;         l_eqmt_addr :=&lt;br/&gt;                     TRIM (TO_CHAR (TO_NUMBER (l_eqmt_addr), &apos;XXXXXXXXXXXX&apos;));&lt;br/&gt;         -- Convert to Hex&lt;br/&gt;         l_eqmt_addr := LPAD (l_eqmt_addr, 12, &apos;0&apos;);&lt;br/&gt;                                            -- Pad with Zeros to Length of 12&lt;br/&gt;      -- Length 16 or greater&lt;br/&gt;      ELSIF l_length &gt;= 16&lt;br/&gt;      THEN&lt;br/&gt;         l_eqmt_addr := SUBSTR (l_eqmt_addr, 1, l_length - 3);&lt;br/&gt;         -- Remove Last 3 Digits&lt;br/&gt;         l_eqmt_addr := LTRIM (l_eqmt_addr, &apos;0&apos;);     -- Remove Leading Zeros&lt;br/&gt;         l_eqmt_addr :=&lt;br/&gt;                     TRIM (TO_CHAR (TO_NUMBER (l_eqmt_addr), &apos;XXXXXXXXXXXX&apos;));&lt;br/&gt;         -- Convert to Hex&lt;br/&gt;         l_eqmt_addr := LPAD (l_eqmt_addr, 12, &apos;0&apos;);&lt;br/&gt;                                            -- Pad with Zeros to Length of 12&lt;br/&gt;      -- Unknown format&lt;br/&gt;      ELSE&lt;br/&gt;         l_eqmt_addr := NULL;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      RETURN l_eqmt_addr;&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         RETURN NULL;&lt;br/&gt;   END cnvrt_eqmt_addr;&lt;br/&gt;&lt;br/&gt;   FUNCTION is_csg_settop_box (equip_type IN VARCHAR2)&lt;br/&gt;      RETURN BOOLEAN&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : Function is_csg_settop_box&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : Looks at the equipment type value passed in, and from a CSG equipment perspective,&lt;br/&gt;      ||                       determines whether that represents a settop box.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_return   BOOLEAN := FALSE;&lt;br/&gt;   BEGIN&lt;br/&gt;      IF (equip_type IS NOT NULL)&lt;br/&gt;      THEN&lt;br/&gt;         IF (LENGTH (equip_type) IN (1, 2))&lt;br/&gt;         THEN&lt;br/&gt;            IF (   equip_type IN (&apos;S1&apos;, &apos;S2&apos;)&lt;br/&gt;                OR (    (   equip_type LIKE &apos;K%&apos;&lt;br/&gt;                         OR equip_type LIKE &apos;W%&apos;&lt;br/&gt;                         OR equip_type LIKE &apos;Y%&apos;&lt;br/&gt;                        )&lt;br/&gt;                    AND (   LENGTH (equip_type) = 1&lt;br/&gt;                         OR SUBSTR (equip_type, 2, 1) NOT IN (&apos;A&apos;, &apos;C&apos;, &apos;0&apos;)&lt;br/&gt;                        )&lt;br/&gt;                   )&lt;br/&gt;               )&lt;br/&gt;            THEN&lt;br/&gt;               l_return := TRUE;&lt;br/&gt;            END IF;&lt;br/&gt;         END IF;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      RETURN l_return;&lt;br/&gt;   END is_csg_settop_box;&lt;br/&gt;&lt;br/&gt;   FUNCTION recon_cutoff_time&lt;br/&gt;      RETURN TIMESTAMP&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : Function recon_cutoff_time&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : Looks at current timestamp; if AM use 9:30pm yesterday, else use 9:30pm today.&lt;br/&gt;      ||&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_current_recon_start_time   TIMESTAMP;&lt;br/&gt;   BEGIN&lt;br/&gt;      BEGIN&lt;br/&gt;         SELECT recon_start_dttm&lt;br/&gt;           INTO l_current_recon_start_time&lt;br/&gt;           FROM stg.recon_process_ctrl&lt;br/&gt;          WHERE record_stat = &apos;I&apos;;&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN NO_DATA_FOUND&lt;br/&gt;         THEN&lt;br/&gt;            RAISE exp_recon_not_started;&lt;br/&gt;         WHEN TOO_MANY_ROWS&lt;br/&gt;         THEN&lt;br/&gt;            RAISE exp_multiple_logs_for_recon;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      RETURN l_current_recon_start_time;&lt;br/&gt;   END recon_cutoff_time;&lt;br/&gt;&lt;br/&gt;   PROCEDURE finalize (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i    IN   VARCHAR2&lt;br/&gt;   )&lt;br/&gt;/****************************************************************************************************************&lt;br/&gt;||  SubProgram Name    : Procedure finalize&lt;br/&gt;||  Estimated Run Time :&lt;br/&gt;||  Description        : Called after rrt_elo_location and rrt_eqp_base have been processed.&lt;br/&gt;||                       1. Updates t_equip_prod_inst;&lt;br/&gt;||                       2. Updates t_settop_box_instance;&lt;br/&gt;||                       3. Delete the rows from stg.work_queue_vnt_eqp for &apos;EQUIP_PROD_INST_ID&apos;.&lt;br/&gt;||                       4. Puts the distinct account number from stg.work_queue_vnt_eqp on the advanced queue;&lt;br/&gt;||                       5. Deletes the rows from stg.work_queue_vnt_eqp for &apos;ACCOUNT_ID&apos;.&lt;br/&gt;****************************************************************************************************************/&lt;br/&gt;   IS&lt;br/&gt;      CURSOR cur_work_queue_equip&lt;br/&gt;      IS&lt;br/&gt;         SELECT DISTINCT epi.equip_prod_inst_id, sbi.settop_box_instance_id&lt;br/&gt;                    FROM stg.work_queue_vnt_eqp wq INNER JOIN t_equip_prod_inst epi&lt;br/&gt;                         ON epi.equip_prod_inst_id = wq.valcol&lt;br/&gt;                         LEFT OUTER JOIN t_settop_box_instance sbi&lt;br/&gt;                         ON sbi.settop_box_instance_id = wq.valcol&lt;br/&gt;                   WHERE keycol = &apos;EQUIP_PROD_INST_ID&apos;;&lt;br/&gt;&lt;br/&gt;      CURSOR cur_work_queue_account&lt;br/&gt;      IS&lt;br/&gt;         SELECT   xref.sub_acct_num AS account_num&lt;br/&gt;             FROM stg.work_queue_vnt_eqp wq INNER JOIN t_account_vantage_xref xref&lt;br/&gt;                  ON xref.account_id = wq.valcol&lt;br/&gt;            WHERE keycol = &apos;ACCOUNT_ID&apos;&lt;br/&gt;              AND NOT EXISTS (&lt;br/&gt;                     SELECT 1&lt;br/&gt;                       FROM t_sys_prin_exclusion exc&lt;br/&gt;                      WHERE TO_CHAR(exc.principal) = SUBSTR (xref.sub_acct_num, 5, 2)||&apos;00&apos;&lt;br/&gt;                        AND TO_CHAR(exc.SYSTEM) = SUBSTR (xref.sub_acct_num, 1, 4)&lt;br/&gt;                        AND exc.application_name = &apos;R4_APPLICATION&apos;&lt;br/&gt;						AND exc.record_stat = &apos;A&apos;)&lt;br/&gt;         GROUP BY xref.sub_acct_num&lt;br/&gt;         ORDER BY MIN (wq.created_dttm);&lt;br/&gt;&lt;br/&gt;      l_proc_name   t_unit_name := &apos;FINALIZE&apos;;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || pkg_utility.c_proc_start_text&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      -- update t_equip_prod_inst and t_settop_box_instance&lt;br/&gt;      FOR equip_inst IN cur_work_queue_equip&lt;br/&gt;      LOOP&lt;br/&gt;         IF (equip_inst.settop_box_instance_id IS NOT NULL)&lt;br/&gt;         THEN&lt;br/&gt;            update_settop_box (p_process_rec_i,&lt;br/&gt;                               p_audit_user_i,&lt;br/&gt;                               equip_inst.settop_box_instance_id&lt;br/&gt;                              );&lt;br/&gt;         END IF;&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      DELETE FROM stg.work_queue_vnt_eqp&lt;br/&gt;            WHERE keycol = &apos;EQUIP_PROD_INST_ID&apos;;&lt;br/&gt;&lt;br/&gt;      COMMIT;&lt;br/&gt;&lt;br/&gt;      -- queue the accounts for equipment notification&lt;br/&gt;      FOR chg_account IN cur_work_queue_account&lt;br/&gt;      LOOP&lt;br/&gt;         pkg_logging.log_information (p_process_rec_i,&lt;br/&gt;                                         l_proc_name&lt;br/&gt;                                      || &apos;, queue notification for account &apos;&lt;br/&gt;                                      || chg_account.account_num&lt;br/&gt;                                     );&lt;br/&gt;         pkg_osb_service.enqueue_equipment_change (SYSDATE,&lt;br/&gt;                                                   chg_account.account_num&lt;br/&gt;                                                  );&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      DELETE FROM stg.work_queue_vnt_eqp&lt;br/&gt;            WHERE keycol = &apos;ACCOUNT_ID&apos;;&lt;br/&gt;&lt;br/&gt;      COMMIT;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || pkg_utility.c_proc_end_text&lt;br/&gt;                            );&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                       l_proc_name&lt;br/&gt;                                    || &apos;, exception=&apos;&lt;br/&gt;                                    || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name || pkg_utility.c_proc_end_text&lt;br/&gt;                               );&lt;br/&gt;         RAISE;&lt;br/&gt;   END finalize;&lt;br/&gt;&lt;br/&gt;   PROCEDURE update_settop_box (&lt;br/&gt;      p_process_rec_i        IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i         IN   t_userid,&lt;br/&gt;      p_equip_prod_inst_id   IN   t_equip_prod_inst.equip_prod_inst_id%TYPE&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      l_settop_box_instance_id   t_settop_box_instance.settop_box_instance_id%TYPE;&lt;br/&gt;      l_estb_mac_address         t_settop_box_instance.estb_mac_address%TYPE;&lt;br/&gt;      l_ecm_mac_address          t_settop_box_instance.ecm_mac_address%TYPE;&lt;br/&gt;      l_record_stat              t_settop_box_instance.record_stat%TYPE;&lt;br/&gt;&lt;br/&gt;      CURSOR cur_settop_box&lt;br/&gt;      IS&lt;br/&gt;         SELECT sb.estb_mac_address, sb.ecm_mac_address,&lt;br/&gt;                pkg_equip_utility.cnvrt_eqmt_addr&lt;br/&gt;                                 (ec01.equip_mac_address_id)&lt;br/&gt;                                                           AS mac_address_01,&lt;br/&gt;                pkg_equip_utility.cnvrt_eqmt_addr&lt;br/&gt;                         (ec01.equip_sec_mac_address_id)&lt;br/&gt;                                                       AS sec_mac_address_01,&lt;br/&gt;                pkg_equip_utility.cnvrt_eqmt_addr&lt;br/&gt;                                 (ecem.equip_mac_address_id)&lt;br/&gt;                                                           AS mac_address_em,&lt;br/&gt;                pkg_equip_utility.cnvrt_eqmt_addr&lt;br/&gt;                         (ecem.equip_sec_mac_address_id)&lt;br/&gt;                                                       AS sec_mac_address_em,&lt;br/&gt;                pkg_equip_utility.cnvrt_eqmt_addr&lt;br/&gt;                                 (ecvh.equip_mac_address_id)&lt;br/&gt;                                                           AS mac_address_vh,&lt;br/&gt;                pkg_equip_utility.cnvrt_eqmt_addr&lt;br/&gt;                         (ecvh.equip_sec_mac_address_id)&lt;br/&gt;                                                       AS sec_mac_address_vh,&lt;br/&gt;                sb.record_stat&lt;br/&gt;           FROM t_settop_box_instance sb LEFT OUTER JOIN t_equip_component ec01&lt;br/&gt;                ON ec01.equip_prod_inst_id = sb.settop_box_instance_id&lt;br/&gt;              AND ec01.equip_component_type_cd = &apos;01&apos;&lt;br/&gt;                LEFT OUTER JOIN t_equip_component ecem&lt;br/&gt;                ON ecem.equip_prod_inst_id = sb.settop_box_instance_id&lt;br/&gt;              AND ecem.equip_component_type_cd = &apos;EM&apos;&lt;br/&gt;                LEFT OUTER JOIN t_equip_component ecvh&lt;br/&gt;                ON ecvh.equip_prod_inst_id = sb.settop_box_instance_id&lt;br/&gt;              AND ecvh.equip_component_type_cd = &apos;VH&apos;&lt;br/&gt;          WHERE settop_box_instance_id = l_settop_box_instance_id;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_settop_box_instance_id := p_equip_prod_inst_id;&lt;br/&gt;&lt;br/&gt;      FOR box IN cur_settop_box&lt;br/&gt;      LOOP&lt;br/&gt;         l_estb_mac_address :=&lt;br/&gt;            NVL (box.mac_address_01,&lt;br/&gt;                 NVL (box.sec_mac_address_vh, box.mac_address_vh)&lt;br/&gt;                );&lt;br/&gt;&lt;br/&gt;         IF (box.mac_address_01 IS NULL)&lt;br/&gt;         THEN&lt;br/&gt;            l_ecm_mac_address := box.mac_address_em;&lt;br/&gt;         ELSE&lt;br/&gt;            l_ecm_mac_address := NULL;&lt;br/&gt;         END IF;&lt;br/&gt;&lt;br/&gt;         IF (   (NVL (l_estb_mac_address, &apos;X&apos;) &lt;&gt;&lt;br/&gt;                                               NVL (box.estb_mac_address, &apos;X&apos;)&lt;br/&gt;                )&lt;br/&gt;             OR (NVL (l_ecm_mac_address, &apos;X&apos;) &lt;&gt;&lt;br/&gt;                                                NVL (box.ecm_mac_address, &apos;X&apos;)&lt;br/&gt;                )&lt;br/&gt;             OR box.record_stat &lt;&gt; &apos;A&apos;&lt;br/&gt;            )&lt;br/&gt;         THEN&lt;br/&gt;            UPDATE t_settop_box_instance sbi&lt;br/&gt;               SET sbi.estb_mac_address = l_estb_mac_address,&lt;br/&gt;                   sbi.ecm_mac_address = l_ecm_mac_address,&lt;br/&gt;                   sbi.modified_dttm = SYSTIMESTAMP,&lt;br/&gt;                   sbi.modified_by = p_audit_user_i,&lt;br/&gt;                   sbi.record_stat = &apos;A&apos;&lt;br/&gt;             WHERE sbi.settop_box_instance_id = p_equip_prod_inst_id;&lt;br/&gt;         END IF;&lt;br/&gt;      END LOOP;&lt;br/&gt;   END update_settop_box;&lt;br/&gt;END pkg_equip_utility;</source>
</body>
</PackageOracle>
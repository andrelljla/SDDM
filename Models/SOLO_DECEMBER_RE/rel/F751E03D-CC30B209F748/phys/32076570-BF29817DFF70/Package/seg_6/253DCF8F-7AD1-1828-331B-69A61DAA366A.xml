<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PKG_VNT_AGENT_TRANSFER" directorySegmentName="seg_6" id="253DCF8F-7AD1-1828-331B-69A61DAA366A">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_AGENT_TRANSFER</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:17:27 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE      CHTR.PKG_VNT_AGENT_TRANSFER&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name    : PKG_VNT_AGENT_TRANSFER&lt;br/&gt;   ||  Created By      : Knoll&lt;br/&gt;   ||  Created Date    : 08-Jan-2015&lt;br/&gt;   ||  Description     : SoloDB Agent transfer procedures&lt;br/&gt;   ||&lt;br/&gt;   ||   Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||   Changed By            Changed On               Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   &lt;br/&gt;   PROCEDURE account_transfer;&lt;br/&gt;&lt;br/&gt;END pkg_vnt_agent_transfer;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PKG_VNT_AGENT_TRANSFER" id="253DCF8F-7AD1-1828-331B-69A61DAA366A">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_AGENT_TRANSFER</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:17:28 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE BODY      CHTR.PKG_VNT_AGENT_TRANSFER&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name    : pkg_vnt_agent_transfer&lt;br/&gt;   ||  Created By      : Knoll&lt;br/&gt;   ||  Created Date    : 08-Jan-2015&lt;br/&gt;   ||  Description     : SoloDB Agent transfer procedures&lt;br/&gt;   ||&lt;br/&gt;   ||   Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||   Changed By            Changed On               Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   SUBTYPE t_unit_name IS VARCHAR2 (30);&lt;br/&gt;&lt;br/&gt;   -- CONSTANTS&lt;br/&gt;   c_pkg_name CONSTANT t_unit_name := &apos;PKG_VNT_AGENT_TRANSFER&apos;;&lt;br/&gt;&lt;br/&gt;PROCEDURE account_transfer&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  SubProgram Name    : account_transfer&lt;br/&gt;   ||  Estimated Run Time :&lt;br/&gt;   ||  Description        : Update Vantage sub account number on account related Solo tables.&lt;br/&gt;   *****************************************************************************************************************&lt;br/&gt;   */&lt;br/&gt;   l_proc_name t_unit_name := &apos;ACCOUNT_TRANSFER&apos;;&lt;br/&gt;   l_process_name t_process_log.process_name%TYPE := c_pkg_name;&lt;br/&gt;   l_process_rec pkg_logging.t_process_rec;&lt;br/&gt;   l_cnt NUMBER;&lt;br/&gt;&lt;br/&gt;BEGIN&lt;br/&gt;   l_process_rec.process_name := l_process_name;&lt;br/&gt;   pkg_logging.begin_process (l_process_rec);&lt;br/&gt;&lt;br/&gt;   --------------------------------&lt;br/&gt;   -- Update t_account_vantage_xref&lt;br/&gt;   --------------------------------&lt;br/&gt;   pkg_logging.log_information (l_process_rec, &apos;Update t_account_vantage_xref&apos;);&lt;br/&gt;   &lt;br/&gt;   l_cnt := 0;&lt;br/&gt;   FOR arow IN (&lt;br/&gt;      SELECT b.rowid as rid, b.account_id, a.new_account_num&lt;br/&gt;      FROM stg.vnt_account_transfer a&lt;br/&gt;      INNER JOIN t_account_vantage_xref b&lt;br/&gt;      ON b.sub_acct_num=a.old_account_num)&lt;br/&gt;   LOOP&lt;br/&gt;      UPDATE t_account_vantage_xref xref&lt;br/&gt;      SET xref.sub_acct_num=arow.new_account_num&lt;br/&gt;         ,modified_by=c_pkg_name&lt;br/&gt;         ,modified_dttm=SYSDATE&lt;br/&gt;      WHERE xref.rowid=arow.rid&lt;br/&gt;         AND xref.account_id=arow.account_id;&lt;br/&gt;         &lt;br/&gt;      l_cnt := l_cnt + 1;   &lt;br/&gt;      IF (MOD(l_cnt,1000) = 0) THEN&lt;br/&gt;         COMMIT;&lt;br/&gt;      END IF;&lt;br/&gt;   END LOOP;&lt;br/&gt;   COMMIT;&lt;br/&gt;   pkg_logging.log_information (l_process_rec, &apos;Rows updated = &apos; || l_cnt);&lt;br/&gt;   &lt;br/&gt;   --------------------------------&lt;br/&gt;   -- Update t_account&lt;br/&gt;   --------------------------------&lt;br/&gt;   pkg_logging.log_information (l_process_rec, &apos;Update t_account&apos;);&lt;br/&gt;   &lt;br/&gt;   l_cnt := 0;&lt;br/&gt;   FOR arow IN (&lt;br/&gt;      SELECT b.rowid as rid, b.account_id, a.new_account_num&lt;br/&gt;      FROM stg.vnt_account_transfer a&lt;br/&gt;      INNER JOIN t_account b&lt;br/&gt;      ON b.account_num=a.old_account_num)&lt;br/&gt;   LOOP&lt;br/&gt;      UPDATE t_account acct&lt;br/&gt;      SET acct.account_num=arow.new_account_num&lt;br/&gt;         ,modified_by=c_pkg_name&lt;br/&gt;         ,modified_dttm=SYSDATE&lt;br/&gt;      WHERE acct.rowid=arow.rid&lt;br/&gt;         AND acct.account_id=arow.account_id;&lt;br/&gt;         &lt;br/&gt;      l_cnt := l_cnt + 1;   &lt;br/&gt;      IF (MOD(l_cnt,1000) = 0) THEN&lt;br/&gt;         COMMIT;&lt;br/&gt;      END IF;&lt;br/&gt;   END LOOP;&lt;br/&gt;   COMMIT;&lt;br/&gt;   pkg_logging.log_information (l_process_rec, &apos;Rows updated = &apos; || l_cnt);&lt;br/&gt;   &lt;br/&gt;   pkg_logging.end_process (l_process_rec, &apos;SUCCESS&apos;);&lt;br/&gt;   &lt;br/&gt;EXCEPTION&lt;br/&gt;WHEN OTHERS THEN&lt;br/&gt;   ROLLBACK;&lt;br/&gt;   pkg_logging.log_exception (l_process_rec, DBMS_UTILITY.format_error_stack ());&lt;br/&gt;   pkg_logging.end_process (l_process_rec, &apos;FAILURE&apos;);&lt;br/&gt;   RAISE;&lt;br/&gt;END account_transfer;&lt;br/&gt;&lt;br/&gt;END pkg_vnt_agent_transfer;</source>
</body>
</PackageOracle>
<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PKG_VNT_RECON_OPI_OPEN_ITEM" directorySegmentName="seg_6" id="2D81A07C-6109-66B4-0D4E-BA968EAB25D4">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_RECON_OPI_OPEN_ITEM</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:19:50 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE      CHTR.PKG_VNT_RECON_OPI_OPEN_ITEM&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name    : PKG_VNT_RECON_OPI_OPEN_ITEM&lt;br/&gt;   ||  Created By      : Cognizant&lt;br/&gt;   ||  Created Date    : 31-DEC-2014&lt;br/&gt;   ||  Subject Area    : General&lt;br/&gt;   ||  Description     : The package pkg_vnt_recon_opi_open_item controls the reconcillation load of the&lt;br/&gt;   ||                                                Vantage opi_open_item table into SOLODB.&lt;br/&gt;   ||   Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ||&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   PROCEDURE LOAD(&lt;br/&gt;      p_audit_user_i   IN   VARCHAR2,&lt;br/&gt;      p_max_thread         NUMBER DEFAULT 1,&lt;br/&gt;      p_reminder_thread  NUMBER DEFAULT 1,&lt;br/&gt;      p_batchsize           NUMBER DEFAULT 1000&lt;br/&gt;   );&lt;br/&gt;END PKG_VNT_RECON_OPI_OPEN_ITEM;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PKG_VNT_RECON_OPI_OPEN_ITEM" id="2D81A07C-6109-66B4-0D4E-BA968EAB25D4">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_RECON_OPI_OPEN_ITEM</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:19:58 UTC</createdTime>
<ownerDesignName>SOLO_DECEMBER_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE BODY      CHTR.PKG_VNT_RECON_OPI_OPEN_ITEM&lt;br/&gt;IS&lt;br/&gt;/*********************************************************************************************************************************&lt;br/&gt;   ||  Program Name    : PKG_VNT_RECON_OPI_OPEN_ITEM&lt;br/&gt;   ||  Created By      : Cognizant&lt;br/&gt;   ||  Created Date    : 15-MAY-2015&lt;br/&gt;   ||  Subject Area    : General&lt;br/&gt;   ||  Description     : The package pkg_vnt_recon_opi_open_item controls the reconciliation load of the&lt;br/&gt;   ||                    Vantage opi_open_item table into SOLODB.&lt;br/&gt;   ||  Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ||  Cognizant         26-Jan-2015      Modifiled procedure load_order to add call to insert_bus_inter_itm_vnt_xref&lt;br/&gt;   ||                                     for Work Orders also.&lt;br/&gt;   ||                                     Modified the function get_bus_interact_item_order to include&lt;br/&gt;   ||                                     xref table for work orders also.&lt;br/&gt;   ||&lt;br/&gt;   ||  Cognizant         02-Mar-2015      The exception logging modified in procedure INSERT_BUS_INTERACT_ITEM&lt;br/&gt;   ||&lt;br/&gt;   ||  Cognizant         04-Mar-2015      The batch size is made as 1&lt;br/&gt;   ||  Cognizant         05-Mar-2015      Removed  bus_interact_item_type_cd from get_bus_interact function&lt;br/&gt;   ||  Cognizant         13-Mar-2015      Deferred Defect fix&lt;br/&gt;   ||  Cognizant         16-Mar-2015      Syching of column level population logic between Recon and Initial of NRT/RRT Packages&lt;br/&gt;   ||  Cognizant         18-Mar-2015      Included condition to bypass the records with dummy order number&lt;br/&gt;   ||  Cognizant         07-Apr-2015      Modified cursor query to support ROWID based multithreading&lt;br/&gt;   ||  Cognizant         07-Apr-2015      Code changes to remove the descrepanies between NRT/RRT , Initial Load and Reconciliation.&lt;br/&gt;   ||  Cognizant         10-Apr-2015      Trim included for character column in cursor query.&lt;br/&gt;   ||  Cognizant         17-Apr-2015      Transformation logic of column item_status_opi modified.&lt;br/&gt;   ||  Cognizant         15-MAY-2015      Batch Processing introduced as part of performance improvement&lt;br/&gt;   ||  Cognizant         18-MAY-2015      Join condition on t_billing_product(serv) corrected&lt;br/&gt;************************************************************************************************************************************/&lt;br/&gt;   SUBTYPE t_unit_name IS VARCHAR2 (30);&lt;br/&gt;   c_pkg_name              CONSTANT t_unit_name := &apos;PKG_VNT_RECON_OPI_OPEN_ITEM&apos;;&lt;br/&gt;   c_bulk_errors             EXCEPTION;&lt;br/&gt;   PRAGMA EXCEPTION_INIT (c_bulk_errors, -24381);&lt;br/&gt;   g_max_thread            NUMBER := 1;&lt;br/&gt;   g_reminder_thread     NUMBER := 1;&lt;br/&gt;   g_batchsize                NUMBER := 1;&lt;br/&gt;   g_process_record_cnt NUMBER := 0;&lt;br/&gt;   g_error_record_cnt     NUMBER := 0;&lt;br/&gt;   l_current_recon_start_time   stg.recon_process_ctrl.recon_start_dttm%TYPE;&lt;br/&gt;&lt;br/&gt;   CURSOR cur_stg_opi_open_item&lt;br/&gt;   IS&lt;br/&gt;      SELECT CASE&lt;br/&gt;                WHEN opi.sys_opi = 8313&lt;br/&gt;                   THEN &apos;BRS&apos;&lt;br/&gt;                ELSE &apos;VNT&apos;&lt;br/&gt;             END AS data_source_type_cd,&lt;br/&gt;             opi.ROWID AS ID, opi.record_load_cd, 0 AS bus_interact_item_id,&lt;br/&gt;             ord_xref.bus_interact_id, acct_xref.account_id,&lt;br/&gt;             job_xref.bus_interact_id job_bus_interact_id, opi.serv_id_opi,&lt;br/&gt;             opi.order_no_opi || opi.serv_id_opi AS source_system_id,&lt;br/&gt;             opi.order_no_opi AS ord_no,&lt;br/&gt;             DECODE (opi.job_seq_no_opi,&lt;br/&gt;                     0, r.request_type_cd,&lt;br/&gt;                     pkg_utility.c_request_type_cd_wrkord&lt;br/&gt;                    ) AS bus_interact_item_type_cd,&lt;br/&gt;             opi.bef_qty_opi AS before_item_qty,&lt;br/&gt;             opi.aft_qty_opi AS after_item_qty,&lt;br/&gt;             TRIM(opi.bill_cde_opi) AS package_billing_product_cd,&lt;br/&gt;             TRIM(opi.serv_cde_opi) AS service_billing_product_cd,&lt;br/&gt;            -- opi.bill_from_dte_opi AS bill_start_dttm,  -- Modified on 02MAR2015&lt;br/&gt;             TO_DATE(DECODE(opi.bill_start_dte_opi,  to_date(&apos;00010101&apos;, &apos;YYYYMMDD&apos;),&lt;br/&gt;                    NULL, opi.bill_start_dte_opi)) AS bill_start_dttm,&lt;br/&gt;             TRIM(opi.lob_act_opi) AS impacted_line_of_business_cd,&lt;br/&gt;             /* Modified on 31-MAR-2015 by Cognizant  - Reverted the changes on 17APR by Cognizant*/&lt;br/&gt;          --   TRIM (opi.item_status_opi) AS product_order_item_status_cd,&lt;br/&gt;             NVL (TRIM (opi.item_status_opi),&lt;br/&gt;                  &apos;U&apos;&lt;br/&gt;                 ) AS product_order_item_status_cd,&lt;br/&gt;                 /* Modified on 31-MAR-2015 by Cognizant */&lt;br/&gt;             opi.job_seq_no_opi AS sequence_num,&lt;br/&gt;             opi.create_dte_opi AS create_dttm,&lt;br/&gt;             opi.sub_acct_no_opi AS sub_acct_no_opi,&lt;br/&gt;             opi.cust_acct_no_opi AS cust_acct_no_opi,&lt;br/&gt;             --Added by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;             pack.billing_product_id AS billing_package_product_id,&lt;br/&gt;             serv.billing_product_id AS billing_service_product_id,&lt;br/&gt;             TRIM(opi.acct_stage_opi) AS acct_stage,&lt;br/&gt;             TRIM(opi.lob_acct_stage_opi) AS lob_acct_stage,&lt;br/&gt;             opi.bill_amt_opi AS bill_amt&lt;br/&gt;             --End-by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;        FROM stg.vnt_opi_open_item_rec_delta opi INNER JOIN t_bus_inter_vantage_ord_xref ord_xref&lt;br/&gt;             ON ord_xref.ord_no = opi.order_no_opi&lt;br/&gt;             INNER JOIN t_bus_interact bi&lt;br/&gt;             ON bi.bus_interact_id = ord_xref.bus_interact_id&lt;br/&gt;             INNER JOIN t_request r&lt;br/&gt;             ON r.request_interaction_id = bi.bus_interact_id&lt;br/&gt;             INNER JOIN t_account_vantage_xref acct_xref&lt;br/&gt;             ON acct_xref.sub_acct_num = opi.sub_acct_no_opi&lt;br/&gt;             LEFT OUTER JOIN t_busn_intrn_vnt_job_xref job_xref&lt;br/&gt;             ON (job_xref.order_num = opi.order_no_opi&lt;br/&gt;             AND job_xref.job_seq_num = opi.job_seq_no_opi&lt;br/&gt;             AND opi.job_seq_no_opi &gt; 0 )&lt;br/&gt;             --Added by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;             LEFT OUTER JOIN t_billing_product pack&lt;br/&gt;               ON pack.billing_product_cd = opi.bill_cde_opi&lt;br/&gt;             AND pack.data_source_type_cd =&lt;br/&gt;                               CASE&lt;br/&gt;                                  WHEN opi.sys_opi = 8313&lt;br/&gt;                                     THEN &apos;BRS&apos;&lt;br/&gt;                                  ELSE &apos;VNT&apos;&lt;br/&gt;                               END&lt;br/&gt;             AND pack.record_stat = pkg_utility.c_record_active&lt;br/&gt;             LEFT OUTER JOIN t_billing_product serv&lt;br/&gt;               ON serv.billing_product_cd = opi.serv_cde_opi&lt;br/&gt;             AND serv.data_source_type_cd =&lt;br/&gt;                               CASE&lt;br/&gt;                                  WHEN opi.sys_opi = 8313&lt;br/&gt;                                     THEN &apos;BRS&apos;&lt;br/&gt;                                  ELSE &apos;VNT&apos;&lt;br/&gt;                               END&lt;br/&gt;             AND serv.record_stat = pkg_utility.c_record_active&lt;br/&gt;             --End-by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;       WHERE opi.record_load_cd IS NULL&lt;br/&gt;         AND MOD (ASCII (SUBSTR (opi.ROWID, LENGTH (opi.ROWID), 1)), g_max_thread ) = (g_reminder_thread - 1)&lt;br/&gt;         --AND opi.sys_opi &gt;= g_sys_from AND opi.sys_opi &lt; g_sys_to&lt;br/&gt;         --AND MOD (opi.sys_opi, g_max_thread) = (g_reminder_thread - 1)&lt;br/&gt;         AND NOT EXISTS (&lt;br/&gt;                SELECT NULL&lt;br/&gt;                  FROM stg.vnt_oci_cur_item oci&lt;br/&gt;                 WHERE oci.sub_acct_no_oci = opi.sub_acct_no_opi&lt;br/&gt;                   AND oci.order_no_oci = opi.order_no_opi&lt;br/&gt;                   AND oci.job_seq_no_oci = opi.job_seq_no_opi&lt;br/&gt;                   AND oci.serv_id_oci = serv_id_opi);&lt;br/&gt;&lt;br/&gt;   TYPE t_cursor_data_tbl IS TABLE OF cur_stg_opi_open_item%ROWTYPE INDEX BY PLS_INTEGER;&lt;br/&gt;&lt;br/&gt;--   TYPE t_ptr_tbl IS TABLE OF PLS_INTEGER&lt;br/&gt;--      INDEX BY PLS_INTEGER;&lt;br/&gt;&lt;br/&gt;   -- Forward declarations&lt;br/&gt;   PROCEDURE insert_bus_interact_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_bus_inter_itm_vnt_xref (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_prod_order_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_prod_order_item_status (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_special_req_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_special_req_item_status (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_work_order_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_work_order_item_status (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE update_staging (&lt;br/&gt;      p_process_rec_i    IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN   VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   FUNCTION filter_item_for_order (&lt;br/&gt;      p_process_rec_i       IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io      IN  OUT NOCOPY  cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_select_order_type   IN   t_bus_interact.bus_interact_type_cd%TYPE&lt;br/&gt;   )&lt;br/&gt;      RETURN VARCHAR2;&lt;br/&gt;&lt;br/&gt;   FUNCTION get_bus_interact_item_order (&lt;br/&gt;      p_process_rec_i               IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_order_no                    IN              t_bus_interact_item_vnt_xref.order_num%TYPE,&lt;br/&gt;      p_serv_id                     IN              t_bus_interact_item_vnt_xref.serv_id%TYPE,&lt;br/&gt;      p_bus_interact_item_type_cd   IN              t_bus_interact_item.bus_interact_item_type_cd%TYPE,&lt;br/&gt;      p_row_io                      IN OUT NOCOPY   t_bus_interact_item%ROWTYPE&lt;br/&gt;   )&lt;br/&gt;      RETURN BOOLEAN;&lt;br/&gt;&lt;br/&gt;   PROCEDURE LOAD (&lt;br/&gt;      p_audit_user_i      IN   VARCHAR2,&lt;br/&gt;      p_max_thread             NUMBER DEFAULT 1,&lt;br/&gt;      p_reminder_thread        NUMBER DEFAULT 1,&lt;br/&gt;      p_batchsize              NUMBER DEFAULT 1000&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : LOAD&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE LOAD open the Cursor and execute the records in loop&lt;br/&gt;      ||                       of WORK_ORDER_ITEM,SPECIAL_REQUEST_ITEMA , PRODUCT_ORDER_ITEM and bus_interact_item.&lt;br/&gt;      *****************************************************************************************************************&lt;br/&gt;      */&lt;br/&gt;      l_proc_name       t_unit_name := &apos;LOAD&apos;;&lt;br/&gt;      l_process_name  t_process_log.process_name%TYPE := c_pkg_name;&lt;br/&gt;      l_process_rec     pkg_logging.t_process_rec;&lt;br/&gt;      --l_cursor_data     cur_stg_opi_open_item%ROWTYPE;&lt;br/&gt;      l_filter_ptr            VARCHAR2(1);&lt;br/&gt;      l_cursor_data     t_cursor_data_tbl;&lt;br/&gt;      exp_recon_not_started         EXCEPTION;&lt;br/&gt;      exp_multiple_logs_for_recon   EXCEPTION;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_process_rec.process_name := l_process_name;&lt;br/&gt;      pkg_logging.begin_process (l_process_rec,&apos;p_audit_user_i=&apos; || p_audit_user_i);&lt;br/&gt;      pkg_logging.log_debug (l_process_rec,l_proc_name || &apos; &apos;|| pkg_utility.c_proc_start_text);&lt;br/&gt;&lt;br/&gt;      g_max_thread := p_max_thread;&lt;br/&gt;      g_reminder_thread := p_reminder_thread;&lt;br/&gt;     -- g_batchsize := 1;  Modified on 6MAY2015 by Cognizant&lt;br/&gt;      g_batchsize := p_batchsize;&lt;br/&gt;      g_process_record_cnt := 0;&lt;br/&gt;      g_error_record_cnt := 0;&lt;br/&gt;&lt;br/&gt;      IF pkg_utility.stopnow (c_pkg_name)&lt;br/&gt;        THEN&lt;br/&gt;           pkg_logging.end_process (l_process_rec,pkg_utility.c_process_cancel);&lt;br/&gt;           RETURN;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         SELECT recon_start_dttm&lt;br/&gt;           INTO l_current_recon_start_time&lt;br/&gt;            FROM stg.recon_process_ctrl&lt;br/&gt;             WHERE record_stat = &apos;I&apos;;&lt;br/&gt;      EXCEPTION&lt;br/&gt;      WHEN NO_DATA_FOUND&lt;br/&gt;         THEN&lt;br/&gt;            RAISE exp_recon_not_started;&lt;br/&gt;      WHEN TOO_MANY_ROWS&lt;br/&gt;         THEN&lt;br/&gt;            RAISE exp_multiple_logs_for_recon;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      IF cur_stg_opi_open_item%ISOPEN&lt;br/&gt;      THEN&lt;br/&gt;         CLOSE cur_stg_opi_open_item;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      OPEN cur_stg_opi_open_item;&lt;br/&gt;&lt;br/&gt;      LOOP&lt;br/&gt;         FETCH cur_stg_opi_open_item BULK COLLECT INTO l_cursor_data LIMIT g_batchsize;&lt;br/&gt;&lt;br/&gt;        IF (l_cursor_data.COUNT ( ) &gt; 0)&lt;br/&gt;        THEN&lt;br/&gt;         FOR i IN 1 .. l_cursor_data.COUNT&lt;br/&gt;          LOOP&lt;br/&gt;            -- Insert bus_interact_item&lt;br/&gt;            insert_bus_interact_item (l_process_rec,l_cursor_data(i),p_audit_user_i);&lt;br/&gt;&lt;br/&gt;            -- PROD_ORDER_ITEM&lt;br/&gt;            l_filter_ptr := &apos;N&apos;;&lt;br/&gt;            l_filter_ptr := filter_item_for_order (l_process_rec, l_cursor_data(i), pkg_utility.c_request_type_cd_prdord);&lt;br/&gt;            IF (l_filter_ptr = &apos;Y&apos;)&lt;br/&gt;              THEN&lt;br/&gt;                  insert_bus_inter_itm_vnt_xref (l_process_rec,&lt;br/&gt;                                           l_cursor_data(i),&lt;br/&gt;                                           --l_filter_ptr,&lt;br/&gt;                                           p_audit_user_i&lt;br/&gt;                                          );&lt;br/&gt;&lt;br/&gt;             insert_prod_order_item (l_process_rec,&lt;br/&gt;                                    l_cursor_data(i),&lt;br/&gt;                                    --l_filter_ptr,&lt;br/&gt;                                    p_audit_user_i&lt;br/&gt;                                   );&lt;br/&gt;            insert_prod_order_item_status (l_process_rec,&lt;br/&gt;                                           l_cursor_data(i),&lt;br/&gt;                                           --l_filter_ptr,&lt;br/&gt;                                           p_audit_user_i&lt;br/&gt;                                          );&lt;br/&gt;           -- l_filter_ptr.DELETE;&lt;br/&gt;              END IF;&lt;br/&gt;&lt;br/&gt;            -- SPECIAL_REQUEST_ITEM&lt;br/&gt;           l_filter_ptr := &apos;N&apos;;&lt;br/&gt;           l_filter_ptr := filter_item_for_order (l_process_rec, l_cursor_data(i), pkg_utility.c_request_type_cd_splreq);&lt;br/&gt;            IF  (l_filter_ptr = &apos;Y&apos;)&lt;br/&gt;            THEN&lt;br/&gt;               insert_bus_inter_itm_vnt_xref (l_process_rec,&lt;br/&gt;                                           l_cursor_data(i),&lt;br/&gt;                                           --l_filter_ptr,&lt;br/&gt;                                           p_audit_user_i&lt;br/&gt;                                          );&lt;br/&gt;               insert_special_req_item (l_process_rec,&lt;br/&gt;                                     l_cursor_data(i),&lt;br/&gt;                                    -- l_filter_ptr,&lt;br/&gt;                                     p_audit_user_i&lt;br/&gt;                                    );&lt;br/&gt;                insert_special_req_item_status (l_process_rec,&lt;br/&gt;                                            l_cursor_data(i),&lt;br/&gt;                                           -- l_filter_ptr,&lt;br/&gt;                                            p_audit_user_i&lt;br/&gt;                                           );&lt;br/&gt;           -- l_filter_ptr.DELETE;&lt;br/&gt;            END IF;&lt;br/&gt;            -- WORK_ORDER_ITEM&lt;br/&gt;            l_filter_ptr := &apos;N&apos;;&lt;br/&gt;            l_filter_ptr := filter_item_for_order(l_process_rec, l_cursor_data(i), pkg_utility.c_request_type_cd_wrkord);&lt;br/&gt;&lt;br/&gt;            IF  (l_filter_ptr = &apos;Y&apos;)&lt;br/&gt;            THEN&lt;br/&gt;                  insert_bus_inter_itm_vnt_xref (l_process_rec,&lt;br/&gt;                                           l_cursor_data(i),&lt;br/&gt;                                           --l_filter_ptr,&lt;br/&gt;                                           p_audit_user_i&lt;br/&gt;                                          );&lt;br/&gt;                 insert_work_order_item(l_process_rec,&lt;br/&gt;                                                l_cursor_data(i),&lt;br/&gt;                                               -- l_filter_ptr,&lt;br/&gt;                                                p_audit_user_i&lt;br/&gt;                                               );&lt;br/&gt;                 insert_work_order_item_status(l_process_rec,&lt;br/&gt;                                                           l_cursor_data(i),&lt;br/&gt;                                                          -- l_filter_ptr,&lt;br/&gt;                                                           p_audit_user_i&lt;br/&gt;                                                          );&lt;br/&gt;            END IF;&lt;br/&gt;           -- l_filter_ptr.DELETE;&lt;br/&gt;            update_staging (l_process_rec, l_cursor_data(i), p_audit_user_i);&lt;br/&gt;            COMMIT;&lt;br/&gt;&lt;br/&gt;          END LOOP;&lt;br/&gt;&lt;br/&gt;         END IF;&lt;br/&gt;&lt;br/&gt;         EXIT WHEN (l_cursor_data.COUNT ( ) &lt; g_batchsize) OR (pkg_utility.stopnow (c_pkg_name));&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      CLOSE cur_stg_opi_open_item;&lt;br/&gt;      --Making entry to the Process Child table against Total Processed Record Count&lt;br/&gt;      pkg_logging.process_log_detail_populate&lt;br/&gt;                          (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                           p_audit_bucket_i       =&gt; pkg_utility.c_prcssed_rec_text,&lt;br/&gt;                           p_audit_value_i        =&gt; g_process_record_cnt,&lt;br/&gt;                           p_process_id_i         =&gt; l_process_rec.process_id,&lt;br/&gt;                           p_in_audit_user_i      =&gt; p_audit_user_i&lt;br/&gt;                          );&lt;br/&gt;      --Making entry to the Process Child table against Total Error Record Count&lt;br/&gt;      pkg_logging.process_log_detail_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                             p_audit_bucket_i       =&gt; pkg_utility.c_error_rec_text,&lt;br/&gt;                             p_audit_value_i        =&gt; g_error_record_cnt,&lt;br/&gt;                             p_process_id_i         =&gt; l_process_rec.process_id,&lt;br/&gt;                             p_in_audit_user_i      =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      pkg_logging.end_process (l_process_rec, pkg_utility.c_process_success);&lt;br/&gt;      pkg_logging.log_debug (l_process_rec,l_proc_name || &apos; &apos; || pkg_utility.c_proc_end_text);&lt;br/&gt;   EXCEPTION&lt;br/&gt;   WHEN exp_recon_not_started&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception&lt;br/&gt;            (l_process_rec,&lt;br/&gt;                l_proc_name&lt;br/&gt;             || &apos;, exception = &apos;&lt;br/&gt;             || &apos;NO ACTIVE RECONCILIATION ENTRY FOUND IN STG.RECON_PROCESS_CTRL&apos;&lt;br/&gt;            );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         pkg_logging.log_debug (l_process_rec,l_proc_name|| &apos; &apos;|| pkg_utility.c_process_error);&lt;br/&gt;         IF (cur_stg_opi_open_item%ISOPEN)&lt;br/&gt;         THEN&lt;br/&gt;            CLOSE cur_stg_opi_open_item;&lt;br/&gt;         END IF;&lt;br/&gt;         RAISE;&lt;br/&gt;   WHEN exp_multiple_logs_for_recon&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception&lt;br/&gt;            (l_process_rec,&lt;br/&gt;                l_proc_name&lt;br/&gt;             || &apos;, exception = &apos;&lt;br/&gt;             || &apos;MULTIPLE ACTIVE RECONCILIATION ENTRIES FOUND IN STG.RECON_PROCESS_CTRL&apos;&lt;br/&gt;            );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         pkg_logging.log_debug (l_process_rec,l_proc_name|| &apos; &apos;|| pkg_utility.c_process_error);&lt;br/&gt;         IF (cur_stg_opi_open_item%ISOPEN)&lt;br/&gt;         THEN&lt;br/&gt;            CLOSE cur_stg_opi_open_item;&lt;br/&gt;         END IF;&lt;br/&gt;         RAISE;&lt;br/&gt;   WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception (l_process_rec,DBMS_UTILITY.format_error_stack());&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         IF cur_stg_opi_open_item%ISOPEN&lt;br/&gt;          THEN&lt;br/&gt;            CLOSE cur_stg_opi_open_item;&lt;br/&gt;         END IF;&lt;br/&gt;         RAISE;&lt;br/&gt;   END LOAD;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_bus_interact_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_BUS_INTERACT_ITEM&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_bus_interact_item will load the table &apos;t_bus_interact_item&apos;.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name               t_unit_name     := &apos;INSERT_BUS_INTERACT_ITEM&apos;;&lt;br/&gt;      l_errors                  NUMBER;&lt;br/&gt;      l_systimestamp            TIMESTAMP                     := SYSTIMESTAMP;&lt;br/&gt;      l_exist                   NUMBER;&lt;br/&gt;      l_bus_interact_item       t_bus_interact_item%ROWTYPE;&lt;br/&gt;      l_bus_interact_id         t_bus_interact_item.bus_interact_id%TYPE;&lt;br/&gt;      l_bus_interact_item_id    t_bus_interact_item.bus_interact_item_id%TYPE;&lt;br/&gt;      l_action_perform_record   stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string        stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key               stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details         stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      l_log_msg  VARCHAR2(100);&lt;br/&gt;      exp_null_bus_interact_id  EXCEPTION;&lt;br/&gt;   BEGIN&lt;br/&gt;      BEGIN&lt;br/&gt;       --  FOR i IN 1 .. p_cursor_data_io.COUNT&lt;br/&gt;       --  LOOP&lt;br/&gt;                    l_bus_interact_id := NULL;&lt;br/&gt;                    l_bus_interact_item_id := NULL;&lt;br/&gt;                    l_action_perform_record := &apos;&apos;;&lt;br/&gt;                    l_modif_val_string := &apos;&apos;;&lt;br/&gt;                    l_table_key := &apos;&apos;;&lt;br/&gt;                    l_account_details := &apos;&apos;;&lt;br/&gt;                    l_log_msg  :=&apos;&apos;;&lt;br/&gt;                    pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                              l_proc_name&lt;br/&gt;                                           || &apos;, &apos;&lt;br/&gt;                                           || pkg_utility.c_proc_start_text&lt;br/&gt;                                           || &apos;, ORD_NO = &apos;&lt;br/&gt;                                           || p_cursor_data_io.ord_no&lt;br/&gt;                                           || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                                           || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                          );&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;                 IF(p_cursor_data_io.ord_no != pkg_utility.c_dummy_order_no)&lt;br/&gt;                 THEN&lt;br/&gt;                       SELECT DECODE (p_cursor_data_io.bus_interact_item_type_cd,&lt;br/&gt;                                      pkg_utility.c_request_type_cd_wrkord, p_cursor_data_io.job_bus_interact_id,&lt;br/&gt;                                      p_cursor_data_io.bus_interact_id&lt;br/&gt;                                     )&lt;br/&gt;                         INTO l_bus_interact_id&lt;br/&gt;                           FROM DUAL;&lt;br/&gt;&lt;br/&gt;                       IF l_bus_interact_id IS NULL&lt;br/&gt;                        THEN&lt;br/&gt;                            RAISE exp_null_bus_interact_id;&lt;br/&gt;                       END IF;&lt;br/&gt;&lt;br/&gt;                       IF (get_bus_interact_item_order&lt;br/&gt;                                       (p_process_rec_i,&lt;br/&gt;                                        p_cursor_data_io.ord_no,&lt;br/&gt;                                        p_cursor_data_io.serv_id_opi,&lt;br/&gt;                                        p_cursor_data_io.bus_interact_item_type_cd,&lt;br/&gt;                                        l_bus_interact_item&lt;br/&gt;                                       )&lt;br/&gt;                          )&lt;br/&gt;                       THEN&lt;br/&gt;                          p_cursor_data_io.bus_interact_item_id := l_bus_interact_item.bus_interact_item_id;&lt;br/&gt;                            IF (&lt;br/&gt;                                (&lt;br/&gt;                                NVL (l_bus_interact_item.source_system_id, pkg_utility.c_recon_null_string ) &lt;&gt; NVL (p_cursor_data_io.source_system_id,pkg_utility.c_recon_null_string)&lt;br/&gt;                                OR l_bus_interact_item.bus_interact_id &lt;&gt; NVL (l_bus_interact_id, pkg_utility.c_recon_null_number)&lt;br/&gt;                                OR NVL (l_bus_interact_item.bus_interact_item_type_cd, pkg_utility.c_recon_null_string) &lt;&gt; NVL(p_cursor_data_io.bus_interact_item_type_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                OR l_bus_interact_item.data_source_type_cd &lt;&gt; NVL (p_cursor_data_io.data_source_type_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                )&lt;br/&gt;                                 AND  NVL(l_bus_interact_item.modified_dttm, pkg_utility.c_recon_null_date) &lt; l_current_recon_start_time&lt;br/&gt;                               )&lt;br/&gt;                            THEN&lt;br/&gt;                                    UPDATE t_bus_interact_item&lt;br/&gt;                                     SET data_source_type_cd =&lt;br/&gt;                                                      p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                         source_system_id =&lt;br/&gt;                                                         p_cursor_data_io.source_system_id,&lt;br/&gt;                                         bus_interact_id = l_bus_interact_id,&lt;br/&gt;                                         bus_interact_item_type_cd =&lt;br/&gt;                                                p_cursor_data_io.bus_interact_item_type_cd,&lt;br/&gt;                                         modified_dttm = l_systimestamp,&lt;br/&gt;                                         modified_by = p_audit_user_i,&lt;br/&gt;                                         record_stat = &apos;A&apos;&lt;br/&gt;                                   WHERE bus_interact_item_id =&lt;br/&gt;                                                      l_bus_interact_item.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;                             l_action_perform_record :=&lt;br/&gt;                                                   pkg_utility.c_recon_update_perform;&lt;br/&gt;                             l_modif_val_string :=&lt;br/&gt;                                   &apos;data_source_type_cd : (&apos;&lt;br/&gt;                                || l_bus_interact_item.data_source_type_cd&lt;br/&gt;                                || &apos; =&gt; &apos;&lt;br/&gt;                                || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                                || &apos; )&apos;&lt;br/&gt;                                || &apos;source_system_id : (&apos;&lt;br/&gt;                                || l_bus_interact_item.source_system_id&lt;br/&gt;                                || &apos; =&gt; &apos;&lt;br/&gt;                                || p_cursor_data_io.source_system_id&lt;br/&gt;                                || &apos; )&apos;&lt;br/&gt;                                || &apos;bus_interact_id : (&apos;&lt;br/&gt;                                || l_bus_interact_item.bus_interact_id&lt;br/&gt;                                || &apos; =&gt; &apos;&lt;br/&gt;                                || l_bus_interact_id&lt;br/&gt;                                || &apos; )&apos;&lt;br/&gt;                                || &apos;bus_interact_item_type_cd : (&apos;&lt;br/&gt;                                || l_bus_interact_item.bus_interact_item_type_cd&lt;br/&gt;                                || &apos; =&gt; &apos;&lt;br/&gt;                                || p_cursor_data_io.bus_interact_item_type_cd&lt;br/&gt;                                || &apos; )&apos;;&lt;br/&gt;                          END IF;&lt;br/&gt;                       ELSE&lt;br/&gt;                          l_action_perform_record :=&lt;br/&gt;                                                   pkg_utility.c_recon_insert_perform;&lt;br/&gt;                          l_bus_interact_item_id :=&lt;br/&gt;                             da_bus_interact_item.ADD&lt;br/&gt;                                (p_process_rec_i,&lt;br/&gt;                                 data_source_type_cd            =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                 source_system_id               =&gt; p_cursor_data_io.source_system_id,&lt;br/&gt;                                 bus_interact_id                =&gt; l_bus_interact_id,&lt;br/&gt;                                 bus_interact_item_type_cd      =&gt; p_cursor_data_io.bus_interact_item_type_cd,&lt;br/&gt;                                 audit_user                     =&gt; p_audit_user_i&lt;br/&gt;                                );&lt;br/&gt;                          l_modif_val_string := &apos;&apos;;&lt;br/&gt;                          p_cursor_data_io.bus_interact_item_id :=&lt;br/&gt;                                                                l_bus_interact_item_id;&lt;br/&gt;                       END IF;&lt;br/&gt;&lt;br/&gt;                       IF l_action_perform_record IN&lt;br/&gt;                             (pkg_utility.c_recon_insert_perform,&lt;br/&gt;                              pkg_utility.c_recon_update_perform&lt;br/&gt;                             )&lt;br/&gt;                       THEN&lt;br/&gt;                          l_table_key :=&lt;br/&gt;                                &apos; BUS_INTERACT_ITEM_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.serv_id_opi&lt;br/&gt;                             || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                             || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                          pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                         (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                          p_table_name           =&gt; &apos;T_BUS_INTERACT_ITEM&apos;,&lt;br/&gt;                                          p_table_key            =&gt; l_table_key,&lt;br/&gt;                                          p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                          p_account_details      =&gt; NULL,&lt;br/&gt;                                          p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                          p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                         );&lt;br/&gt;                       END IF;&lt;br/&gt;                 END IF;&lt;br/&gt;                       pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                                 l_proc_name&lt;br/&gt;                                              || &apos;, &apos;&lt;br/&gt;                                              || pkg_utility.c_proc_end_text&lt;br/&gt;                                              || &apos;, ORD_NO = &apos;&lt;br/&gt;                                              || p_cursor_data_io.ord_no&lt;br/&gt;                                              || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                                              || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                             );&lt;br/&gt;                       p_cursor_data_io.record_load_cd :=pkg_utility.c_stg_processed;&lt;br/&gt;            EXCEPTION&lt;br/&gt;                       WHEN exp_null_bus_interact_id&lt;br/&gt;                           THEN&lt;br/&gt;                                ROLLBACK;&lt;br/&gt;                                p_cursor_data_io.record_load_cd := pkg_utility.c_stg_error;&lt;br/&gt;&lt;br/&gt;                                IF (p_cursor_data_io.bus_interact_item_type_cd = chtr.pkg_utility.c_request_type_cd_wrkord) THEN&lt;br/&gt;                                l_log_msg :=&apos; BUS_INTERACT_ITEM_ID is missing in T_BUSN_INTRN_VNT_JOB_XREF Table&apos;;&lt;br/&gt;                                ELSIF(p_cursor_data_io.bus_interact_item_type_cd IN&lt;br/&gt;                                                            (pkg_utility.c_request_type_cd_prdord,pkg_utility.c_request_type_cd_splreq)) THEN&lt;br/&gt;                                l_log_msg :=&apos; BUS_INTERACT_ITEM_ID is missing in T_BUS_INTER_VANTAGE_ORD_XREF Table&apos;;&lt;br/&gt;                                END IF;&lt;br/&gt;&lt;br/&gt;                                pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                                     l_proc_name&lt;br/&gt;                                                  || &apos;, BUS_INTERACT_ITEM_ID = &apos;&lt;br/&gt;                                                  || l_bus_interact_item_id&lt;br/&gt;                                                  || &apos;, ORD_NO = &apos;&lt;br/&gt;                                                  || p_cursor_data_io.ord_no&lt;br/&gt;                                                  || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                                                  || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                                  || &apos;, exception=&apos;&lt;br/&gt;                                                  || l_log_msg&lt;br/&gt;                                                 );&lt;br/&gt;                       WHEN OTHERS&lt;br/&gt;                       THEN&lt;br/&gt;                          ROLLBACK;&lt;br/&gt;                          p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                              pkg_utility.c_stg_error;&lt;br/&gt;                          pkg_logging.log_exception&lt;br/&gt;                                                  (p_process_rec_i,&lt;br/&gt;                                                      l_proc_name&lt;br/&gt;                                                   || &apos;, BUS_INTERACT_ITEM_ID = &apos;&lt;br/&gt;                                                   || l_bus_interact_item_id&lt;br/&gt;                                                   || &apos;, ORD_NO = &apos;&lt;br/&gt;                                                   || p_cursor_data_io.ord_no&lt;br/&gt;                                                   || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                                                   || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                                   || &apos;, exception = &apos;&lt;br/&gt;                                                   || DBMS_UTILITY.format_error_stack()&lt;br/&gt;                                                  );&lt;br/&gt;            END;&lt;br/&gt;       --  END LOOP;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos;, &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                                --|| &apos;, cnt = &apos;&lt;br/&gt;                               -- || p_cursor_data_io.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_bus_interact_item;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_bus_inter_itm_vnt_xref (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_BUS_INTER_ITM_VNT_XREF&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_bus_inter_itm_vnt_xref will load the table&lt;br/&gt;      t_bus_interact_item_vnt_xref.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name               t_unit_name&lt;br/&gt;                                           := &apos;INSERT_BUS_INTER_ITM_VNT_XREF&apos;;&lt;br/&gt;      l_errors                  NUMBER;&lt;br/&gt;      l_coll_idx                PLS_INTEGER;&lt;br/&gt;      l_exist_count             NUMBER;&lt;br/&gt;      l_systimestamp            TIMESTAMP;&lt;br/&gt;      l_action_perform_record   stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string        stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key               stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details         stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      l_bus_interact_item_id    t_bus_interact_item_vnt_xref.bus_interact_item_id%TYPE;&lt;br/&gt;      l_change_ind              CHAR (1);&lt;br/&gt;   --l_account_num             NUMBER (10);&lt;br/&gt;   BEGIN&lt;br/&gt;      /*pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;     BEGIN&lt;br/&gt;    --  FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;     --  LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;            l_bus_interact_item_id := NULL;&lt;br/&gt;&lt;br/&gt;          BEGIN&lt;br/&gt;&lt;br/&gt;            IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;              THEN&lt;br/&gt;               pkg_logging.log_debug&lt;br/&gt;                                 (p_process_rec_i,&lt;br/&gt;                                     l_proc_name&lt;br/&gt;                                  || &apos;, &apos;&lt;br/&gt;                                  || pkg_utility.c_proc_start_text&lt;br/&gt;                                  || &apos;, ORDER_NUM = &apos;&lt;br/&gt;                                  || p_cursor_data_io.ord_no&lt;br/&gt;                                  || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                                  || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                 );&lt;br/&gt;              IF(p_cursor_data_io.ord_no != pkg_utility.c_dummy_order_no)&lt;br/&gt;              THEN&lt;br/&gt;                    BEGIN&lt;br/&gt;                     SELECT COUNT (*)&lt;br/&gt;                       INTO l_exist_count&lt;br/&gt;                        FROM t_bus_interact_item_vnt_xref a&lt;br/&gt;                         WHERE a.order_num = p_cursor_data_io.ord_no&lt;br/&gt;                           AND a.serv_id = p_cursor_data_io.serv_id_opi;&lt;br/&gt;&lt;br/&gt;                    EXCEPTION&lt;br/&gt;                      WHEN NO_DATA_FOUND&lt;br/&gt;                         THEN&lt;br/&gt;                             l_exist_count := 0;&lt;br/&gt;                    END;&lt;br/&gt;&lt;br/&gt;                   IF (l_exist_count = 0)&lt;br/&gt;                   THEN&lt;br/&gt;                      l_action_perform_record :=&lt;br/&gt;                                               pkg_utility.c_recon_insert_perform;&lt;br/&gt;                      da_bus_interact_item_vnt_xref.ADD&lt;br/&gt;                         (process_rec                    =&gt; p_process_rec_i,&lt;br/&gt;                          order_num                      =&gt; p_cursor_data_io.ord_no,&lt;br/&gt;                          serv_id                        =&gt; p_cursor_data_io.serv_id_opi,&lt;br/&gt;                          bus_interact_item_id           =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                          bus_interact_item_type_cd      =&gt; p_cursor_data_io.bus_interact_item_type_cd,&lt;br/&gt;                          audit_user                     =&gt; p_audit_user_i&lt;br/&gt;                         );&lt;br/&gt;                      l_table_key :=&lt;br/&gt;                            &apos;ORD_NO = &apos;&lt;br/&gt;                         || p_cursor_data_io.ord_no&lt;br/&gt;                         || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                         || p_cursor_data_io.serv_id_opi&lt;br/&gt;                         || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                         || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                         || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                         || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                      pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                  (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                   p_table_name           =&gt; &apos;T_BUS_INTERACT_ITEM_VNT_XREF&apos;,&lt;br/&gt;                                   p_table_key            =&gt; l_table_key,&lt;br/&gt;                                   p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                   p_account_details      =&gt; NULL,&lt;br/&gt;                                   p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                   p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                  );&lt;br/&gt;                   END IF;&lt;br/&gt;              END IF;&lt;br/&gt;               pkg_logging.log_debug&lt;br/&gt;                                  (p_process_rec_i,&lt;br/&gt;                                      l_proc_name&lt;br/&gt;                                   || &apos;, &apos;&lt;br/&gt;                                   || pkg_utility.c_proc_end_text&lt;br/&gt;                                   || &apos;, ORD_NO = &apos;&lt;br/&gt;                                   || p_cursor_data_io.ord_no&lt;br/&gt;                                   || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                                   || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                  );&lt;br/&gt;               p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                   pkg_utility.c_stg_processed;&lt;br/&gt;            END IF;&lt;br/&gt;          EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd := pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                              (p_process_rec_i,&lt;br/&gt;                                  l_proc_name&lt;br/&gt;                               || &apos;, ORD_NO = &apos;&lt;br/&gt;                               || p_cursor_data_io.ord_no&lt;br/&gt;                               || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                               || p_cursor_data_io.serv_id_opi&lt;br/&gt;                               || &apos;, exception=&apos;&lt;br/&gt;                               || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                              );&lt;br/&gt;          END;&lt;br/&gt;       -- END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                         --       || &apos;, cnt = &apos;&lt;br/&gt;                           --     || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_bus_inter_itm_vnt_xref;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_prod_order_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_PROD_ORDER_ITEM&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_prod_order_item will load the table t_prod_order_item.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name               t_unit_name       := &apos;INSERT_PROD_ORDER_ITEM&apos;;&lt;br/&gt;      l_errors                  NUMBER;&lt;br/&gt;      l_exist_count             NUMBER;&lt;br/&gt;      l_systimestamp            TIMESTAMP;&lt;br/&gt;      l_action_perform_record   stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string        stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key               stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details         stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      --l_account_num             NUMBER (10);&lt;br/&gt;      l_prod_order_item         t_prod_order_item%ROWTYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;      /*pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;       --  FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;       --  LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;              IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;              THEN&lt;br/&gt;                  pkg_logging.log_debug&lt;br/&gt;                        (p_process_rec_i,&lt;br/&gt;                            l_proc_name&lt;br/&gt;                         || &apos;, &apos;&lt;br/&gt;                         || pkg_utility.c_proc_start_text&lt;br/&gt;                         || &apos;, PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                        );&lt;br/&gt;                 IF (    p_cursor_data_io.ord_no !=&lt;br/&gt;                                                  pkg_utility.c_dummy_order_no&lt;br/&gt;                        )&lt;br/&gt;                 THEN&lt;br/&gt;                        BEGIN&lt;br/&gt;                          SELECT a.*&lt;br/&gt;                            INTO l_prod_order_item&lt;br/&gt;                            FROM t_prod_order_item a&lt;br/&gt;                           WHERE a.product_order_item_id =&lt;br/&gt;                                    p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;                        EXCEPTION&lt;br/&gt;                          WHEN NO_DATA_FOUND&lt;br/&gt;                          THEN&lt;br/&gt;                             l_exist_count := 0;&lt;br/&gt;                        END;&lt;br/&gt;&lt;br/&gt;                       IF (l_exist_count &gt; 0)&lt;br/&gt;                       THEN&lt;br/&gt;                              IF&lt;br/&gt;                              (&lt;br/&gt;                                (NVL (l_prod_order_item.data_source_type_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                         OR NVL (l_prod_order_item.product_order_id,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.bus_interact_id,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.account_id,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.account_id,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.before_item_qty,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.before_item_qty,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.after_item_qty,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.after_item_qty,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.package_billing_product_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.service_billing_product_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.bill_start_dttm,&lt;br/&gt;                                                  pkg_utility.c_recon_null_date&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.bill_start_dttm,&lt;br/&gt;                                                    pkg_utility.c_recon_null_date&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_prod_order_item.impacted_line_of_business_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL(l_prod_order_item.billed_amt,pkg_utility.c_recon_null_number)&lt;br/&gt;                                                &lt;&gt; NVL( p_cursor_data_io.bill_amt,pkg_utility.c_recon_null_number)&lt;br/&gt;                                         ------ Added on 31 March by Cognizant ---------&lt;br/&gt;                                          OR NVL( l_prod_order_item.account_impact_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                                &lt;&gt; NVL(p_cursor_data_io.acct_stage,pkg_utility.c_recon_null_string)&lt;br/&gt;                                          OR NVL(l_prod_order_item.line_of_business_impact_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                                &lt;&gt; NVL(p_cursor_data_io.lob_acct_stage,pkg_utility.c_recon_null_string)&lt;br/&gt;                                          OR NVL(l_prod_order_item.package_billing_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                               &lt;&gt;  NVL(p_cursor_data_io.billing_package_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                          OR NVL(l_prod_order_item.service_billing_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                               &lt;&gt;  NVL(p_cursor_data_io.billing_service_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                          ------ Added on 31 March by Cognizant ---------&lt;br/&gt;                                                )&lt;br/&gt;                              AND NVL (l_prod_order_item.modified_dttm, pkg_utility.c_recon_null_date) &lt;&lt;br/&gt;                                                                l_current_recon_start_time&lt;br/&gt;                               ) THEN&lt;br/&gt;                                  UPDATE t_prod_order_item a&lt;br/&gt;                                     SET a.data_source_type_cd =&lt;br/&gt;                                            p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                         a.product_order_id =&lt;br/&gt;                                             p_cursor_data_io.bus_interact_id,&lt;br/&gt;                                         a.account_id =&lt;br/&gt;                                                  p_cursor_data_io.account_id,&lt;br/&gt;                                         a.before_item_qty =&lt;br/&gt;                                             p_cursor_data_io.before_item_qty,&lt;br/&gt;                                         a.after_item_qty =&lt;br/&gt;                                              p_cursor_data_io.after_item_qty,&lt;br/&gt;                                         a.package_billing_product_cd =&lt;br/&gt;                                            p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                                         a.service_billing_product_cd =&lt;br/&gt;                                            p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                                         a.bill_start_dttm =&lt;br/&gt;                                             p_cursor_data_io.bill_start_dttm,&lt;br/&gt;                                         a.impacted_line_of_business_cd =&lt;br/&gt;                                            p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                                         a.modified_dttm = l_systimestamp,&lt;br/&gt;                                         a.modified_by = p_audit_user_i,&lt;br/&gt;                                         a.record_stat = &apos;A&apos;,&lt;br/&gt;                                         a.billed_amt =  p_cursor_data_io.bill_amt,&lt;br/&gt;                                         a.account_impact_cd = p_cursor_data_io.acct_stage,&lt;br/&gt;                                         a.line_of_business_impact_cd = p_cursor_data_io.lob_acct_stage,&lt;br/&gt;                                         a.package_billing_product_id = p_cursor_data_io.billing_package_product_id,&lt;br/&gt;                                         a.service_billing_product_id = p_cursor_data_io.billing_service_product_id&lt;br/&gt;                                   WHERE a.product_order_item_id =&lt;br/&gt;                                            p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;                                 l_action_perform_record :=&lt;br/&gt;                                                       pkg_utility.c_recon_update_perform;&lt;br/&gt;                                 l_modif_val_string :=&lt;br/&gt;                                       &apos;data_source_type_cd : (&apos;&lt;br/&gt;                                    || l_prod_order_item.data_source_type_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;product_order_id : (&apos;&lt;br/&gt;                                    || l_prod_order_item.product_order_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.bus_interact_id&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;account_id : (&apos;&lt;br/&gt;                                    || l_prod_order_item.account_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.account_id&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;before_item_qty : (&apos;&lt;br/&gt;                                    || l_prod_order_item.before_item_qty&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.before_item_qty&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;after_item_qty : (&apos;&lt;br/&gt;                                    || l_prod_order_item.after_item_qty&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.after_item_qty&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;package_billing_product_cd : (&apos;&lt;br/&gt;                                    || l_prod_order_item.package_billing_product_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.package_billing_product_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;service_billing_product_cd : (&apos;&lt;br/&gt;                                    || l_prod_order_item.service_billing_product_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.service_billing_product_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;bill_start_dttm : (&apos;&lt;br/&gt;                                    || l_prod_order_item.bill_start_dttm&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.bill_start_dttm&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;impacted_line_of_business_cd : (&apos;&lt;br/&gt;                                    || l_prod_order_item.impacted_line_of_business_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.impacted_line_of_business_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;billed_amt : (&apos;&lt;br/&gt;                                    || l_prod_order_item.billed_amt&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.bill_amt&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;account_impact_cd : (&apos;&lt;br/&gt;                                    || l_prod_order_item.account_impact_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.acct_stage&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;line_of_business_impact_cd : (&apos;&lt;br/&gt;                                    || l_prod_order_item.line_of_business_impact_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.lob_acct_stage&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;package_billing_product_id : (&apos;&lt;br/&gt;                                    || l_prod_order_item.package_billing_product_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.billing_package_product_id&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;service_billing_product_id : (&apos;&lt;br/&gt;                                    || l_prod_order_item.service_billing_product_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.billing_service_product_id&lt;br/&gt;                                    || &apos; )&apos;;&lt;br/&gt;                              END IF;&lt;br/&gt;                       ELSIF (l_exist_count = 0)&lt;br/&gt;                       THEN&lt;br/&gt;                          l_action_perform_record :=&lt;br/&gt;                                                   pkg_utility.c_recon_insert_perform;&lt;br/&gt;                          da_prod_order_item.ADD&lt;br/&gt;                             (process_rec                       =&gt; p_process_rec_i,&lt;br/&gt;                              product_order_item_id             =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                              data_source_type_cd               =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                              product_order_id                  =&gt; p_cursor_data_io.bus_interact_id,&lt;br/&gt;                              account_id                        =&gt; p_cursor_data_io.account_id,&lt;br/&gt;                              before_item_qty                   =&gt; p_cursor_data_io.before_item_qty,&lt;br/&gt;                              after_item_qty                    =&gt; p_cursor_data_io.after_item_qty,&lt;br/&gt;                              item_action_cd                    =&gt; NULL,&lt;br/&gt;                              package_billing_product_id        =&gt; p_cursor_data_io.billing_package_product_id,&lt;br/&gt;                              package_billing_product_cd        =&gt; p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                              service_billing_product_id        =&gt; p_cursor_data_io.billing_service_product_id,&lt;br/&gt;                              service_billing_product_cd        =&gt; p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                              billed_amt                        =&gt;  p_cursor_data_io.bill_amt,&lt;br/&gt;                              bill_start_dttm                   =&gt; p_cursor_data_io.bill_start_dttm,&lt;br/&gt;                              --account_impact_cd                 =&gt; NULL,   -- Modified on 31MAR2015 by Cognizant&lt;br/&gt;                              account_impact_cd                 =&gt; p_cursor_data_io.acct_stage,&lt;br/&gt;                              --line_of_business_impact_cd        =&gt; NULL,   -- Modified on 31MAR2015 by Cognizant&lt;br/&gt;                              line_of_business_impact_cd    =&gt; p_cursor_data_io.lob_acct_stage,&lt;br/&gt;                              impacted_line_of_business_cd =&gt; p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                              audit_user                        =&gt; p_audit_user_i&lt;br/&gt;                             );&lt;br/&gt;                       END IF;&lt;br/&gt;&lt;br/&gt;                       IF l_action_perform_record IN (pkg_utility.c_recon_insert_perform,pkg_utility.c_recon_update_perform)&lt;br/&gt;                       THEN&lt;br/&gt;                          l_table_key :=&lt;br/&gt;                                &apos;PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.serv_id_opi&lt;br/&gt;                             || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                             || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                          pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                         (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                          p_table_name           =&gt; &apos;T_PROD_ORDER_ITEM&apos;,&lt;br/&gt;                                          p_table_key            =&gt; l_table_key,&lt;br/&gt;                                          p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                          p_account_details      =&gt; NULL,&lt;br/&gt;                                          p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                          p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                         );&lt;br/&gt;                       END IF;&lt;br/&gt;                 END IF;&lt;br/&gt;               pkg_logging.log_debug&lt;br/&gt;                         (p_process_rec_i,&lt;br/&gt;                             l_proc_name&lt;br/&gt;                          || &apos;, &apos;&lt;br/&gt;                          || pkg_utility.c_proc_end_text&lt;br/&gt;                          || &apos;, PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                          || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                         );&lt;br/&gt;               p_cursor_data_io.record_load_cd := pkg_utility.c_stg_processed;&lt;br/&gt;              END IF;&lt;br/&gt;            EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                      pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                     (p_process_rec_i,&lt;br/&gt;                         l_proc_name&lt;br/&gt;                      || &apos;, PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                      || &apos;, ORD_NO = &apos;&lt;br/&gt;                      || p_cursor_data_io.ord_no&lt;br/&gt;                      || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                      || p_cursor_data_io.serv_id_opi&lt;br/&gt;                      || &apos;, exception=&apos;&lt;br/&gt;                      || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                     );&lt;br/&gt;            END;&lt;br/&gt;      --   END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                             --   || &apos;, cnt = &apos;&lt;br/&gt;                             --  || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_prod_order_item;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_prod_order_item_status (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_PROD_ORDER_ITEM_STATUS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_prod_order_item_status will load the table t_prod_order_item_status.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name                      t_unit_name&lt;br/&gt;                                           := &apos;INSERT_PROD_ORDER_ITEM_STATUS&apos;;&lt;br/&gt;      l_errors                         NUMBER;&lt;br/&gt;      l_exist_count                    NUMBER;&lt;br/&gt;      l_systimestamp                   TIMESTAMP;&lt;br/&gt;      l_action_perform_record          stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string               stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key                      stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details                stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      --l_account_num                    NUMBER (10);&lt;br/&gt;      l_product_order_item_status_cd   t_prod_order_item_status.product_order_item_status_cd%TYPE;&lt;br/&gt;      l_data_source_type_cd            t_prod_order_item_status.data_source_type_cd%TYPE;&lt;br/&gt;      l_prod_order_item_sts t_prod_order_item_status%ROWTYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;     /* pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;        -- FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;        -- LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;            l_product_order_item_status_cd := NULL;&lt;br/&gt;            l_data_source_type_cd := NULL;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;                  IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;                  THEN&lt;br/&gt;                      pkg_logging.log_debug&lt;br/&gt;                            (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, &apos;&lt;br/&gt;                             || pkg_utility.c_proc_start_text&lt;br/&gt;                             || &apos;, PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                            );&lt;br/&gt;                     IF(p_cursor_data_io.ord_no != pkg_utility.c_dummy_order_no)&lt;br/&gt;                     THEN&lt;br/&gt;                         BEGIN&lt;br/&gt;                          SELECT a.*&lt;br/&gt;                            INTO l_prod_order_item_sts&lt;br/&gt;                             FROM t_prod_order_item_status a&lt;br/&gt;                              WHERE a.product_order_item_id = p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;                         EXCEPTION&lt;br/&gt;                          WHEN NO_DATA_FOUND&lt;br/&gt;                          THEN&lt;br/&gt;                             l_exist_count := 0;&lt;br/&gt;                         END;&lt;br/&gt;&lt;br/&gt;                            IF (l_exist_count &gt; 0)&lt;br/&gt;                            THEN&lt;br/&gt;                                      IF&lt;br/&gt;                                           (&lt;br/&gt;                                           (NVL (l_prod_order_item_sts.data_source_type_cd,&lt;br/&gt;                                                              pkg_utility.c_recon_null_string&lt;br/&gt;                                                             ) &lt;&gt;&lt;br/&gt;                                                            NVL&lt;br/&gt;                                                               (p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                                pkg_utility.c_recon_null_string&lt;br/&gt;                                                               )&lt;br/&gt;                                                      OR NVL (l_prod_order_item_sts.product_order_item_status_cd,&lt;br/&gt;                                                              pkg_utility.c_recon_null_string&lt;br/&gt;                                                             ) &lt;&gt;&lt;br/&gt;                                                            NVL&lt;br/&gt;                                                               (p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                                                pkg_utility.c_recon_null_string&lt;br/&gt;                                                               )&lt;br/&gt;                                           )&lt;br/&gt;                                           AND NVL (l_prod_order_item_sts.modified_dttm, pkg_utility.c_recon_null_date) &lt;&lt;br/&gt;                                                                                l_current_recon_start_time&lt;br/&gt;                                           )&lt;br/&gt;                                           THEN&lt;br/&gt;                                                 UPDATE t_prod_order_item_status a&lt;br/&gt;                                                 SET a.data_source_type_cd =&lt;br/&gt;                                                        p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                     a.product_order_item_status_cd =&lt;br/&gt;                                                        p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                                     a.modified_dttm = l_systimestamp,&lt;br/&gt;                                                     a.modified_by = p_audit_user_i,&lt;br/&gt;                                                     a.record_stat = &apos;A&apos;&lt;br/&gt;                                               WHERE a.product_order_item_id =&lt;br/&gt;                                                        p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;                                                 l_action_perform_record :=&lt;br/&gt;                                                                       pkg_utility.c_recon_update_perform;&lt;br/&gt;                                                 l_modif_val_string :=&lt;br/&gt;                                                       &apos;data_source_type_cd : (&apos;&lt;br/&gt;                                                    || l_prod_order_item_sts.data_source_type_cd&lt;br/&gt;                                                    || &apos; =&gt; &apos;&lt;br/&gt;                                                    || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                                                    || &apos; )&apos;&lt;br/&gt;                                                    || &apos;product_order_item_status_cd : (&apos;&lt;br/&gt;                                                    || l_prod_order_item_sts.product_order_item_status_cd&lt;br/&gt;                                                    || &apos; =&gt; &apos;&lt;br/&gt;                                                    || p_cursor_data_io.product_order_item_status_cd&lt;br/&gt;                                                    || &apos; )&apos;;&lt;br/&gt;                                      END IF;&lt;br/&gt;                            ELSIF (l_exist_count = 0)&lt;br/&gt;                                     THEN&lt;br/&gt;                                      l_action_perform_record :=&lt;br/&gt;                                                               pkg_utility.c_recon_insert_perform;&lt;br/&gt;                                      da_prod_order_item_status.ADD&lt;br/&gt;                                         (process_rec                       =&gt; p_process_rec_i,&lt;br/&gt;                                          product_order_item_id             =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                                          data_source_type_cd               =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                          product_order_item_status_cd      =&gt; p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                          audit_user                        =&gt; p_audit_user_i&lt;br/&gt;                                         );&lt;br/&gt;                            END IF;&lt;br/&gt;&lt;br/&gt;                            IF l_action_perform_record IN (pkg_utility.c_recon_insert_perform,pkg_utility.c_recon_update_perform)&lt;br/&gt;                            THEN&lt;br/&gt;                              l_table_key :=&lt;br/&gt;                                    &apos;PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                                 || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                                 || &apos;, SERV_ID = &apos;&lt;br/&gt;                                 || p_cursor_data_io.serv_id_opi&lt;br/&gt;                                 || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                                 || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                                 || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                                 || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                              pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                             (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                              p_table_name           =&gt; &apos;T_PROD_ORDER_ITEM_STATUS&apos;,&lt;br/&gt;                                              p_table_key            =&gt; l_table_key,&lt;br/&gt;                                              p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                              p_account_details      =&gt; NULL,&lt;br/&gt;                                              p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                              p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                             );&lt;br/&gt;                            END IF;&lt;br/&gt;                     END IF;&lt;br/&gt;                     pkg_logging.log_debug&lt;br/&gt;                             (p_process_rec_i,&lt;br/&gt;                                 l_proc_name&lt;br/&gt;                              || &apos;, &apos;&lt;br/&gt;                              || pkg_utility.c_proc_end_text&lt;br/&gt;                              || &apos;, PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                              || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                             );&lt;br/&gt;                   p_cursor_data_io.record_load_cd :=  pkg_utility.c_stg_processed;&lt;br/&gt;                  END IF;&lt;br/&gt;            EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                      pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                     (p_process_rec_i,&lt;br/&gt;                         l_proc_name&lt;br/&gt;                      || &apos;, PRODUCT_ORDER_ITEM_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                      || &apos;, ORD_NO = &apos;&lt;br/&gt;                      || p_cursor_data_io.ord_no&lt;br/&gt;                      || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                      || p_cursor_data_io.serv_id_opi&lt;br/&gt;                      || &apos;, exception=&apos;&lt;br/&gt;                      || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                     );&lt;br/&gt;            END;&lt;br/&gt;         --END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                             --   || &apos;, cnt = &apos;&lt;br/&gt;                             --   || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_prod_order_item_status;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_special_req_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_SPECIAL_REQ_ITEM&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_special_req_item will load the tablet_special_request_item.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name               t_unit_name      := &apos;INSERT_SPECIAL_REQ_ITEM&apos;;&lt;br/&gt;      l_errors                  NUMBER;&lt;br/&gt;      l_exist_count             NUMBER;&lt;br/&gt;      l_systimestamp            TIMESTAMP;&lt;br/&gt;      l_action_perform_record   stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string        stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key               stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details         stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      --l_account_num             NUMBER (10);&lt;br/&gt;      l_special_request_item    t_special_request_item%ROWTYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;     /* pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;       --  FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;       --  LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;              IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;              THEN&lt;br/&gt;                  pkg_logging.log_debug&lt;br/&gt;                        (p_process_rec_i,&lt;br/&gt;                            l_proc_name&lt;br/&gt;                         || &apos;, &apos;&lt;br/&gt;                         || pkg_utility.c_proc_start_text&lt;br/&gt;                         || &apos;, SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                         || &apos;, SPECIAL_REQUEST_ORDER_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_id&lt;br/&gt;                        );&lt;br/&gt;                 IF (p_cursor_data_io.ord_no !=pkg_utility.c_dummy_order_no)&lt;br/&gt;                 THEN&lt;br/&gt;                        BEGIN&lt;br/&gt;                          SELECT a.*&lt;br/&gt;                            INTO l_special_request_item&lt;br/&gt;                             FROM t_special_request_item a&lt;br/&gt;                              WHERE a.special_request_item_id = p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;                        EXCEPTION&lt;br/&gt;                          WHEN NO_DATA_FOUND&lt;br/&gt;                          THEN&lt;br/&gt;                             l_exist_count := 0;&lt;br/&gt;                        END;&lt;br/&gt;&lt;br/&gt;                        IF (l_exist_count &gt; 0)&lt;br/&gt;                        THEN&lt;br/&gt;                              IF&lt;br/&gt;                               (&lt;br/&gt;                               (&lt;br/&gt;                                     NVL (l_special_request_item.data_source_type_cd,&lt;br/&gt;                                                      pkg_utility.c_recon_null_string&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                        pkg_utility.c_recon_null_string&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.special_request_order_id,&lt;br/&gt;                                                      pkg_utility.c_recon_null_number&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.bus_interact_id,&lt;br/&gt;                                                        pkg_utility.c_recon_null_number&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.account_id,&lt;br/&gt;                                                      pkg_utility.c_recon_null_number&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.account_id,&lt;br/&gt;                                                        pkg_utility.c_recon_null_number&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.before_item_qty,&lt;br/&gt;                                                      pkg_utility.c_recon_null_number&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.before_item_qty,&lt;br/&gt;                                                        pkg_utility.c_recon_null_number&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.after_item_qty,&lt;br/&gt;                                                      pkg_utility.c_recon_null_number&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.after_item_qty,&lt;br/&gt;                                                        pkg_utility.c_recon_null_number&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.package_billing_product_cd,&lt;br/&gt;                                                      pkg_utility.c_recon_null_string&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                                                        pkg_utility.c_recon_null_string&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.service_billing_product_cd,&lt;br/&gt;                                                      pkg_utility.c_recon_null_string&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                                                        pkg_utility.c_recon_null_string&lt;br/&gt;                                                       )&lt;br/&gt;                                              OR NVL (l_special_request_item.impacted_line_of_business_cd,&lt;br/&gt;                                                      pkg_utility.c_recon_null_string&lt;br/&gt;                                                     ) &lt;&gt;&lt;br/&gt;                                                    NVL&lt;br/&gt;                                                       (p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                                                        pkg_utility.c_recon_null_string&lt;br/&gt;                                                       )&lt;br/&gt;                                             --Added by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                             OR NVL(l_special_request_item.package_billing_product_id,pkg_utility.c_recon_null_number) &lt;&gt;&lt;br/&gt;                                                  NVL(p_cursor_data_io.billing_package_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                             OR NVL(l_special_request_item.service_billing_product_id,pkg_utility.c_recon_null_number) &lt;&gt;&lt;br/&gt;                                                NVL(p_cursor_data_io.billing_service_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                             -- by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                             ----Added by Cognizant on 31-Mar-2015 ----&lt;br/&gt;                                             OR NVL( l_special_request_item.account_impact_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                                        &lt;&gt; NVL(p_cursor_data_io.acct_stage,pkg_utility.c_recon_null_string)&lt;br/&gt;                                             OR NVL(l_special_request_item.line_of_business_impact_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                                       &lt;&gt; NVL(p_cursor_data_io.lob_acct_stage,pkg_utility.c_recon_null_string)&lt;br/&gt;                                             ----Added by Cognizant on 31-Mar-2015 ----&lt;br/&gt;                               )&lt;br/&gt;                               AND NVL (l_special_request_item.modified_dttm, pkg_utility.c_recon_null_date) &lt; l_current_recon_start_time&lt;br/&gt;                               )&lt;br/&gt;                               THEN&lt;br/&gt;                                       UPDATE t_special_request_item a&lt;br/&gt;                                         SET a.data_source_type_cd =&lt;br/&gt;                                                p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                             a.special_request_order_id =&lt;br/&gt;                                                 p_cursor_data_io.bus_interact_id,&lt;br/&gt;                                             a.account_id =&lt;br/&gt;                                                      p_cursor_data_io.account_id,&lt;br/&gt;                                             a.before_item_qty =&lt;br/&gt;                                                 p_cursor_data_io.before_item_qty,&lt;br/&gt;                                             a.after_item_qty =&lt;br/&gt;                                                  p_cursor_data_io.after_item_qty,&lt;br/&gt;                                             a.package_billing_product_cd =&lt;br/&gt;                                                p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                                             a.service_billing_product_cd =&lt;br/&gt;                                                p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                                             a.impacted_line_of_business_cd =&lt;br/&gt;                                                p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                                             a.modified_dttm = l_systimestamp,&lt;br/&gt;                                             a.modified_by = p_audit_user_i,&lt;br/&gt;                                             a.record_stat = &apos;A&apos;&lt;br/&gt;                                             --Added by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                             ,a.package_billing_product_id = p_cursor_data_io.billing_package_product_id&lt;br/&gt;                                             ,a.service_billing_product_id = p_cursor_data_io.billing_service_product_id&lt;br/&gt;                                             -- by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                             ----Added by Cognizant on 31-Mar-2015 ----&lt;br/&gt;                                             ,a.account_impact_cd = p_cursor_data_io.acct_stage&lt;br/&gt;                                             ,a.line_of_business_impact_cd = p_cursor_data_io.lob_acct_stage&lt;br/&gt;                                             ----Added by Cognizant on 31-Mar-2015 ----&lt;br/&gt;                                       WHERE a.special_request_item_id =&lt;br/&gt;                                                p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;                                 l_action_perform_record :=&lt;br/&gt;                                                       pkg_utility.c_recon_update_perform;&lt;br/&gt;                                 l_modif_val_string :=&lt;br/&gt;                                       &apos;data_source_type_cd : (&apos;&lt;br/&gt;                                    || l_special_request_item.data_source_type_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;special_request_order_id : (&apos;&lt;br/&gt;                                    || l_special_request_item.special_request_order_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.bus_interact_id&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;account_id : (&apos;&lt;br/&gt;                                    || l_special_request_item.account_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.account_id&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;before_item_qty : (&apos;&lt;br/&gt;                                    || l_special_request_item.before_item_qty&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.before_item_qty&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;after_item_qty : (&apos;&lt;br/&gt;                                    || l_special_request_item.after_item_qty&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.after_item_qty&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;package_billing_product_cd : (&apos;&lt;br/&gt;                                    || l_special_request_item.package_billing_product_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.package_billing_product_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;service_billing_product_cd : (&apos;&lt;br/&gt;                                    || l_special_request_item.service_billing_product_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.service_billing_product_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;impacted_line_of_business_cd : (&apos;&lt;br/&gt;                                    || l_special_request_item.impacted_line_of_business_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.impacted_line_of_business_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;account_impact_cd : (&apos;&lt;br/&gt;                                    || l_special_request_item.account_impact_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.acct_stage&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;line_of_business_impact_cd : (&apos;&lt;br/&gt;                                    || l_special_request_item.line_of_business_impact_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.lob_acct_stage&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;package_billing_product_id : (&apos;&lt;br/&gt;                                    || l_special_request_item.package_billing_product_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.billing_package_product_id&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;service_billing_product_id : (&apos;&lt;br/&gt;                                    || l_special_request_item.service_billing_product_id&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.billing_service_product_id&lt;br/&gt;                                    || &apos; )&apos;;&lt;br/&gt;                              END IF;&lt;br/&gt;                        ELSIF (l_exist_count = 0)&lt;br/&gt;                         THEN&lt;br/&gt;                          l_action_perform_record :=&lt;br/&gt;                                                   pkg_utility.c_recon_insert_perform;&lt;br/&gt;                          da_special_request_item.ADD&lt;br/&gt;                             (process_rec                       =&gt; p_process_rec_i,&lt;br/&gt;                              special_request_item_id           =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                              data_source_type_cd               =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                              special_request_order_id          =&gt; p_cursor_data_io.bus_interact_id,&lt;br/&gt;                              account_id                        =&gt; p_cursor_data_io.account_id,&lt;br/&gt;                              before_item_qty                   =&gt; p_cursor_data_io.before_item_qty,&lt;br/&gt;                              after_item_qty                    =&gt; p_cursor_data_io.after_item_qty,&lt;br/&gt;                              item_action_cd                    =&gt; NULL,&lt;br/&gt;                              --package_billing_product_id        =&gt; NULL, --Commented by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                              package_billing_product_id        =&gt; p_cursor_data_io.billing_package_product_id,&lt;br/&gt;                              package_billing_product_cd        =&gt; p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                              --service_billing_product_id        =&gt; NULL,--Commented by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                              service_billing_product_id        =&gt; p_cursor_data_io.billing_service_product_id,&lt;br/&gt;                              service_billing_product_cd        =&gt; p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                            ------------ Modified on 31 March by Cognizant ------------&lt;br/&gt;                             -- account_impact_cd                 =&gt; NULL,&lt;br/&gt;                             -- line_of_business_impact_cd        =&gt; NULL,&lt;br/&gt;                              account_impact_cd                 =&gt; p_cursor_data_io.acct_stage,&lt;br/&gt;                              line_of_business_impact_cd     =&gt; p_cursor_data_io.lob_acct_stage,&lt;br/&gt;                            ------------ Modified on 31 March by Cognizant ------------&lt;br/&gt;                              impacted_line_of_business_cd      =&gt; p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                              audit_user                        =&gt; p_audit_user_i&lt;br/&gt;                             );&lt;br/&gt;                        END IF;&lt;br/&gt;&lt;br/&gt;                        IF l_action_perform_record IN&lt;br/&gt;                             (pkg_utility.c_recon_insert_perform,&lt;br/&gt;                              pkg_utility.c_recon_update_perform&lt;br/&gt;                             )&lt;br/&gt;                        THEN&lt;br/&gt;                          l_table_key :=&lt;br/&gt;                                &apos;SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.serv_id_opi&lt;br/&gt;                             || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                             || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                          pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                         (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                          p_table_name           =&gt; &apos;T_SPECIAL_REQUEST_ITEM&apos;,&lt;br/&gt;                                          p_table_key            =&gt; l_table_key,&lt;br/&gt;                                          p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                          p_account_details      =&gt; NULL,&lt;br/&gt;                                          p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                          p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                         );&lt;br/&gt;                        END IF;&lt;br/&gt;                 END IF;&lt;br/&gt;               pkg_logging.log_debug&lt;br/&gt;                         (p_process_rec_i,&lt;br/&gt;                             l_proc_name&lt;br/&gt;                          || &apos;, &apos;&lt;br/&gt;                          || pkg_utility.c_proc_end_text&lt;br/&gt;                          || &apos;, SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                          || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                          || &apos;, SPECIAL_REQUEST_ORDER_ID = &apos;&lt;br/&gt;                          || p_cursor_data_io.bus_interact_id&lt;br/&gt;                         );&lt;br/&gt;               p_cursor_data_io.record_load_cd := pkg_utility.c_stg_processed;&lt;br/&gt;              END IF;&lt;br/&gt;             EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                      pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                     (p_process_rec_i,&lt;br/&gt;                         l_proc_name&lt;br/&gt;                      || &apos;, SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                      || &apos;, SPECIAL_REQUEST_ORDER_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_id&lt;br/&gt;                      || &apos;, ORD_NO = &apos;&lt;br/&gt;                      || p_cursor_data_io.ord_no&lt;br/&gt;                      || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                      || p_cursor_data_io.serv_id_opi&lt;br/&gt;                      || &apos;, exception=&apos;&lt;br/&gt;                      || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                     );&lt;br/&gt;            END;&lt;br/&gt;         --END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                            --    || &apos;, cnt = &apos;&lt;br/&gt;                            --    || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_special_req_item;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_special_req_item_status (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_SPECIAL_REQ_ITEM_STATUS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_special_req_item_status will load the table &apos;&lt;br/&gt;      t_special_request_item_status&apos;.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name                    t_unit_name&lt;br/&gt;                                          := &apos;INSERT_SPECIAL_REQ_ITEM_STATUS&apos;;&lt;br/&gt;      l_errors                       NUMBER;&lt;br/&gt;      l_exist_count                  NUMBER;&lt;br/&gt;      l_systimestamp                 TIMESTAMP;&lt;br/&gt;      l_action_perform_record        stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string             stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key                    stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details              stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      --l_account_num                  NUMBER (10);&lt;br/&gt;      l_special_req_item_status_cd   t_special_request_item_status.special_request_item_status_cd%TYPE;&lt;br/&gt;      l_data_source_type_cd          t_special_request_item_status.data_source_type_cd%TYPE;&lt;br/&gt;      l_modified_dttm          t_special_request_item_status.modified_dttm%TYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;      /*pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;       --  FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;       --  LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;            l_special_req_item_status_cd := NULL;&lt;br/&gt;            l_data_source_type_cd := NULL;&lt;br/&gt;            l_modified_dttm    := NULL;&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;              IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;              THEN&lt;br/&gt;                  pkg_logging.log_debug&lt;br/&gt;                        (p_process_rec_i,&lt;br/&gt;                            l_proc_name&lt;br/&gt;                         || &apos;, &apos;&lt;br/&gt;                         || pkg_utility.c_proc_start_text&lt;br/&gt;                         || &apos;, SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                        );&lt;br/&gt;                 IF ( p_cursor_data_io.ord_no != pkg_utility.c_dummy_order_no)&lt;br/&gt;                 THEN&lt;br/&gt;                      BEGIN&lt;br/&gt;                       SELECT a.data_source_type_cd, a.special_request_item_status_cd,a.modified_dttm&lt;br/&gt;                         INTO l_data_source_type_cd,l_special_req_item_status_cd,l_modified_dttm&lt;br/&gt;                          FROM t_special_request_item_status a&lt;br/&gt;                           WHERE a.special_request_item_id = p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;                      EXCEPTION&lt;br/&gt;                       WHEN NO_DATA_FOUND&lt;br/&gt;                        THEN&lt;br/&gt;                         l_exist_count := 0;&lt;br/&gt;                      END;&lt;br/&gt;&lt;br/&gt;                      IF (l_exist_count &gt; 0)&lt;br/&gt;                        THEN&lt;br/&gt;                            IF (NVL (l_modified_dttm, pkg_utility.c_recon_null_date) &lt;&lt;br/&gt;                                                                l_current_recon_start_time&lt;br/&gt;                                 AND (   NVL (l_data_source_type_cd,&lt;br/&gt;                                              pkg_utility.c_recon_null_string&lt;br/&gt;                                             ) &lt;&gt;&lt;br/&gt;                                            NVL&lt;br/&gt;                                               (p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                pkg_utility.c_recon_null_string&lt;br/&gt;                                               )&lt;br/&gt;                                      OR NVL (l_special_req_item_status_cd,&lt;br/&gt;                                              pkg_utility.c_recon_null_string&lt;br/&gt;                                             ) &lt;&gt;&lt;br/&gt;                                            NVL&lt;br/&gt;                                               (p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                                pkg_utility.c_recon_null_string&lt;br/&gt;                                               )))&lt;br/&gt;                            THEN&lt;br/&gt;                              UPDATE t_special_request_item_status a&lt;br/&gt;                                 SET a.data_source_type_cd =&lt;br/&gt;                                        p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                     a.special_request_item_status_cd =&lt;br/&gt;                                        p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                     a.modified_dttm = l_systimestamp,&lt;br/&gt;                                     a.modified_by = p_audit_user_i,&lt;br/&gt;                                     a.record_stat = &apos;A&apos;&lt;br/&gt;                               WHERE a.special_request_item_id =&lt;br/&gt;                                        p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;                                 l_action_perform_record :=&lt;br/&gt;                                                       pkg_utility.c_recon_update_perform;&lt;br/&gt;                                 l_modif_val_string :=&lt;br/&gt;                                       &apos;data_source_type_cd : (&apos;&lt;br/&gt;                                    || l_data_source_type_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                                    || &apos; )&apos;&lt;br/&gt;                                    || &apos;special_request_item_status_cd : (&apos;&lt;br/&gt;                                    || l_special_req_item_status_cd&lt;br/&gt;                                    || &apos; =&gt; &apos;&lt;br/&gt;                                    || p_cursor_data_io.product_order_item_status_cd&lt;br/&gt;                                    || &apos; )&apos;;&lt;br/&gt;                              END IF;&lt;br/&gt;                      ELSIF (l_exist_count = 0)&lt;br/&gt;                           THEN&lt;br/&gt;                              l_action_perform_record :=&lt;br/&gt;                                                       pkg_utility.c_recon_insert_perform;&lt;br/&gt;                              da_special_request_item_status.ADD&lt;br/&gt;                                 (process_rec                         =&gt; p_process_rec_i,&lt;br/&gt;                                  special_request_item_id             =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                                  data_source_type_cd                 =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                  special_request_item_status_cd      =&gt; p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                  audit_user                          =&gt; p_audit_user_i&lt;br/&gt;                                 );&lt;br/&gt;                      END IF;&lt;br/&gt;&lt;br/&gt;                        IF l_action_perform_record IN(pkg_utility.c_recon_insert_perform,pkg_utility.c_recon_update_perform)&lt;br/&gt;                        THEN&lt;br/&gt;                          l_table_key :=&lt;br/&gt;                                &apos;SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.serv_id_opi&lt;br/&gt;                             || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                             || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                          pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                     (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                      p_table_name           =&gt; &apos;T_SPECIAL_REQUEST_ITEM_STATUS&apos;,&lt;br/&gt;                                      p_table_key            =&gt; l_table_key,&lt;br/&gt;                                      p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                      p_account_details      =&gt; NULL,&lt;br/&gt;                                      p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                      p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                     );&lt;br/&gt;                        END IF;&lt;br/&gt;                 END IF;&lt;br/&gt;               pkg_logging.log_debug&lt;br/&gt;                         (p_process_rec_i,&lt;br/&gt;                             l_proc_name&lt;br/&gt;                          || &apos;, &apos;&lt;br/&gt;                          || pkg_utility.c_proc_end_text&lt;br/&gt;                          || &apos;, SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                          || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                         );&lt;br/&gt;               p_cursor_data_io.record_load_cd := pkg_utility.c_stg_processed;&lt;br/&gt;              END IF;&lt;br/&gt;            EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                      pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                     (p_process_rec_i,&lt;br/&gt;                         l_proc_name&lt;br/&gt;                      || &apos;, SPECIAL_REQUEST_ITEM_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                      || &apos;, ORD_NO = &apos;&lt;br/&gt;                      || p_cursor_data_io.ord_no&lt;br/&gt;                      || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                      || p_cursor_data_io.serv_id_opi&lt;br/&gt;                      || &apos;, exception=&apos;&lt;br/&gt;                      || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                     );&lt;br/&gt;            END;&lt;br/&gt;         --END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                               -- || &apos;, cnt = &apos;&lt;br/&gt;                               -- || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_special_req_item_status;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_work_order_item (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_WORK_ORDER_ITEM&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_work_order_item will load the table t_work_order_item.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name               t_unit_name       := &apos;INSERT_WORK_ORDER_ITEM&apos;;&lt;br/&gt;      l_errors                  NUMBER;&lt;br/&gt;      l_exist_count             NUMBER;&lt;br/&gt;      l_systimestamp            TIMESTAMP;&lt;br/&gt;      l_action_perform_record   stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string        stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key               stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details         stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      --l_account_num             NUMBER (10);&lt;br/&gt;      l_work_order_item         t_work_order_item%ROWTYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;    /* pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;       --  FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;       --  LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;              IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;              THEN&lt;br/&gt;                  pkg_logging.log_debug&lt;br/&gt;                        (p_process_rec_i,&lt;br/&gt;                            l_proc_name&lt;br/&gt;                         || &apos;, &apos;&lt;br/&gt;                         || pkg_utility.c_proc_start_text&lt;br/&gt;                         || &apos;, WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                        );&lt;br/&gt;                 IF ( p_cursor_data_io.ord_no != pkg_utility.c_dummy_order_no)&lt;br/&gt;                 THEN&lt;br/&gt;                     BEGIN&lt;br/&gt;                      SELECT a.*&lt;br/&gt;                        INTO l_work_order_item&lt;br/&gt;                          FROM t_work_order_item a&lt;br/&gt;                            WHERE a.work_order_item_id = p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;                     EXCEPTION&lt;br/&gt;                     WHEN NO_DATA_FOUND&lt;br/&gt;                        THEN&lt;br/&gt;                         l_exist_count := 0;&lt;br/&gt;                     END;&lt;br/&gt;&lt;br/&gt;                    IF (l_exist_count &gt; 0)&lt;br/&gt;                    THEN&lt;br/&gt;                       IF&lt;br/&gt;                        (&lt;br/&gt;                        (&lt;br/&gt;                                NVL (l_work_order_item.data_source_type_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.work_order_id,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.job_bus_interact_id,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.account_id,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.account_id,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.create_dttm,&lt;br/&gt;                                                  pkg_utility.c_recon_null_date) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.create_dttm,&lt;br/&gt;                                                    pkg_utility.c_recon_null_date&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.sequence_num,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.sequence_num,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.before_item_qty,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.before_item_qty,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.after_item_qty,&lt;br/&gt;                                                  pkg_utility.c_recon_null_number&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.after_item_qty,&lt;br/&gt;                                                    pkg_utility.c_recon_null_number&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.package_billing_product_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.service_billing_product_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item.impacted_line_of_business_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                         --Added by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                         OR NVL(l_work_order_item.package_billing_product_id,pkg_utility.c_recon_null_number) &lt;&gt;&lt;br/&gt;                                            NVL(p_cursor_data_io.billing_package_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                         OR NVL(l_work_order_item.service_billing_product_id,pkg_utility.c_recon_null_number) &lt;&gt;&lt;br/&gt;                                            NVL(p_cursor_data_io.billing_service_product_id,pkg_utility.c_recon_null_number)&lt;br/&gt;                                         OR NVL( l_work_order_item.account_impact_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                                &lt;&gt; NVL(p_cursor_data_io.acct_stage,pkg_utility.c_recon_null_string)&lt;br/&gt;                                         OR NVL(l_work_order_item.line_of_business_impact_cd,pkg_utility.c_recon_null_string)&lt;br/&gt;                                               &lt;&gt; NVL(p_cursor_data_io.lob_acct_stage,pkg_utility.c_recon_null_string)&lt;br/&gt;                                         -- by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                        )&lt;br/&gt;                        AND NVL (l_work_order_item.modified_dttm, pkg_utility.c_recon_null_date) &lt;&lt;br/&gt;                                                                    l_current_recon_start_time&lt;br/&gt;                        )&lt;br/&gt;                        THEN&lt;br/&gt;&lt;br/&gt;                                  UPDATE t_work_order_item a&lt;br/&gt;                                     SET a.data_source_type_cd =&lt;br/&gt;                                            p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                         a.work_order_id =&lt;br/&gt;                                            p_cursor_data_io.job_bus_interact_id,&lt;br/&gt;                                         a.account_id =&lt;br/&gt;                                                  p_cursor_data_io.account_id,&lt;br/&gt;                                         a.create_dttm =&lt;br/&gt;                                                 p_cursor_data_io.create_dttm,&lt;br/&gt;                                         a.sequence_num =&lt;br/&gt;                                                p_cursor_data_io.sequence_num,&lt;br/&gt;                                         a.before_item_qty =&lt;br/&gt;                                             p_cursor_data_io.before_item_qty,&lt;br/&gt;                                         a.after_item_qty =&lt;br/&gt;                                              p_cursor_data_io.after_item_qty,&lt;br/&gt;                                         a.package_billing_product_cd =&lt;br/&gt;                                            p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                                         a.service_billing_product_cd =&lt;br/&gt;                                            p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                                         a.impacted_line_of_business_cd =&lt;br/&gt;                                            p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                                         a.modified_dttm = l_systimestamp,&lt;br/&gt;                                         a.modified_by = p_audit_user_i,&lt;br/&gt;                                         a.record_stat = &apos;A&apos;&lt;br/&gt;                                         --Added by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                        ,a.package_billing_product_id = p_cursor_data_io.billing_package_product_id&lt;br/&gt;                                        ,a.service_billing_product_id = p_cursor_data_io.billing_service_product_id&lt;br/&gt;                                        ,a.account_impact_cd = p_cursor_data_io.acct_stage&lt;br/&gt;                                        ,a.line_of_business_impact_cd =  p_cursor_data_io.lob_acct_stage&lt;br/&gt;                                         -- by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                                   WHERE a.work_order_item_id = p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;                         l_action_perform_record := pkg_utility.c_recon_update_perform;&lt;br/&gt;                         l_modif_val_string :=&lt;br/&gt;                               &apos;data_source_type_cd : (&apos;&lt;br/&gt;                            || l_work_order_item.data_source_type_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;work_order_id : (&apos;&lt;br/&gt;                            || l_work_order_item.work_order_id&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.job_bus_interact_id&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;account_id : (&apos;&lt;br/&gt;                            || l_work_order_item.account_id&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.account_id&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;create_dttm : (&apos;&lt;br/&gt;                            || l_work_order_item.create_dttm&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.create_dttm&lt;br/&gt;                            || &apos;)&apos;&lt;br/&gt;                            || &apos;sequence_num : (&apos;&lt;br/&gt;                            || l_work_order_item.sequence_num&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.sequence_num&lt;br/&gt;                            || &apos;)&apos;&lt;br/&gt;                            || &apos;before_item_qty : (&apos;&lt;br/&gt;                            || l_work_order_item.before_item_qty&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.before_item_qty&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;after_item_qty : (&apos;&lt;br/&gt;                            || l_work_order_item.after_item_qty&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.after_item_qty&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;package_billing_product_cd : (&apos;&lt;br/&gt;                            || l_work_order_item.package_billing_product_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.package_billing_product_cd&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;service_billing_product_cd : (&apos;&lt;br/&gt;                            || l_work_order_item.service_billing_product_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.service_billing_product_cd&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;impacted_line_of_business_cd : (&apos;&lt;br/&gt;                            || l_work_order_item.impacted_line_of_business_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.impacted_line_of_business_cd&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;account_impact_cd : (&apos;&lt;br/&gt;                            || l_work_order_item.account_impact_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.acct_stage&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;line_of_business_impact_cd : (&apos;&lt;br/&gt;                            || l_work_order_item.line_of_business_impact_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.lob_acct_stage&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;package_billing_product_id : (&apos;&lt;br/&gt;                            || l_work_order_item.package_billing_product_id&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.billing_package_product_id&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;service_billing_product_id : (&apos;&lt;br/&gt;                            || l_work_order_item.service_billing_product_id&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.billing_service_product_id&lt;br/&gt;                            || &apos; )&apos;  ;&lt;br/&gt;                       END IF;&lt;br/&gt;                    ELSIF (l_exist_count = 0)&lt;br/&gt;                     THEN&lt;br/&gt;                      l_action_perform_record :=&lt;br/&gt;                                               pkg_utility.c_recon_insert_perform;&lt;br/&gt;                      da_work_order_item.ADD&lt;br/&gt;                         (process_rec                       =&gt; p_process_rec_i,&lt;br/&gt;                          work_order_item_id                =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                          data_source_type_cd               =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                          work_order_id                     =&gt; p_cursor_data_io.job_bus_interact_id,&lt;br/&gt;                          account_id                        =&gt; p_cursor_data_io.account_id,&lt;br/&gt;                          create_dttm                       =&gt; p_cursor_data_io.create_dttm,&lt;br/&gt;                          sequence_num                      =&gt; p_cursor_data_io.sequence_num,&lt;br/&gt;                          before_item_qty                   =&gt; p_cursor_data_io.before_item_qty,&lt;br/&gt;                          after_item_qty                    =&gt; p_cursor_data_io.after_item_qty,&lt;br/&gt;                          item_action_cd                    =&gt; NULL,&lt;br/&gt;                          --package_billing_product_id        =&gt; NULL, --Commented by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                          package_billing_product_id        =&gt; p_cursor_data_io.billing_package_product_id,&lt;br/&gt;                          package_billing_product_cd        =&gt; p_cursor_data_io.package_billing_product_cd,&lt;br/&gt;                          --service_billing_product_id        =&gt; NULL,--Commented by Cognizant on 13-Mar-2015 Defect fix&lt;br/&gt;                          service_billing_product_id        =&gt; p_cursor_data_io.billing_service_product_id,&lt;br/&gt;                          service_billing_product_cd        =&gt; p_cursor_data_io.service_billing_product_cd,&lt;br/&gt;                          --account_impact_cd                 =&gt; NULL,acct_stage&lt;br/&gt;                          account_impact_cd                 =&gt;  p_cursor_data_io.acct_stage,&lt;br/&gt;                          --line_of_business_impact_cd        =&gt; NULL,&lt;br/&gt;                           line_of_business_impact_cd        =&gt;  p_cursor_data_io.lob_acct_stage,&lt;br/&gt;                          impacted_line_of_business_cd      =&gt; p_cursor_data_io.impacted_line_of_business_cd,&lt;br/&gt;                          audit_user                        =&gt; p_audit_user_i&lt;br/&gt;                         );&lt;br/&gt;                    END IF;&lt;br/&gt;&lt;br/&gt;                        IF l_action_perform_record IN(pkg_utility.c_recon_insert_perform,pkg_utility.c_recon_update_perform)&lt;br/&gt;                        THEN&lt;br/&gt;                          l_table_key :=&lt;br/&gt;                                &apos;WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_cursor_data_io.serv_id_opi&lt;br/&gt;                             || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                             || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                             || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                          pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                         (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                          p_table_name           =&gt; &apos;T_WORK_ORDER_ITEM&apos;,&lt;br/&gt;                                          p_table_key              =&gt; l_table_key,&lt;br/&gt;                                          p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                          p_account_details      =&gt; NULL,&lt;br/&gt;                                          p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                          p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                         );&lt;br/&gt;                        END IF;&lt;br/&gt;                 END IF;&lt;br/&gt;               pkg_logging.log_debug&lt;br/&gt;                         (p_process_rec_i,&lt;br/&gt;                             l_proc_name&lt;br/&gt;                          || &apos;, &apos;&lt;br/&gt;                          || pkg_utility.c_proc_end_text&lt;br/&gt;                          || &apos;, WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                          || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                         );&lt;br/&gt;&lt;br/&gt;              END IF;&lt;br/&gt;            EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                      pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                     (p_process_rec_i,&lt;br/&gt;                         l_proc_name&lt;br/&gt;                      || &apos;, WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                      || &apos;, ORD_NO = &apos;&lt;br/&gt;                      || p_cursor_data_io.ord_no&lt;br/&gt;                      || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                      || p_cursor_data_io.serv_id_opi&lt;br/&gt;                      || &apos;, exception=&apos;&lt;br/&gt;                      || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                     );&lt;br/&gt;            END;&lt;br/&gt;         --END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                               -- || &apos;, cnt = &apos;&lt;br/&gt;                               -- || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_work_order_item;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_work_order_item_status (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN              VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_WORK_ORDER_ITEM_STATUS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE insert_work_order_item_status will load the table &apos;t_work_order_item_status&apos;.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name                   t_unit_name&lt;br/&gt;                                           := &apos;INSERT_WORK_ORDER_ITEM_STATUS&apos;;&lt;br/&gt;      l_errors                      NUMBER;&lt;br/&gt;      l_exist_count                 NUMBER;&lt;br/&gt;      l_systimestamp                TIMESTAMP;&lt;br/&gt;      l_action_perform_record       stg.audit_recon_process.operation_perf%TYPE;&lt;br/&gt;      l_modif_val_string            stg.audit_recon_process.modif_values%TYPE;&lt;br/&gt;      l_table_key                   stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;      l_account_details             stg.audit_recon_process.account_details%TYPE;&lt;br/&gt;      --l_account_num                 NUMBER (10);&lt;br/&gt;      l_work_order_item_status_cd   t_work_order_item_status.work_order_item_status_cd%TYPE;&lt;br/&gt;      l_data_source_type_cd         t_work_order_item_status.data_source_type_cd%TYPE;&lt;br/&gt;      l_work_order_item_sts t_work_order_item_status%ROWTYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;     /* pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                             l_proc_name || &apos;, cnt=&apos; || p_filter_i.COUNT ()&lt;br/&gt;                            );*/&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;       --  FOR i IN 1 .. p_filter_i.COUNT&lt;br/&gt;       --  LOOP&lt;br/&gt;            l_exist_count := 1;&lt;br/&gt;            l_action_perform_record := &apos;&apos;;&lt;br/&gt;            l_modif_val_string := &apos;&apos;;&lt;br/&gt;            l_table_key := &apos;&apos;;&lt;br/&gt;            l_account_details := &apos;&apos;;&lt;br/&gt;            l_work_order_item_status_cd := NULL;&lt;br/&gt;            l_data_source_type_cd := NULL;&lt;br/&gt;&lt;br/&gt;            BEGIN&lt;br/&gt;              IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed) &lt;&gt; pkg_utility.c_stg_error)&lt;br/&gt;              THEN&lt;br/&gt;                  pkg_logging.log_debug&lt;br/&gt;                        (p_process_rec_i,&lt;br/&gt;                            l_proc_name&lt;br/&gt;                         || &apos;, &apos;&lt;br/&gt;                         || pkg_utility.c_proc_start_text&lt;br/&gt;                         || &apos;, WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                        );&lt;br/&gt;                 IF ( p_cursor_data_io.ord_no != pkg_utility.c_dummy_order_no&lt;br/&gt;                     )&lt;br/&gt;                 THEN&lt;br/&gt;                      BEGIN&lt;br/&gt;                       SELECT a.*&lt;br/&gt;                         INTO l_work_order_item_sts&lt;br/&gt;                          FROM t_work_order_item_status a&lt;br/&gt;                            WHERE a.work_order_item_id = p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;                      EXCEPTION&lt;br/&gt;                        WHEN NO_DATA_FOUND&lt;br/&gt;                         THEN&lt;br/&gt;                            l_exist_count := 0;&lt;br/&gt;                      END;&lt;br/&gt;&lt;br/&gt;                     IF (l_exist_count &gt; 0)&lt;br/&gt;                         THEN&lt;br/&gt;                        IF&lt;br/&gt;                            (&lt;br/&gt;                              NVL (l_work_order_item_sts.data_source_type_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                                                   )&lt;br/&gt;                                          OR NVL (l_work_order_item_sts.work_order_item_status_cd,&lt;br/&gt;                                                  pkg_utility.c_recon_null_string&lt;br/&gt;                                                 ) &lt;&gt;&lt;br/&gt;                                                NVL&lt;br/&gt;                                                   (p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                                    pkg_utility.c_recon_null_string&lt;br/&gt;                            ) AND NVL (l_work_order_item_sts.modified_dttm, pkg_utility.c_recon_null_date) &lt;&lt;br/&gt;                                                                    l_current_recon_start_time&lt;br/&gt;                            ) THEN&lt;br/&gt;                                  UPDATE t_work_order_item_status a&lt;br/&gt;                                     SET a.data_source_type_cd =&lt;br/&gt;                                            p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                                         a.work_order_item_status_cd =&lt;br/&gt;                                            p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                                         a.modified_dttm = l_systimestamp,&lt;br/&gt;                                         a.modified_by = p_audit_user_i,&lt;br/&gt;                                         a.record_stat = &apos;A&apos;&lt;br/&gt;                                   WHERE a.work_order_item_id =&lt;br/&gt;                                            p_cursor_data_io.bus_interact_item_id;&lt;br/&gt;&lt;br/&gt;                         l_action_perform_record :=&lt;br/&gt;                                               pkg_utility.c_recon_update_perform;&lt;br/&gt;                         l_modif_val_string :=&lt;br/&gt;                               &apos;data_source_type_cd : (&apos;&lt;br/&gt;                            || l_work_order_item_sts.data_source_type_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.data_source_type_cd&lt;br/&gt;                            || &apos; )&apos;&lt;br/&gt;                            || &apos;work_order_item_status_cd : (&apos;&lt;br/&gt;                            || l_work_order_item_sts.work_order_item_status_cd&lt;br/&gt;                            || &apos; =&gt; &apos;&lt;br/&gt;                            || p_cursor_data_io.product_order_item_status_cd&lt;br/&gt;                            || &apos; )&apos;;&lt;br/&gt;                        END IF;&lt;br/&gt;                     ELSIF (l_exist_count = 0)&lt;br/&gt;                     THEN&lt;br/&gt;                      l_action_perform_record :=&lt;br/&gt;                                               pkg_utility.c_recon_insert_perform;&lt;br/&gt;                      da_work_order_item_status.ADD&lt;br/&gt;                         (process_rec                    =&gt; p_process_rec_i,&lt;br/&gt;                          work_order_item_id             =&gt; p_cursor_data_io.bus_interact_item_id,&lt;br/&gt;                          data_source_type_cd            =&gt; p_cursor_data_io.data_source_type_cd,&lt;br/&gt;                          work_order_item_status_cd      =&gt; p_cursor_data_io.product_order_item_status_cd,&lt;br/&gt;                          audit_user                     =&gt; p_audit_user_i&lt;br/&gt;                         );&lt;br/&gt;                     END IF;&lt;br/&gt;&lt;br/&gt;                     IF l_action_perform_record IN(pkg_utility.c_recon_insert_perform,pkg_utility.c_recon_update_perform)&lt;br/&gt;                     THEN&lt;br/&gt;                      l_table_key :=&lt;br/&gt;                            &apos;WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                         || &apos;, SERV_ID = &apos;&lt;br/&gt;                         || p_cursor_data_io.serv_id_opi&lt;br/&gt;                         || &apos;, SUB_ACCT_NO = &apos;&lt;br/&gt;                         || p_cursor_data_io.sub_acct_no_opi&lt;br/&gt;                         || &apos;, CUST_ACCT_NO = &apos;&lt;br/&gt;                         || p_cursor_data_io.cust_acct_no_opi;&lt;br/&gt;                      pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                     (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                                      p_table_name           =&gt; &apos;T_WORK_ORDER_ITEM_STATUS&apos;,&lt;br/&gt;                                      p_table_key            =&gt; l_table_key,&lt;br/&gt;                                      p_modif_values         =&gt; l_modif_val_string,&lt;br/&gt;                                      p_account_details      =&gt; NULL,&lt;br/&gt;                                      p_operation_perf       =&gt; l_action_perform_record,&lt;br/&gt;                                      p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                     );&lt;br/&gt;                     END IF;&lt;br/&gt;                 END IF;&lt;br/&gt;                 pkg_logging.log_debug&lt;br/&gt;                         (p_process_rec_i,&lt;br/&gt;                             l_proc_name&lt;br/&gt;                          || &apos;, &apos;&lt;br/&gt;                          || pkg_utility.c_proc_end_text&lt;br/&gt;                          || &apos;, WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                          || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                         );&lt;br/&gt;              END IF;&lt;br/&gt;            EXCEPTION&lt;br/&gt;               WHEN OTHERS&lt;br/&gt;               THEN&lt;br/&gt;                  ROLLBACK;&lt;br/&gt;                  p_cursor_data_io.record_load_cd :=&lt;br/&gt;                                                      pkg_utility.c_stg_error;&lt;br/&gt;                  pkg_logging.log_exception&lt;br/&gt;                     (p_process_rec_i,&lt;br/&gt;                         l_proc_name&lt;br/&gt;                      || &apos;, WORK_ORDER_ITEM_ID = &apos;&lt;br/&gt;                      || p_cursor_data_io.bus_interact_item_id&lt;br/&gt;                      || &apos;, ORD_NO = &apos;&lt;br/&gt;                      || p_cursor_data_io.ord_no&lt;br/&gt;                      || &apos;, SERV_ID_OPI = &apos;&lt;br/&gt;                      || p_cursor_data_io.serv_id_opi&lt;br/&gt;                      || &apos;, exception=&apos;&lt;br/&gt;                      || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                     );&lt;br/&gt;            END;&lt;br/&gt;         --END LOOP;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                            --    || &apos;, cnt = &apos;&lt;br/&gt;                            --    || p_filter_i.COUNT ()&lt;br/&gt;                               );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;         THEN&lt;br/&gt;            ROLLBACK;&lt;br/&gt;            pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, exception=&apos;&lt;br/&gt;                                       || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                      );&lt;br/&gt;            pkg_logging.end_process (p_process_rec_i,&lt;br/&gt;                                     pkg_utility.c_process_error&lt;br/&gt;                                    );&lt;br/&gt;      END;&lt;br/&gt;   END insert_work_order_item_status;&lt;br/&gt;&lt;br/&gt;   PROCEDURE update_staging (&lt;br/&gt;      p_process_rec_i    IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN   cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_audit_user_i     IN   VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : LOAD&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The PROCEDURE update_staging will update the table  stg.vnt_opi_open_item.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name            t_unit_name := &apos;UPDATE_STAGING&apos;;&lt;br/&gt;      l_process_record_cnt   NUMBER;&lt;br/&gt;      l_error_record_cnt     NUMBER;&lt;br/&gt;      l_systimestamp         TIMESTAMP;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, &apos;&lt;br/&gt;                             || pkg_utility.c_proc_start_text&lt;br/&gt;                            );&lt;br/&gt;      l_systimestamp := SYSTIMESTAMP;&lt;br/&gt;&lt;br/&gt;     -- FOR i IN 1 .. p_cursor_data_io.COUNT&lt;br/&gt;     -- LOOP&lt;br/&gt;         BEGIN&lt;br/&gt;            UPDATE stg.vnt_opi_open_item_rec_delta s&lt;br/&gt;               SET s.record_load_cd = NVL (p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed),&lt;br/&gt;                      s.record_dttm = SYSTIMESTAMP&lt;br/&gt;             WHERE ROWID = p_cursor_data_io.ID;&lt;br/&gt;         EXCEPTION&lt;br/&gt;         WHEN OTHERS&lt;br/&gt;            THEN&lt;br/&gt;               ROLLBACK;&lt;br/&gt;               pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                             l_proc_name&lt;br/&gt;                                          || &apos;, ROWID = &apos;&lt;br/&gt;                                          || p_cursor_data_io.ID&lt;br/&gt;                                          || &apos;, exception=&apos;&lt;br/&gt;                                          || DBMS_UTILITY.format_error_stack()&lt;br/&gt;                                         );&lt;br/&gt;         END;&lt;br/&gt;            --Capturing the Processed/error record count&lt;br/&gt;         IF(NVL(p_cursor_data_io.record_load_cd,pkg_utility.c_stg_processed)) = pkg_utility.c_stg_processed&lt;br/&gt;            THEN&lt;br/&gt;              g_process_record_cnt := g_process_record_cnt + 1;&lt;br/&gt;         ELSIF(p_cursor_data_io.record_load_cd = pkg_utility.c_stg_error)&lt;br/&gt;             THEN&lt;br/&gt;                g_error_record_cnt := g_error_record_cnt + 1;&lt;br/&gt;         END IF;&lt;br/&gt;      --END LOOP;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos; &apos;&lt;br/&gt;                             || pkg_utility.c_proc_end_text&lt;br/&gt;                            -- || &apos;, cnt = &apos;&lt;br/&gt;                            -- || p_cursor_data_io.COUNT ()&lt;br/&gt;                            );&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                       l_proc_name&lt;br/&gt;                                    || &apos;, exception=&apos;&lt;br/&gt;                                    || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;   END update_staging;&lt;br/&gt;&lt;br/&gt;  FUNCTION filter_item_for_order (&lt;br/&gt;      p_process_rec_i       IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io      IN OUT NOCOPY cur_stg_opi_open_item%ROWTYPE,&lt;br/&gt;      p_select_order_type   IN   t_bus_interact.bus_interact_type_cd%TYPE&lt;br/&gt;   )&lt;br/&gt;    --  RETURN t_ptr_tbl&lt;br/&gt;    RETURN VARCHAR2&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : FILTER_ITEM_FOR_ORDER&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : The function filter_item_for_order will return the filter item for order&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;FILTER_ITEM_FOR_ORDER&apos;;&lt;br/&gt;--      l_temp        t_ptr_tbl;&lt;br/&gt;--      l_idx         PLS_INTEGER := 0;&lt;br/&gt;      l_proceed_flag    VARCHAR2(1);&lt;br/&gt;   BEGIN&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos; &apos;&lt;br/&gt;                             || pkg_utility.c_proc_start_text&lt;br/&gt;--                             || &apos;, cnt = &apos;&lt;br/&gt;--                             || p_cursor_data_io.COUNT()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;--     FOR i IN 1 .. p_cursor_data_io.COUNT&lt;br/&gt;--     LOOP&lt;br/&gt;       BEGIN&lt;br/&gt;            l_proceed_flag := &apos;N&apos;;&lt;br/&gt;&lt;br/&gt;         IF (p_cursor_data_io.bus_interact_item_type_cd =&lt;br/&gt;                                                           p_select_order_type&lt;br/&gt;            )&lt;br/&gt;         THEN&lt;br/&gt;            IF (p_select_order_type = pkg_utility.c_request_type_cd_wrkord)&lt;br/&gt;            THEN&lt;br/&gt;               IF (    p_cursor_data_io.sequence_num &gt; 0&lt;br/&gt;                   AND p_cursor_data_io.job_bus_interact_id IS NOT NULL&lt;br/&gt;                  )&lt;br/&gt;               THEN&lt;br/&gt;--                  l_idx := l_idx + 1;&lt;br/&gt;--                  l_temp (l_idx) := i;&lt;br/&gt;                     l_proceed_flag := &apos;Y&apos;;&lt;br/&gt;               END IF;&lt;br/&gt;            ELSE&lt;br/&gt;               IF (p_cursor_data_io.sequence_num = 0)&lt;br/&gt;               THEN&lt;br/&gt;--                  l_idx := l_idx + 1;&lt;br/&gt;--                  l_temp (l_idx) := i;&lt;br/&gt;                     l_proceed_flag := &apos;Y&apos;;&lt;br/&gt;               END IF;&lt;br/&gt;            END IF;&lt;br/&gt;         END IF;&lt;br/&gt;       EXCEPTION&lt;br/&gt;                   WHEN OTHERS&lt;br/&gt;                     THEN&lt;br/&gt;                        p_cursor_data_io.record_load_cd := pkg_utility.c_stg_error;&lt;br/&gt;                        pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                                                    l_proc_name&lt;br/&gt;                                                                || &apos;, bus_interact_item_type_cd = &apos;&lt;br/&gt;                                                                || p_cursor_data_io.bus_interact_item_type_cd&lt;br/&gt;                                                                || &apos;, p_select_order_type = &apos;&lt;br/&gt;                                                                || p_select_order_type&lt;br/&gt;                                                                || &apos;, job_bus_interact_id = &apos;&lt;br/&gt;                                                                ||  p_cursor_data_io.job_bus_interact_id&lt;br/&gt;                                                                || &apos;, sequence_num = &apos;&lt;br/&gt;                                                                || p_cursor_data_io.sequence_num&lt;br/&gt;                                                                || &apos;, exception=&apos;&lt;br/&gt;                                                                || DBMS_UTILITY.format_error_stack()&lt;br/&gt;                                                               );&lt;br/&gt;        END;&lt;br/&gt;     -- END LOOP;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos; &apos;&lt;br/&gt;                             || pkg_utility.c_proc_end_text&lt;br/&gt;--                             || &apos;, cnt = &apos;&lt;br/&gt;--                             || p_cursor_data_io.COUNT()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      RETURN l_proceed_flag ;&lt;br/&gt;   END filter_item_for_order;&lt;br/&gt;&lt;br/&gt;   FUNCTION get_bus_interact_item_order (&lt;br/&gt;      p_process_rec_i               IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_order_no                    IN              t_bus_interact_item_vnt_xref.order_num%TYPE,&lt;br/&gt;      p_serv_id                     IN              t_bus_interact_item_vnt_xref.serv_id%TYPE,&lt;br/&gt;      p_bus_interact_item_type_cd   IN              t_bus_interact_item.bus_interact_item_type_cd%TYPE,&lt;br/&gt;      p_row_io                      IN OUT NOCOPY   t_bus_interact_item%ROWTYPE&lt;br/&gt;   )&lt;br/&gt;      RETURN BOOLEAN&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : FUNCTION get_bus_interact_item_order&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This function will return the records from t_bus_interact_item_vnt_xref&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;GET_BUS_INTERACT_ITEM_ORDER&apos;;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos; &apos;&lt;br/&gt;                             || pkg_utility.c_proc_start_text&lt;br/&gt;                             || &apos;, ORDER_NO = &apos;&lt;br/&gt;                             || p_order_no&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_serv_id&lt;br/&gt;                             || &apos;, BUS_INTERACT_ITEM_TYPE_CD = &apos;&lt;br/&gt;                             || p_bus_interact_item_type_cd&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;     /* IF (p_bus_interact_item_type_cd IN (pkg_utility.c_request_type_cd_prdord, pkg_utility.c_request_type_cd_splreq))  --commented on Feb 11&lt;br/&gt;      THEN&lt;br/&gt;         SELECT a.*&lt;br/&gt;           INTO p_row_io&lt;br/&gt;           FROM t_bus_interact_item_vnt_xref xref INNER JOIN t_bus_interact_item a&lt;br/&gt;                ON a.bus_interact_item_id = xref.bus_interact_item_id&lt;br/&gt;          WHERE xref.order_num = p_order_no&lt;br/&gt;            AND xref.serv_id = p_serv_id&lt;br/&gt;            --AND a.bus_interact_item_type_cd IN (&apos;PRORD&apos;, &apos;SPREQ&apos;);&lt;br/&gt;            AND a.bus_interact_item_type_cd IN (pkg_utility.c_request_type_cd_prdord, pkg_utility.c_request_type_cd_splreq);&lt;br/&gt;            --AND a.record_stat = pkg_utility.c_record_active;&lt;br/&gt;      ELSIF (p_bus_interact_item_type_cd IN (pkg_utility.c_request_type_cd_wrkord))&lt;br/&gt;      /*THEN&lt;br/&gt;         SELECT a.*&lt;br/&gt;           INTO p_row_io&lt;br/&gt;           FROM t_bus_interact_item a&lt;br/&gt;          WHERE a.source_system_id = p_order_no || p_serv_id&lt;br/&gt;            AND a.bus_interact_item_type_cd IN (&apos;WO&apos;);*/&lt;br/&gt;      --AND a.bus_interact_item_type_cd IN (&apos;REQ&apos;) --&gt; Commented for Vantage - Data Model Change by Cognizant&lt;br/&gt;      --AND a.record_stat = pkg_utility.c_record_active;&lt;br/&gt;      ----Added below by Cognizant  On 26-Jan-2015&lt;br/&gt;       /*    THEN  --commented on Feb 11&lt;br/&gt;           SELECT a.*&lt;br/&gt;           INTO p_row_io&lt;br/&gt;           FROM t_bus_interact_item_vnt_xref xref INNER JOIN t_bus_interact_item a&lt;br/&gt;           ON a.bus_interact_item_id = xref.bus_interact_item_id&lt;br/&gt;          WHERE xref.order_num = p_order_no&lt;br/&gt;            AND xref.serv_id = p_serv_id&lt;br/&gt;            AND a.bus_interact_item_type_cd IN (pkg_utility.c_request_type_cd_wrkord);&lt;br/&gt;&lt;br/&gt;            ----Added by Cognizant  On 26-Jan-2015&lt;br/&gt;      END IF;*/  --  commented on Feb 11&lt;br/&gt;  IF (p_bus_interact_item_type_cd IN (chtr.pkg_utility.c_request_type_cd_prdord, chtr.pkg_utility.c_request_type_cd_splreq,chtr.pkg_utility.c_request_type_cd_wrkord))&lt;br/&gt;      THEN&lt;br/&gt;         SELECT a.*&lt;br/&gt;           INTO p_row_io&lt;br/&gt;             FROM t_bus_interact_item_vnt_xref xref INNER JOIN t_bus_interact_item a&lt;br/&gt;              ON a.bus_interact_item_id = xref.bus_interact_item_id&lt;br/&gt;              WHERE xref.order_num = p_order_no&lt;br/&gt;               AND xref.serv_id = p_serv_id;&lt;br/&gt;            --  AND a.bus_interact_item_type_cd =p_bus_interact_item_type_cd;&lt;br/&gt;               --IN (chtr.pkg_utility.c_request_type_cd_prdord, chtr.pkg_utility.c_request_type_cd_splreq,chtr.pkg_utility.c_request_type_cd_wrkord);&lt;br/&gt;      END IF;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos; &apos;&lt;br/&gt;                             || pkg_utility.c_proc_end_text&lt;br/&gt;                             || &apos;, ORDER_NO = &apos;&lt;br/&gt;                             || p_order_no&lt;br/&gt;                             || &apos;, SERV_ID = &apos;&lt;br/&gt;                             || p_serv_id&lt;br/&gt;                             || &apos;, BUS_INTERACT_ITEM_TYPE_CD = &apos;&lt;br/&gt;                             || p_bus_interact_item_type_cd&lt;br/&gt;                             || &apos;, BUS_INTER_ITEM_ORDER FOUND&apos;&lt;br/&gt;                            );&lt;br/&gt;      RETURN TRUE;&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN NO_DATA_FOUND&lt;br/&gt;      THEN&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   l_proc_name&lt;br/&gt;                                || &apos; &apos;&lt;br/&gt;                                || pkg_utility.c_proc_end_text&lt;br/&gt;                                || &apos;, ORDER_NO = &apos;&lt;br/&gt;                                || p_order_no&lt;br/&gt;                                || &apos;, SERV_ID = &apos;&lt;br/&gt;                                || p_serv_id&lt;br/&gt;                                || &apos;, BUS_INTERACT_ITEM_TYPE_CD = &apos;&lt;br/&gt;                                || p_bus_interact_item_type_cd&lt;br/&gt;                                || &apos;, bus_inter_item_order NOT found&apos;&lt;br/&gt;                               );&lt;br/&gt;         RETURN FALSE;&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         pkg_logging.log_exception (p_process_rec_i,&lt;br/&gt;                                       l_proc_name&lt;br/&gt;                                    || &apos;, ORDER_NO = &apos;&lt;br/&gt;                                    || p_order_no&lt;br/&gt;                                    || &apos;, SERV_ID = &apos;&lt;br/&gt;                                    || p_serv_id&lt;br/&gt;                                    || &apos;, BUS_INTERACT_ITEM_TYPE_CD = &apos;&lt;br/&gt;                                    || p_bus_interact_item_type_cd&lt;br/&gt;                                    || &apos;, exception=&apos;&lt;br/&gt;                                    || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;         RETURN FALSE;&lt;br/&gt;   END get_bus_interact_item_order;&lt;br/&gt;END PKG_VNT_RECON_OPI_OPEN_ITEM;</source>
</body>
</PackageOracle>
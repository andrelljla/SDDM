<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PKG_VNT_LOAD_SCN_CONTACT_BLG" directorySegmentName="seg_6" id="09DE2350-4FC8-97C2-6870-A19C44069168">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_LOAD_SCN_CONTACT_BLG</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:18:18 UTC</createdTime>
<ownerDesignName>SOLO_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE      CHTR.PKG_VNT_LOAD_SCN_CONTACT_BLG&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name       : PKG_VNT_LOAD_HSE_BASE&lt;br/&gt;   ||  Created By         : KARTHIK&lt;br/&gt;   ||  Created Date       : 01-June-2014&lt;br/&gt;   ||  Subject Area       : Billing Address&lt;br/&gt;   ||  Description        : This is for loading Billing Address details not in House Base from&lt;br/&gt;   ||                       the staging table &apos;vnt_scn_contact&apos;.&lt;br/&gt;   ||&lt;br/&gt;   ||  Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   PROCEDURE load(&lt;br/&gt;         p_audit_user_i IN VARCHAR2,&lt;br/&gt;         p_this_thread NUMBER DEFAULT 1,&lt;br/&gt;         p_max_thread NUMBER DEFAULT 1,&lt;br/&gt;         p_batchsize   NUMBER DEFAULT 1000 );&lt;br/&gt;END pkg_vnt_load_scn_contact_blg;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PKG_VNT_LOAD_SCN_CONTACT_BLG" id="09DE2350-4FC8-97C2-6870-A19C44069168">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_LOAD_SCN_CONTACT_BLG</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:18:20 UTC</createdTime>
<ownerDesignName>SOLO_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE BODY      CHTR.PKG_VNT_LOAD_SCN_CONTACT_BLG&lt;br/&gt;IS&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  Program Name       : PKG_VNT_LOAD_SCN_CONTACT_BLG&lt;br/&gt;   ||  Created By         : KARTHIK&lt;br/&gt;   ||  Created Date       : 01-June-2014&lt;br/&gt;   ||  Subject Area       : Billing Address&lt;br/&gt;   ||  Description        : This is for loading Billing Address details not in House Base from&lt;br/&gt;   ||                       the staging table vnt_scn_contact.&lt;br/&gt;   ||  Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ||&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   SUBTYPE t_unit_name IS VARCHAR2 (30);&lt;br/&gt;&lt;br/&gt;   -- CONSTANTS&lt;br/&gt;   c_stg_processed   CONSTANT VARCHAR2 (1) := &apos;P&apos;;&lt;br/&gt;   c_stg_error       CONSTANT VARCHAR2 (1) := &apos;E&apos;;&lt;br/&gt;   c_country_code    CONSTANT VARCHAR2 (3) := &apos;1&apos;;&lt;br/&gt;   c_pkg_name        CONSTANT t_unit_name  := &apos;PKG_VNT_LOAD_SCN_CONTACT_BLG&apos;;&lt;br/&gt;   -- EXCEPTION CONSTANTS&lt;br/&gt;   c_bulk_errors              EXCEPTION;&lt;br/&gt;   PRAGMA EXCEPTION_INIT (c_bulk_errors, -24381);&lt;br/&gt;   -- THREADING BIND VARIABLES&lt;br/&gt;   g_this_thread              NUMBER       := 1;&lt;br/&gt;   g_max_thread               NUMBER       := 1;&lt;br/&gt;   g_batchsize                NUMBER       := 10000;&lt;br/&gt;&lt;br/&gt;   -- CURSORS&lt;br/&gt;&lt;br/&gt;   -- Staged HSE_BASE for loading&lt;br/&gt;   CURSOR cur_stg_scn_contact_blg&lt;br/&gt;   IS&lt;br/&gt;      SELECT&lt;br/&gt;             -- staging control data&lt;br/&gt;             SCN.ROWID AS ID, SCN.record_load_cd,&lt;br/&gt;&lt;br/&gt;             -- surrogate keys&lt;br/&gt;             s_address_id.NEXTVAL AS source_street_address_id,&lt;br/&gt;&lt;br/&gt;             -- source keys&lt;br/&gt;             xref.account_id account_id, sub_acct_no_scn account_num,&lt;br/&gt;&lt;br/&gt;             -- data&lt;br/&gt;             UPPER (TRIM (bt_addr1_scn)) address_line_1_txt,&lt;br/&gt;             UPPER (TRIM (bt_addr2_scn)) address_line_2_txt,&lt;br/&gt;             UPPER (TRIM (bt_city_scn)) city_nm,&lt;br/&gt;             UPPER (TRIM (bt_state_scn)) territory_cd,&lt;br/&gt;             UPPER (TRIM (bt_postal_cde_scn)) postal_code_txt,&lt;br/&gt;             UPPER (TRIM (bt_country_scn)) country_cd,&lt;br/&gt;             CASE&lt;br/&gt;                WHEN sys_scn = 8313&lt;br/&gt;                   THEN &apos;BRS&apos;&lt;br/&gt;                ELSE &apos;VNT&apos;&lt;br/&gt;             END data_source_type_cd&lt;br/&gt;        FROM stg.vnt_scn_contact_rec_prev SCN INNER JOIN chtr.t_account_vantage_xref xref&lt;br/&gt;             ON SCN.sub_acct_no_scn = xref.sub_acct_num&lt;br/&gt;       WHERE TRIM (bt_addr_inheritance_flg_scn) IS NULL&lt;br/&gt;         AND SCN.record_load_cd IS NULL&lt;br/&gt;         AND MOD (ASCII (SUBSTR (SCN.ROWID, LENGTH (SCN.ROWID), 1)),&lt;br/&gt;                  g_max_thread&lt;br/&gt;                 ) = (g_this_thread - 1);&lt;br/&gt;&lt;br/&gt;   TYPE t_cursor_data_blg_tbl IS TABLE OF cur_stg_scn_contact_blg%ROWTYPE&lt;br/&gt;      INDEX BY PLS_INTEGER;&lt;br/&gt;&lt;br/&gt;   -- Forward declarations&lt;br/&gt;   PROCEDURE insert_account_address_blg (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;--&lt;br/&gt;   PROCEDURE insert_street_address (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_source_street_address (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_locator (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_address (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE update_staging_blg (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_i   IN   t_cursor_data_blg_tbl&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE load_scn_contact_blg (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i    IN   VARCHAR2&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE LOAD (&lt;br/&gt;      p_audit_user_i   IN   VARCHAR2,&lt;br/&gt;      p_this_thread         NUMBER DEFAULT 1,&lt;br/&gt;      p_max_thread          NUMBER DEFAULT 1,&lt;br/&gt;      p_batchsize           NUMBER DEFAULT 1000&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : LOAD&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for loading Billing Address details not in House Base from&lt;br/&gt;      ||                       the staging table &apos;vnt_scn_contact&apos;.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name         t_unit_name                       := &apos;LOAD&apos;;&lt;br/&gt;      l_process_name      t_process_log.process_name%TYPE   := c_pkg_name;&lt;br/&gt;      l_process_rec       pkg_logging.t_process_rec;&lt;br/&gt;      l_cursor_data_blg   t_cursor_data_blg_tbl;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_process_rec.process_name := l_process_name;&lt;br/&gt;      pkg_logging.begin_process (l_process_rec,&lt;br/&gt;                                 &apos;p_audit_user_i=&apos; || p_audit_user_i&lt;br/&gt;                                );&lt;br/&gt;      g_this_thread := p_this_thread;&lt;br/&gt;      g_max_thread := p_max_thread;&lt;br/&gt;      g_batchsize := p_batchsize;&lt;br/&gt;      load_scn_contact_blg (p_process_rec_i      =&gt; l_process_rec,&lt;br/&gt;                            p_audit_user_i       =&gt; p_audit_user_i&lt;br/&gt;                           );&lt;br/&gt;      pkg_logging.end_process (l_process_rec);&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception (l_process_rec,&lt;br/&gt;                                    DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, &apos;ERROR WHILE PROCESSING&apos;);&lt;br/&gt;   END LOAD;&lt;br/&gt;&lt;br/&gt;   PROCEDURE load_scn_contact_blg (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i    IN   VARCHAR2&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;        /****************************************************************************************************************&lt;br/&gt;        ||  SubProgram Name    : load_scn_contact_blg&lt;br/&gt;        ||  Estimated Run Time :&lt;br/&gt;        ||  Description        : This is for loading Billing Address details not in House Base from&lt;br/&gt;        ||                       the staging table &apos;vnt_scn_contact&apos;.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name         t_unit_name               := &apos;load_scn_contact_blg&apos;;&lt;br/&gt;      l_process_rec       pkg_logging.t_process_rec;&lt;br/&gt;      l_cursor_data_blg   t_cursor_data_blg_tbl;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_process_rec := p_process_rec_i;&lt;br/&gt;      pkg_logging.log_debug (l_process_rec, l_proc_name || &apos; Start&apos;);&lt;br/&gt;&lt;br/&gt;      IF pkg_utility.stopnow (c_pkg_name)&lt;br/&gt;      THEN&lt;br/&gt;         RETURN;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      IF (cur_stg_scn_contact_blg%ISOPEN)&lt;br/&gt;      THEN&lt;br/&gt;         CLOSE cur_stg_scn_contact_blg;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      OPEN cur_stg_scn_contact_blg;&lt;br/&gt;&lt;br/&gt;      LOOP&lt;br/&gt;         FETCH cur_stg_scn_contact_blg&lt;br/&gt;         BULK COLLECT INTO l_cursor_data_blg LIMIT g_batchsize;&lt;br/&gt;&lt;br/&gt;         IF (l_cursor_data_blg.COUNT () &gt; 0)&lt;br/&gt;         THEN&lt;br/&gt;            -- Insert locator&lt;br/&gt;            insert_locator (l_process_rec, l_cursor_data_blg);&lt;br/&gt;            -- Insert address&lt;br/&gt;            insert_address (l_process_rec, l_cursor_data_blg);&lt;br/&gt;            -- insert account address&lt;br/&gt;            insert_account_address_blg (l_process_rec, l_cursor_data_blg&lt;br/&gt;                                                                        --, l_filter_ptr&lt;br/&gt;            );&lt;br/&gt;            -- Insert source_street_address&lt;br/&gt;            insert_source_street_address (l_process_rec, l_cursor_data_blg);&lt;br/&gt;            -- Insert street_address&lt;br/&gt;            insert_street_address (l_process_rec, l_cursor_data_blg);&lt;br/&gt;--         -- Update the staging rows with status&lt;br/&gt;            update_staging_blg (l_process_rec, l_cursor_data_blg);&lt;br/&gt;--          Commit the batch&lt;br/&gt;            COMMIT;&lt;br/&gt;         END IF;&lt;br/&gt;&lt;br/&gt;         EXIT WHEN l_cursor_data_blg.COUNT () &lt; g_batchsize&lt;br/&gt;               OR pkg_utility.stopnow (c_pkg_name);&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      CLOSE cur_stg_scn_contact_blg;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (l_process_rec, l_proc_name || &apos; End&apos;);&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;&lt;br/&gt;         --Added on 10-Nov-2014 as part of Code Standardization Changes&lt;br/&gt;         IF (cur_stg_scn_contact_blg%ISOPEN)&lt;br/&gt;         THEN&lt;br/&gt;            CLOSE cur_stg_scn_contact_blg;&lt;br/&gt;         END IF;&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_exception (l_process_rec,&lt;br/&gt;                                    DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;   END load_scn_contact_blg;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_account_address_blg (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_ACCOUNT_ADDRESS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for loading Account Related details specifically into the target table &apos;&lt;br/&gt;      T_ACCOUNT_ADDRESS&apos; via Bilk Load Mechanism.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;INSERT_ACCOUNT_ADDRESS&apos;;&lt;br/&gt;      l_errors      NUMBER;&lt;br/&gt;      l_coll_idx    PLS_INTEGER;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, cnt=&apos;&lt;br/&gt;                             || p_cursor_data_io.COUNT ()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         FORALL i IN 1 .. p_cursor_data_io.COUNT SAVE EXCEPTIONS&lt;br/&gt;            INSERT INTO t_account_address a&lt;br/&gt;                        (a.account_id,&lt;br/&gt;                         a.address_id,&lt;br/&gt;                         a.address_usage_type_cd, a.data_source_type_cd,&lt;br/&gt;                         a.record_stat, a.created_dttm, a.created_by&lt;br/&gt;                        )&lt;br/&gt;                 VALUES (p_cursor_data_io (i).account_id,&lt;br/&gt;                         p_cursor_data_io (i).source_street_address_id,&lt;br/&gt;                         &apos;BLG&apos;, p_cursor_data_io (i).data_source_type_cd,&lt;br/&gt;                         &apos;A&apos;, SYSTIMESTAMP, c_pkg_name&lt;br/&gt;                        );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN c_bulk_errors&lt;br/&gt;         THEN&lt;br/&gt;            l_errors := SQL%BULK_EXCEPTIONS.COUNT;&lt;br/&gt;&lt;br/&gt;            FOR i IN 1 .. l_errors&lt;br/&gt;            LOOP&lt;br/&gt;               NULL;&lt;br/&gt;               l_coll_idx := SQL%BULK_EXCEPTIONS (i).ERROR_INDEX;&lt;br/&gt;               p_cursor_data_io (l_coll_idx).record_load_cd := c_stg_error;&lt;br/&gt;               pkg_logging.log_exception&lt;br/&gt;                                 (p_process_rec_i,&lt;br/&gt;                                     l_proc_name&lt;br/&gt;                                  || &apos;, bulk insert exception, key=&apos;&lt;br/&gt;                                  || p_cursor_data_io (l_coll_idx).account_num&lt;br/&gt;                                  || &apos;, exception=&apos;&lt;br/&gt;                                  || SQL%BULK_EXCEPTIONS (i).ERROR_CODE&lt;br/&gt;                                 );&lt;br/&gt;            END LOOP;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, end&apos;);&lt;br/&gt;   END insert_account_address_blg;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_source_street_address (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_SOURCE_STREET_ADDRESS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for loading Billing Address details specifically into the target table&lt;br/&gt;      ||                       &apos;t_source_street_address&apos; via Bilk Load Mechanism.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;INSERT_SOURCE_STREET_ADDRESS&apos;;&lt;br/&gt;      l_errors      NUMBER;&lt;br/&gt;      l_coll_idx    PLS_INTEGER;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, cnt=&apos;&lt;br/&gt;                             || p_cursor_data_io.COUNT ()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         FORALL i IN 1 .. p_cursor_data_io.COUNT SAVE EXCEPTIONS&lt;br/&gt;            INSERT INTO t_source_street_address a&lt;br/&gt;                        (a.source_street_address_id,&lt;br/&gt;                         a.address_line_1_txt,&lt;br/&gt;                         a.address_line_2_txt, a.address_line_3_txt,&lt;br/&gt;                         a.city_nm,&lt;br/&gt;                         a.territory_cd,&lt;br/&gt;                         a.country_cd,&lt;br/&gt;                         a.postal_code_txt, a.carrier_route_txt,&lt;br/&gt;                         a.clean_street_address_id, a.clean_po_box_id,&lt;br/&gt;                         a.record_stat, a.created_dttm, a.created_by&lt;br/&gt;                        )&lt;br/&gt;                 VALUES (p_cursor_data_io (i).source_street_address_id,&lt;br/&gt;                         p_cursor_data_io (i).address_line_1_txt,&lt;br/&gt;                         p_cursor_data_io (i).address_line_2_txt, NULL,&lt;br/&gt;                         p_cursor_data_io (i).city_nm,&lt;br/&gt;                         p_cursor_data_io (i).territory_cd,&lt;br/&gt;                         p_cursor_data_io (i).country_cd,&lt;br/&gt;                         p_cursor_data_io (i).postal_code_txt, NULL,&lt;br/&gt;                         NULL, NULL,&lt;br/&gt;                         &apos;A&apos;, SYSTIMESTAMP, c_pkg_name&lt;br/&gt;                        );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN c_bulk_errors&lt;br/&gt;         THEN&lt;br/&gt;            l_errors := SQL%BULK_EXCEPTIONS.COUNT;&lt;br/&gt;&lt;br/&gt;            FOR i IN 1 .. l_errors&lt;br/&gt;            LOOP&lt;br/&gt;               NULL;&lt;br/&gt;               l_coll_idx := SQL%BULK_EXCEPTIONS (i).ERROR_INDEX;&lt;br/&gt;               p_cursor_data_io (l_coll_idx).record_load_cd := c_stg_error;&lt;br/&gt;               pkg_logging.log_exception&lt;br/&gt;                    (p_process_rec_i,&lt;br/&gt;                        l_proc_name&lt;br/&gt;                     || &apos;, bulk insert exception, key=&apos;&lt;br/&gt;                     || p_cursor_data_io (l_coll_idx).source_street_address_id&lt;br/&gt;                     || &apos;, exception=&apos;&lt;br/&gt;                     || SQL%BULK_EXCEPTIONS (i).ERROR_CODE&lt;br/&gt;                    );&lt;br/&gt;            END LOOP;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, end&apos;);&lt;br/&gt;   END insert_source_street_address;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_street_address (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_STREET_ADDRESS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for loading Billing Base details specifically into the target table&lt;br/&gt;      ||                       &apos;t_street_address&apos; via Bilk Load Mechanism.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;INSERT_STREET_ADDRESS&apos;;&lt;br/&gt;      l_errors      NUMBER;&lt;br/&gt;      l_coll_idx    PLS_INTEGER;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, cnt=&apos;&lt;br/&gt;                             || p_cursor_data_io.COUNT ()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         FORALL i IN 1 .. p_cursor_data_io.COUNT SAVE EXCEPTIONS&lt;br/&gt;            INSERT INTO t_street_address a&lt;br/&gt;                        (a.street_address_id,&lt;br/&gt;                         a.address_line_1_txt,&lt;br/&gt;                         a.address_line_2_txt, a.address_line_3_txt,&lt;br/&gt;                         a.dwelling_type_cd, a.carrier_route_txt, a.city_id,&lt;br/&gt;                         a.territory_id, a.country_id, a.postal_code_id,&lt;br/&gt;                         a.full_postal_code_txt,&lt;br/&gt;                         a.city_nm,&lt;br/&gt;                         a.territory_cd,&lt;br/&gt;                         a.country_cd, a.valid_address_ind,&lt;br/&gt;                         a.serviceability_cd, a.data_source_type_cd,&lt;br/&gt;                         a.record_stat, a.created_dttm, a.created_by&lt;br/&gt;                        )&lt;br/&gt;                 VALUES (p_cursor_data_io (i).source_street_address_id,&lt;br/&gt;                         p_cursor_data_io (i).address_line_1_txt,&lt;br/&gt;                         p_cursor_data_io (i).address_line_2_txt, NULL,&lt;br/&gt;                         NULL, NULL, NULL,&lt;br/&gt;                         NULL, NULL, NULL,&lt;br/&gt;                         p_cursor_data_io (i).postal_code_txt,&lt;br/&gt;                         p_cursor_data_io (i).city_nm,&lt;br/&gt;                         p_cursor_data_io (i).territory_cd,&lt;br/&gt;                         p_cursor_data_io (i).country_cd, &apos;0&apos;,&lt;br/&gt;                         NULL, p_cursor_data_io (i).data_source_type_cd,&lt;br/&gt;                         &apos;A&apos;, SYSTIMESTAMP, c_pkg_name&lt;br/&gt;                        );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN c_bulk_errors&lt;br/&gt;         THEN&lt;br/&gt;            l_errors := SQL%BULK_EXCEPTIONS.COUNT;&lt;br/&gt;&lt;br/&gt;            FOR i IN 1 .. l_errors&lt;br/&gt;            LOOP&lt;br/&gt;               NULL;&lt;br/&gt;               l_coll_idx := SQL%BULK_EXCEPTIONS (i).ERROR_INDEX;&lt;br/&gt;               p_cursor_data_io (l_coll_idx).record_load_cd := c_stg_error;&lt;br/&gt;               pkg_logging.log_exception&lt;br/&gt;                    (p_process_rec_i,&lt;br/&gt;                        l_proc_name&lt;br/&gt;                     || &apos;, bulk insert exception, key=&apos;&lt;br/&gt;                     || p_cursor_data_io (l_coll_idx).source_street_address_id&lt;br/&gt;                     || &apos;, exception=&apos;&lt;br/&gt;                     || SQL%BULK_EXCEPTIONS (i).ERROR_CODE&lt;br/&gt;                    );&lt;br/&gt;            END LOOP;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, end&apos;);&lt;br/&gt;   END insert_street_address;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_locator (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_LOCATOR&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for loading Billing Address details specifically into the target table &apos;t_locator&apos;&lt;br/&gt;      ||                       via Bilk Load Mechanism.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;INSERT_LOCATOR&apos;;&lt;br/&gt;      l_errors      NUMBER;&lt;br/&gt;      l_coll_idx    PLS_INTEGER;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, cnt=&apos;&lt;br/&gt;                             || p_cursor_data_io.COUNT ()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         FORALL i IN 1 .. p_cursor_data_io.COUNT SAVE EXCEPTIONS&lt;br/&gt;            INSERT INTO t_locator a&lt;br/&gt;                        (a.locator_id,&lt;br/&gt;                         a.locator_subtype_cd, a.record_stat,&lt;br/&gt;                         a.created_dttm, a.created_by&lt;br/&gt;                        )&lt;br/&gt;                 VALUES (p_cursor_data_io (i).source_street_address_id,&lt;br/&gt;                         &apos;SSTRT&apos;, &apos;A&apos;,&lt;br/&gt;                         SYSTIMESTAMP, c_pkg_name&lt;br/&gt;                        );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN c_bulk_errors&lt;br/&gt;         THEN&lt;br/&gt;            l_errors := SQL%BULK_EXCEPTIONS.COUNT;&lt;br/&gt;&lt;br/&gt;            FOR i IN 1 .. l_errors&lt;br/&gt;            LOOP&lt;br/&gt;               NULL;&lt;br/&gt;               l_coll_idx := SQL%BULK_EXCEPTIONS (i).ERROR_INDEX;&lt;br/&gt;               p_cursor_data_io (l_coll_idx).record_load_cd := c_stg_error;&lt;br/&gt;               pkg_logging.log_exception&lt;br/&gt;                    (p_process_rec_i,&lt;br/&gt;                        l_proc_name&lt;br/&gt;                     || &apos;, bulk insert exception, key=&apos;&lt;br/&gt;                     || p_cursor_data_io (l_coll_idx).source_street_address_id&lt;br/&gt;                     || &apos;, exception=&apos;&lt;br/&gt;                     || SQL%BULK_EXCEPTIONS (i).ERROR_CODE&lt;br/&gt;                    );&lt;br/&gt;            END LOOP;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, end&apos;);&lt;br/&gt;   END insert_locator;&lt;br/&gt;&lt;br/&gt;   PROCEDURE insert_address (&lt;br/&gt;      p_process_rec_i    IN              pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_io   IN OUT NOCOPY   t_cursor_data_blg_tbl&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : INSERT_ADDRESS&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for loading Billing Address details specifically into the target table &apos;t_address&apos; via&lt;br/&gt;      ||                       Bulk Load Mechanism.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;INSERT_ADDRESS&apos;;&lt;br/&gt;      l_errors      NUMBER;&lt;br/&gt;      l_coll_idx    PLS_INTEGER;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                l_proc_name&lt;br/&gt;                             || &apos;, cnt=&apos;&lt;br/&gt;                             || p_cursor_data_io.COUNT ()&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         FORALL i IN 1 .. p_cursor_data_io.COUNT SAVE EXCEPTIONS&lt;br/&gt;            INSERT INTO t_address a&lt;br/&gt;                        (a.address_id,&lt;br/&gt;                         a.data_source_type_cd, a.address_subtype_cd,&lt;br/&gt;                         a.source_system_address_id, a.record_stat,&lt;br/&gt;                         a.created_dttm, a.created_by&lt;br/&gt;                        )&lt;br/&gt;                 VALUES (p_cursor_data_io (i).source_street_address_id,&lt;br/&gt;                         p_cursor_data_io (i).data_source_type_cd, &apos;STRT&apos;,&lt;br/&gt;                         NULL, &apos;A&apos;,&lt;br/&gt;                         SYSTIMESTAMP, c_pkg_name&lt;br/&gt;                        );&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN c_bulk_errors&lt;br/&gt;         THEN&lt;br/&gt;            l_errors := SQL%BULK_EXCEPTIONS.COUNT;&lt;br/&gt;&lt;br/&gt;            FOR i IN 1 .. l_errors&lt;br/&gt;            LOOP&lt;br/&gt;               NULL;&lt;br/&gt;               l_coll_idx := SQL%BULK_EXCEPTIONS (i).ERROR_INDEX;&lt;br/&gt;               p_cursor_data_io (l_coll_idx).record_load_cd := c_stg_error;&lt;br/&gt;               pkg_logging.log_exception&lt;br/&gt;                    (p_process_rec_i,&lt;br/&gt;                        l_proc_name&lt;br/&gt;                     || &apos;, bulk insert exception, key=&apos;&lt;br/&gt;                     || p_cursor_data_io (l_coll_idx).source_street_address_id&lt;br/&gt;                     || &apos;, exception=&apos;&lt;br/&gt;                     || SQL%BULK_EXCEPTIONS (i).ERROR_CODE&lt;br/&gt;                    );&lt;br/&gt;            END LOOP;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i, l_proc_name || &apos;, end&apos;);&lt;br/&gt;   END insert_address;&lt;br/&gt;&lt;br/&gt;   PROCEDURE update_staging_blg (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_cursor_data_i   IN   t_cursor_data_blg_tbl&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      /****************************************************************************************************************&lt;br/&gt;      ||  SubProgram Name    : UPDATE_STAGING_SA&lt;br/&gt;      ||  Estimated Run Time :&lt;br/&gt;      ||  Description        : This is for updating the staging table &apos;VNT_SCN_CONTACT&apos; for the column Record_Cd_Load with&lt;br/&gt;      ||                       value of &apos;P&apos; which indicates the Processed state.&lt;br/&gt;      ******************************************************************************************************************/&lt;br/&gt;      l_proc_name   t_unit_name := &apos;UPDATE_STAGING_SA&apos;;&lt;br/&gt;   BEGIN&lt;br/&gt;      pkg_logging.log_debug (p_process_rec_i, l_proc_name);&lt;br/&gt;      FORALL i IN 1 .. p_cursor_data_i.COUNT&lt;br/&gt;         UPDATE stg.vnt_scn_contact_rec_prev s&lt;br/&gt;            SET s.record_load_cd =&lt;br/&gt;                     NVL (p_cursor_data_i (i).record_load_cd, c_stg_processed),&lt;br/&gt;                s.record_dttm = SYSTIMESTAMP&lt;br/&gt;          WHERE ROWID = p_cursor_data_i (i).ID;&lt;br/&gt;   END update_staging_blg;&lt;br/&gt;END pkg_vnt_load_scn_contact_blg;</source>
</body>
</PackageOracle>
<?xml version = '1.0' encoding = 'UTF-8'?>
<PackageOracle class="oracle.dbtools.crest.model.design.storage.oracle.PackageOracle" name="PKG_VNT_RECON_NQL_HIST" directorySegmentName="seg_6" id="83DC26A0-9943-6A64-23D5-AF508B4CC95E">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_RECON_NQL_HIST</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:19:20 UTC</createdTime>
<ownerDesignName>SOLO_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE      CHTR.PKG_VNT_RECON_NQL_HIST&lt;br/&gt;/****************************************************************************************************************&lt;br/&gt;||  Program Name    : pkg_vnt_recon_nql_hist&lt;br/&gt;||  Created By      : knoll&lt;br/&gt;||  Created Date    : FEB-2015&lt;br/&gt;||  Subject Area    : Equipment&lt;br/&gt;||  Description     : Update SOLO equipment with any nql_hist changes that were missed in NRT processing.&lt;br/&gt;||  Change log:&lt;br/&gt;||&lt;br/&gt;||    Changed By      Changed On      Change Description&lt;br/&gt;||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;||  Karthik M          04/16/2015      Modified the Proc to add an entry into the T_PROCESS_LOG_DETAIL table&lt;br/&gt;||                                      and AUDIT_RECON_PROCESS&lt;br/&gt;******************************************************************************************************************/&lt;br/&gt;IS&lt;br/&gt;   PROCEDURE process (&lt;br/&gt;      p_audit_user_i      IN   VARCHAR2,&lt;br/&gt;      p_max_thread             NUMBER DEFAULT 1,&lt;br/&gt;      p_reminder_thread        NUMBER DEFAULT 1,&lt;br/&gt;      p_batchsize              NUMBER DEFAULT 1000&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE finalize (p_audit_user_i IN VARCHAR2);&lt;br/&gt;END pkg_vnt_recon_nql_hist;</source>
<body class="oracle.dbtools.crest.model.design.storage.oracle.PackageBodyOracle" name="PKG_VNT_RECON_NQL_HIST" id="83DC26A0-9943-6A64-23D5-AF508B4CC95E">
<sourceConnName>SOLO_Prod</sourceConnName>
<sourceObjSchema>CHTR</sourceObjSchema>
<sourceObjName>PKG_VNT_RECON_NQL_HIST</sourceObjName>
<createdBy>jandrews1</createdBy>
<createdTime>2015-08-11 13:19:24 UTC</createdTime>
<ownerDesignName>SOLO_RE</ownerDesignName>
<owner>5AF9E3FC-7A76-C437-3E83-BF29D7EA2FC7</owner>
<source>CREATE OR REPLACE PACKAGE BODY      CHTR.PKG_VNT_RECON_NQL_HIST&lt;br/&gt;/****************************************************************************************************************&lt;br/&gt;||  Program Name   : pkg_vnt_recon_nql_hist&lt;br/&gt;||  Created By        : knoll&lt;br/&gt;||  Created Date    : FEB-2015&lt;br/&gt;||  Subject Area    : Equipment&lt;br/&gt;||  Description     : Update SOLO equipment with any nql_hist changes that were missed in NRT processing.&lt;br/&gt;||  Change log:&lt;br/&gt;||&lt;br/&gt;||    Changed By      Changed On      Change Description&lt;br/&gt;||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;||  Karthik M         22-APR-2015     Modified to make an entry into T_PROCESS_LOG_DETAIL and  STG.AUDIT_RECON_PROCESS table&lt;br/&gt;||  Karthik M         18-MAY-2015     STG.AUDIT_RECON_PROCESS entry format change&lt;br/&gt;||  Senthil           12-May-2015     More details added in Process log&lt;br/&gt;||  Venkat            20-May-2015     Walled Garden Change. Dunning Group Cd column added&lt;br/&gt;||  Senthil           10-Jun-2015     R4 Defect Fix&lt;br/&gt;||                                    - connect_equipment - Added logic to send old account to Equip change notification queue&lt;br/&gt;||                                    - Use  is_valid_account generic function to validate account&lt;br/&gt;||                                    - Exception handling added for exp_recon_not_started and exp_multiple_logs_for_recon&lt;br/&gt;||  Binoy             30-Jun-2015     Added columns sys_nql, prin_nql in the delta table&lt;br/&gt;||                                    for pulling BILLING_STATION_ID into the table T_EQUIP_PROD_INST&lt;br/&gt;||  Binoy             15-Jul-2015     Numeric Error Fixed for the column BILLING_STATION_ID.&lt;br/&gt;******************************************************************************************************************/&lt;br/&gt;IS&lt;br/&gt;   SUBTYPE t_unit_name IS VARCHAR2 (30);&lt;br/&gt;&lt;br/&gt;   SUBTYPE t_userid IS VARCHAR2 (100 BYTE);&lt;br/&gt;&lt;br/&gt;   l_process_cnt          NUMBER                                      := 0;&lt;br/&gt;   l_error_cnt            NUMBER                                      := 0;&lt;br/&gt;   g_batchsize            NUMBER                                      := 1000;&lt;br/&gt;   g_max_thread           NUMBER                                      := 1;&lt;br/&gt;   g_reminder_thread      NUMBER                                      := 1;&lt;br/&gt;   -- CONSTANTS&lt;br/&gt;   c_pkg_name    CONSTANT t_unit_name             := &apos;PKG_VNT_RECON_NQL_HIST&apos;;&lt;br/&gt;   c_unknown_product_id   t_equip_product.equipment_product_id%TYPE;&lt;br/&gt;   g_recon_cutoff_time    TIMESTAMP;&lt;br/&gt;   l_audit_recon          stg.audit_recon_process%ROWTYPE;&lt;br/&gt;   l_table_key            stg.audit_recon_process.table_key%TYPE;&lt;br/&gt;   l_log_status           VARCHAR2 (1);&lt;br/&gt;   l_ins_up_ind           VARCHAR2 (1);&lt;br/&gt;&lt;br/&gt;   -- CURSORS&lt;br/&gt;   CURSOR cur_nql_hist_delta&lt;br/&gt;   IS&lt;br/&gt;      SELECT delta.data_source_type_cd,&lt;br/&gt;             TRIM (delta.eqp_serial_nql) new_serial,&lt;br/&gt;             TRIM (delta.eqp_local_nql) new_local,&lt;br/&gt;             TRIM (delta.eqp_stat_nql) new_stat,&lt;br/&gt;             TRIM (delta.eqp_typ_nql) new_typ,&lt;br/&gt;             xref.account_id new_account_id,&lt;br/&gt;             epi.equipment_esn_val old_serial, epi.equip_prod_inst_id,&lt;br/&gt;             a.account_num old_local, epi.equip_prod_inst_status_cd old_stat,&lt;br/&gt;             epi.equip_prod_inst_type_cd old_typ,&lt;br/&gt;             a.account_id old_account_id,&lt;br/&gt;             bs.billing_station_id,&lt;br/&gt;             epi.billing_station_id as billing_station_id_old&lt;br/&gt;        FROM stg.vnt_nql_hist_rec_delta delta&lt;br/&gt;            LEFT OUTER JOIN t_equip_prod_inst epi ON epi.equipment_esn_val = delta.eqp_serial_nql&lt;br/&gt;            LEFT OUTER JOIN t_equip_instance_account eia ON eia.equip_prod_inst_id = epi.equip_prod_inst_id AND eia.record_stat = &apos;A&apos;&lt;br/&gt;            LEFT OUTER JOIN t_account a ON a.account_id = eia.account_id&lt;br/&gt;            LEFT OUTER JOIN t_account_vantage_xref xref ON xref.sub_acct_num = delta.eqp_local_nql&lt;br/&gt;            LEFT OUTER JOIN t_billing_station bs on bs.billing_station_level_1_cd = delta.sys_nql and bs.billing_station_level_2_cd = delta.prin_nql&lt;br/&gt;             ;&lt;br/&gt;&lt;br/&gt;   TYPE t_cursor_data_tbl IS TABLE OF cur_nql_hist_delta%ROWTYPE&lt;br/&gt;      INDEX BY PLS_INTEGER;&lt;br/&gt;&lt;br/&gt;   PROCEDURE connect_equipment (&lt;br/&gt;      p_process_rec_i       IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i        IN   t_userid,&lt;br/&gt;      p_connect_account_i   IN   t_account.account_id%TYPE,&lt;br/&gt;      p_cursor_row_i        IN   cur_nql_hist_delta%ROWTYPE&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   PROCEDURE disconnect_equipment (&lt;br/&gt;      p_process_rec_i          IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i           IN   t_userid,&lt;br/&gt;      p_disconnect_account_i   IN   t_account.account_id%TYPE,&lt;br/&gt;      p_cursor_row_i           IN   cur_nql_hist_delta%ROWTYPE&lt;br/&gt;   );&lt;br/&gt;&lt;br/&gt;   FUNCTION create_account (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i    IN   t_userid,&lt;br/&gt;      p_cursor_row_i    IN   cur_nql_hist_delta%ROWTYPE&lt;br/&gt;   )&lt;br/&gt;      RETURN NUMBER;&lt;br/&gt;&lt;br/&gt;   PROCEDURE process (&lt;br/&gt;      p_audit_user_i      IN   VARCHAR2,&lt;br/&gt;      p_max_thread             NUMBER DEFAULT 1,&lt;br/&gt;      p_reminder_thread        NUMBER DEFAULT 1,&lt;br/&gt;      p_batchsize              NUMBER DEFAULT 1000&lt;br/&gt;   )&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  SubProgram Name    : Procedure process&lt;br/&gt;   ||  Estimated Run Time :&lt;br/&gt;   ||  Description        : Process the nql_hist delta.&lt;br/&gt;   ||  Change log:&lt;br/&gt;   ||&lt;br/&gt;   ||    Changed By      Changed On      Change Description&lt;br/&gt;   ||  -------------------------------------------------------------------------------------------------------------&lt;br/&gt;   ||  Karthik M            22-APR-2015     Made changes to make an entry into the STG.AUDIT_RECON_PROCESS table.&lt;br/&gt;   ******************************************************************************************************************/&lt;br/&gt;   IS&lt;br/&gt;      l_proc_name                   t_unit_name                  := &apos;PROCESS&apos;;&lt;br/&gt;      l_process_rec                 pkg_logging.t_process_rec;&lt;br/&gt;      l_cursor_data                 t_cursor_data_tbl;&lt;br/&gt;      l_equip_prod_inst_id          t_equip_prod_inst.equip_prod_inst_id%TYPE;&lt;br/&gt;      l_settop_box                  t_settop_box_instance%ROWTYPE;&lt;br/&gt;      l_inserts                     NUMBER;&lt;br/&gt;      l_settop_before               BOOLEAN;&lt;br/&gt;      l_settop_after                BOOLEAN;&lt;br/&gt;      l_account_id                  t_account.account_id%TYPE;&lt;br/&gt;      l_delta_key                   VARCHAR2 (64);&lt;br/&gt;      l_process_cnt                 NUMBER                               := 0;&lt;br/&gt;      l_insert_cnt                  NUMBER                               := 0;&lt;br/&gt;      l_update_cnt                  NUMBER                               := 0;&lt;br/&gt;      l_updated                     BOOLEAN;&lt;br/&gt;      exp_recon_not_started         EXCEPTION;&lt;br/&gt;      exp_multiple_logs_for_recon   EXCEPTION;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_process_rec.process_name := c_pkg_name || &apos;.&apos; || l_proc_name;&lt;br/&gt;      g_batchsize := p_batchsize;&lt;br/&gt;      g_max_thread := p_max_thread;&lt;br/&gt;      g_reminder_thread := p_reminder_thread;&lt;br/&gt;      pkg_logging.begin_process (l_process_rec,&lt;br/&gt;                                    &apos;p_audit_user_i=&apos;&lt;br/&gt;                                 || p_audit_user_i&lt;br/&gt;                                 || &apos;, g_batchsize=&apos;&lt;br/&gt;                                 || g_batchsize&lt;br/&gt;                                 || &apos;, g_max_thread=&apos;&lt;br/&gt;                                 || g_max_thread&lt;br/&gt;                                 || &apos;, g_reminder_thread=&apos;&lt;br/&gt;                                 || g_reminder_thread&lt;br/&gt;                                );&lt;br/&gt;      -- only update rows that have created/updated times less than the cutoff&lt;br/&gt;      g_recon_cutoff_time := pkg_equip_utility.recon_cutoff_time ();&lt;br/&gt;&lt;br/&gt;      SELECT equipment_product_id&lt;br/&gt;        INTO c_unknown_product_id&lt;br/&gt;        FROM t_equip_product&lt;br/&gt;       WHERE equipment_model_num = &apos;UNKNOWN&apos; AND ROWNUM = 1;&lt;br/&gt;&lt;br/&gt;      -- process the delta rows&lt;br/&gt;      OPEN cur_nql_hist_delta;&lt;br/&gt;&lt;br/&gt;      LOOP&lt;br/&gt;         FETCH cur_nql_hist_delta&lt;br/&gt;         BULK COLLECT INTO l_cursor_data LIMIT g_batchsize;&lt;br/&gt;&lt;br/&gt;         IF (l_cursor_data.COUNT () &gt; 0)&lt;br/&gt;         THEN&lt;br/&gt;            FOR i IN 1 .. l_cursor_data.COUNT&lt;br/&gt;            LOOP&lt;br/&gt;               BEGIN&lt;br/&gt;                  l_process_cnt := l_process_cnt + 1;&lt;br/&gt;                  l_delta_key :=&lt;br/&gt;                        l_cursor_data (i).new_local&lt;br/&gt;                     || &apos;:&apos;&lt;br/&gt;                     || l_cursor_data (i).new_serial;&lt;br/&gt;                  pkg_logging.log_debug&lt;br/&gt;                                      (l_process_rec,&lt;br/&gt;                                          l_proc_name&lt;br/&gt;                                       || &apos;, &apos;&lt;br/&gt;                                       || &apos;data_source_type_cd=&apos;&lt;br/&gt;                                       || l_cursor_data (i).data_source_type_cd&lt;br/&gt;                                       || &apos;, new_serial=&apos;&lt;br/&gt;                                       || l_cursor_data (i).new_serial&lt;br/&gt;                                       || &apos;, new_local=&apos;&lt;br/&gt;                                       || l_cursor_data (i).new_local&lt;br/&gt;                                       || &apos;, new_stat=&apos;&lt;br/&gt;                                       || l_cursor_data (i).new_stat&lt;br/&gt;                                       || &apos;, new_typ=&apos;&lt;br/&gt;                                       || l_cursor_data (i).new_typ&lt;br/&gt;                                       || &apos;, new_account_id=&apos;&lt;br/&gt;                                       || l_cursor_data (i).new_account_id&lt;br/&gt;                                       || &apos;, old_serial=&apos;&lt;br/&gt;                                       || l_cursor_data (i).old_serial&lt;br/&gt;                                       || &apos;, equip_prod_inst_id=&apos;&lt;br/&gt;                                       || l_cursor_data (i).equip_prod_inst_id&lt;br/&gt;                                       || &apos;, old_local=&apos;&lt;br/&gt;                                       || l_cursor_data (i).old_local&lt;br/&gt;                                       || &apos;, old_stat=&apos;&lt;br/&gt;                                       || l_cursor_data (i).old_stat&lt;br/&gt;                                       || &apos;, old_typ=&apos;&lt;br/&gt;                                       || l_cursor_data (i).old_typ&lt;br/&gt;                                       || &apos;, old_account_id=&apos;&lt;br/&gt;                                       || l_cursor_data (i).old_account_id&lt;br/&gt;                                      );&lt;br/&gt;&lt;br/&gt;                  -- check for new account to create&lt;br/&gt;                  IF (l_cursor_data (i).new_account_id IS NULL)&lt;br/&gt;                  THEN&lt;br/&gt;                     -- valid account number&lt;br/&gt;                     IF pkg_vnt_process.is_valid_account&lt;br/&gt;                                                  (p_audit_user_i,&lt;br/&gt;                                                   l_cursor_data (i).new_local&lt;br/&gt;                                                  )&lt;br/&gt;                     THEN&lt;br/&gt;                        l_account_id :=&lt;br/&gt;                           create_account (l_process_rec,&lt;br/&gt;                                           p_audit_user_i,&lt;br/&gt;                                           l_cursor_data (i)&lt;br/&gt;                                          );&lt;br/&gt;                        l_cursor_data (i).new_account_id := l_account_id;&lt;br/&gt;                     END IF;&lt;br/&gt;                  END IF;&lt;br/&gt;&lt;br/&gt;                  IF (l_cursor_data (i).old_serial IS NULL)&lt;br/&gt;                  THEN&lt;br/&gt;                     -- create new equipment&lt;br/&gt;                     pkg_logging.log_debug (l_process_rec,&lt;br/&gt;                                               l_proc_name&lt;br/&gt;                                            || &apos;, &apos;&lt;br/&gt;                                            || l_cursor_data (i).new_serial&lt;br/&gt;                                            || &apos;, inserting new equipment&apos;&lt;br/&gt;                                           );&lt;br/&gt;                     l_equip_prod_inst_id :=&lt;br/&gt;                        da_product_instance.ADD&lt;br/&gt;                           (process_rec                   =&gt; l_process_rec,&lt;br/&gt;                            product_id                    =&gt; c_unknown_product_id,&lt;br/&gt;                            product_instance_type_cd      =&gt; &apos;EQPMT&apos;,&lt;br/&gt;                            data_load_type_cd             =&gt; &apos;NQL&apos;,&lt;br/&gt;                            data_source_type_cd           =&gt; l_cursor_data (i).data_source_type_cd,&lt;br/&gt;                            audit_user                    =&gt; p_audit_user_i&lt;br/&gt;                           );&lt;br/&gt;&lt;br/&gt;                     l_audit_recon.table_name := &apos;T_PRODUCT_INSTANCE&apos;;&lt;br/&gt;                     l_table_key :=&lt;br/&gt;                        &apos;PRODUCT_INSTANCE_ID&apos; || &apos; = &apos; || l_equip_prod_inst_id;&lt;br/&gt;                     l_audit_recon.operation_perf :=&lt;br/&gt;                                            pkg_utility.c_recon_insert_perform;&lt;br/&gt;                     pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                             p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                             p_table_key            =&gt; l_table_key,&lt;br/&gt;                             p_modif_values         =&gt; NULL,&lt;br/&gt;                             p_account_details      =&gt; NULL,&lt;br/&gt;                             p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                             p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;                     da_equip_prod_inst.ADD&lt;br/&gt;                        (process_rec                    =&gt; l_process_rec,&lt;br/&gt;                         equip_prod_inst_type_cd        =&gt; l_cursor_data (i).new_typ,&lt;br/&gt;                         equip_prod_inst_id             =&gt; l_equip_prod_inst_id,&lt;br/&gt;                         equipment_product_id           =&gt; c_unknown_product_id,&lt;br/&gt;                         equipment_esn_val              =&gt; l_cursor_data (i).new_serial,&lt;br/&gt;                         equipment_barcode_val          =&gt; NULL,&lt;br/&gt;                         equipment_cost_amt             =&gt; NULL,&lt;br/&gt;                         equipment_nickname_val         =&gt; NULL,&lt;br/&gt;                         equip_prod_inst_status_cd      =&gt; l_cursor_data (i).new_stat,&lt;br/&gt;                         billing_station_id             =&gt; l_cursor_data (i).billing_station_id,&lt;br/&gt;                         data_source_type_cd            =&gt; l_cursor_data (i).data_source_type_cd,&lt;br/&gt;                         equip_mac_address_id           =&gt; NULL,&lt;br/&gt;                         equip_sec_mac_address_id       =&gt; NULL,&lt;br/&gt;                         audit_user                     =&gt; p_audit_user_i&lt;br/&gt;                        );&lt;br/&gt;                     l_insert_cnt := l_insert_cnt + 1;&lt;br/&gt;                     l_audit_recon.table_name := &apos;T_EQUIP_PROD_INST&apos;;&lt;br/&gt;                     l_table_key :=&lt;br/&gt;                         &apos;EQUIP_PROD_INST_ID&apos; || &apos; = &apos; || l_equip_prod_inst_id;&lt;br/&gt;                     l_audit_recon.operation_perf :=&lt;br/&gt;                                            pkg_utility.c_recon_insert_perform;&lt;br/&gt;                     pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                             p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                             p_table_key            =&gt; l_table_key,&lt;br/&gt;                             p_modif_values         =&gt; NULL,&lt;br/&gt;                             p_account_details      =&gt; NULL,&lt;br/&gt;                             p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                             p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;                     IF (pkg_equip_utility.is_csg_settop_box&lt;br/&gt;                                                     (l_cursor_data (i).new_typ&lt;br/&gt;                                                     )&lt;br/&gt;                        )&lt;br/&gt;                     THEN&lt;br/&gt;                        pkg_logging.log_debug (l_process_rec,&lt;br/&gt;                                                  l_proc_name&lt;br/&gt;                                               || &apos;, &apos;&lt;br/&gt;                                               || l_cursor_data (i).new_serial&lt;br/&gt;                                               || &apos;, inserting new settop box&apos;&lt;br/&gt;                                              );&lt;br/&gt;                        da_settop_box_instance.ADD&lt;br/&gt;                              (process_rec                 =&gt; l_process_rec,&lt;br/&gt;                               estb_mac_address            =&gt; NULL,&lt;br/&gt;                               ecm_mac_address             =&gt; NULL,&lt;br/&gt;                               ethernet_mac_address        =&gt; NULL,&lt;br/&gt;                               cmci_mac_address            =&gt; NULL,&lt;br/&gt;                               rf4ce_mac_address           =&gt; NULL,&lt;br/&gt;                               settop_box_instance_id      =&gt; l_equip_prod_inst_id,&lt;br/&gt;                               serial_num                  =&gt; l_cursor_data&lt;br/&gt;                                                                           (i).new_serial,&lt;br/&gt;                               model_nm                    =&gt; NULL,&lt;br/&gt;                               soc_part_num                =&gt; NULL,&lt;br/&gt;                               manufacturer                =&gt; &apos;UNKNOWN&apos;,&lt;br/&gt;                               manufacturer_site           =&gt; NULL,&lt;br/&gt;                               manufacturer_date           =&gt; NULL,&lt;br/&gt;                               cas_id                      =&gt; NULL,&lt;br/&gt;                               audit_user                  =&gt; p_audit_user_i&lt;br/&gt;                              );&lt;br/&gt;&lt;br/&gt;                        l_audit_recon.table_name := &apos;T_SETTOP_BOX_INSTANCE&apos;;&lt;br/&gt;                        l_table_key :=&lt;br/&gt;                              &apos;SETTOP_BOX_INSTANCE_ID&apos;&lt;br/&gt;                           || &apos; = &apos;&lt;br/&gt;                           || l_equip_prod_inst_id;&lt;br/&gt;                        l_audit_recon.operation_perf :=&lt;br/&gt;                                            pkg_utility.c_recon_insert_perform;&lt;br/&gt;                        pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                             p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                             p_table_key            =&gt; l_table_key,&lt;br/&gt;                             p_modif_values         =&gt; NULL,&lt;br/&gt;                             p_account_details      =&gt; NULL,&lt;br/&gt;                             p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                             p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;&lt;br/&gt;                     END IF;&lt;br/&gt;&lt;br/&gt;                     -- connect the equipment to an account&lt;br/&gt;                     IF (l_cursor_data (i).new_account_id IS NOT NULL)&lt;br/&gt;                     THEN&lt;br/&gt;                        pkg_logging.log_debug&lt;br/&gt;                                        (l_process_rec,&lt;br/&gt;                                            l_cursor_data (i).new_serial&lt;br/&gt;                                         || &apos;, connect equipment to account &apos;&lt;br/&gt;                                         || l_cursor_data (i).new_account_id&lt;br/&gt;                                        );&lt;br/&gt;                        l_cursor_data (i).equip_prod_inst_id :=&lt;br/&gt;                                                          l_equip_prod_inst_id;&lt;br/&gt;                        connect_equipment (l_process_rec,&lt;br/&gt;                                           p_audit_user_i,&lt;br/&gt;                                           l_cursor_data (i).new_account_id,&lt;br/&gt;                                           l_cursor_data (i)&lt;br/&gt;                                          );&lt;br/&gt;                     END IF;&lt;br/&gt;                  ELSE&lt;br/&gt;                     l_updated := FALSE;&lt;br/&gt;&lt;br/&gt;                     -- update the equipment location and log it to the work queue as needed&lt;br/&gt;                     IF (NVL (l_cursor_data (i).new_local, &apos;?&apos;) &lt;&gt;&lt;br/&gt;                                        NVL (l_cursor_data (i).old_local, &apos;?&apos;)&lt;br/&gt;                        )&lt;br/&gt;                     THEN&lt;br/&gt;                        IF (l_cursor_data (i).old_account_id IS NULL)&lt;br/&gt;                        THEN&lt;br/&gt;                           IF (l_cursor_data (i).new_account_id IS NOT NULL&lt;br/&gt;                              )&lt;br/&gt;                           THEN&lt;br/&gt;                              -- connect to new account&lt;br/&gt;                              connect_equipment&lt;br/&gt;                                            (l_process_rec,&lt;br/&gt;                                             p_audit_user_i,&lt;br/&gt;                                             l_cursor_data (i).new_account_id,&lt;br/&gt;                                             l_cursor_data (i)&lt;br/&gt;                                            );&lt;br/&gt;                              l_updated := TRUE;&lt;br/&gt;                           END IF;&lt;br/&gt;                        ELSE&lt;br/&gt;                           IF (l_cursor_data (i).new_account_id IS NULL)&lt;br/&gt;                           THEN&lt;br/&gt;                              -- disconnect from old account&lt;br/&gt;                              disconnect_equipment&lt;br/&gt;                                            (l_process_rec,&lt;br/&gt;                                             p_audit_user_i,&lt;br/&gt;                                             l_cursor_data (i).old_account_id,&lt;br/&gt;                                             l_cursor_data (i)&lt;br/&gt;                                            );&lt;br/&gt;                           ELSE&lt;br/&gt;                              -- disconnect from old account, connect to new account&lt;br/&gt;                              disconnect_equipment&lt;br/&gt;                                            (l_process_rec,&lt;br/&gt;                                             p_audit_user_i,&lt;br/&gt;                                             l_cursor_data (i).old_account_id,&lt;br/&gt;                                             l_cursor_data (i)&lt;br/&gt;                                            );&lt;br/&gt;                              connect_equipment&lt;br/&gt;                                             (l_process_rec,&lt;br/&gt;                                              p_audit_user_i,&lt;br/&gt;                                              l_cursor_data (i).new_account_id,&lt;br/&gt;                                              l_cursor_data (i)&lt;br/&gt;                                             );&lt;br/&gt;                           END IF;&lt;br/&gt;&lt;br/&gt;                           l_updated := TRUE;&lt;br/&gt;                        END IF;&lt;br/&gt;                     END IF;&lt;br/&gt;&lt;br/&gt;                     IF (   NVL (l_cursor_data (i).new_stat, &apos;?&apos;) &lt;&gt;&lt;br/&gt;                                         NVL (l_cursor_data (i).old_stat, &apos;?&apos;)&lt;br/&gt;                         OR NVL (l_cursor_data (i).new_typ, &apos;?&apos;) &lt;&gt;&lt;br/&gt;                                          NVL (l_cursor_data (i).old_typ, &apos;?&apos;)&lt;br/&gt;                         OR NVL (l_cursor_data (i).billing_station_id, 0) &lt;&gt;&lt;br/&gt;                                          NVL (l_cursor_data (i).billing_station_id_old, 0 )&lt;br/&gt;                        )&lt;br/&gt;                     THEN&lt;br/&gt;                        pkg_logging.log_debug&lt;br/&gt;                                       (l_process_rec,&lt;br/&gt;                                           l_proc_name&lt;br/&gt;                                        || &apos;, &apos;&lt;br/&gt;                                        || l_cursor_data (i).old_serial&lt;br/&gt;                                        || &apos;, updating equipment status or Type&apos;&lt;br/&gt;                                       );&lt;br/&gt;&lt;br/&gt;                        UPDATE t_equip_prod_inst&lt;br/&gt;                           SET equip_prod_inst_status_cd =&lt;br/&gt;                                                    l_cursor_data (i).new_stat,&lt;br/&gt;                               equip_prod_inst_type_cd =&lt;br/&gt;                                                     l_cursor_data (i).new_typ,&lt;br/&gt;                               billing_station_id =&lt;br/&gt;                                                     l_cursor_data (i).billing_station_id,&lt;br/&gt;                               modified_by = p_audit_user_i,&lt;br/&gt;                               modified_dttm = SYSTIMESTAMP&lt;br/&gt;                         WHERE equip_prod_inst_id =&lt;br/&gt;                                          l_cursor_data (i).equip_prod_inst_id&lt;br/&gt;                           AND created_dttm &lt; g_recon_cutoff_time&lt;br/&gt;                           AND NVL (modified_dttm, g_recon_cutoff_time) &lt;=&lt;br/&gt;                                                           g_recon_cutoff_time;&lt;br/&gt;&lt;br/&gt;                        l_updated := TRUE;&lt;br/&gt;                        l_audit_recon.table_name := &apos;T_EQUIP_PROD_INST&apos;;&lt;br/&gt;                        l_table_key :=&lt;br/&gt;                              &apos;EQUIP_PROD_INST_ID&apos;&lt;br/&gt;                           || &apos; = &apos;&lt;br/&gt;                           || l_cursor_data (i).equip_prod_inst_id;&lt;br/&gt;                        l_audit_recon.modif_values :=&lt;br/&gt;                              &apos;EQUIP_PROD_INST_STATUS_CD : (&apos;&lt;br/&gt;                           || l_cursor_data (i).old_stat&lt;br/&gt;                           || &apos; =&gt; &apos;&lt;br/&gt;                           || l_cursor_data (i).new_stat&lt;br/&gt;                           || &apos; ), &apos;&lt;br/&gt;                           || &apos;EQUIP_PROD_INST_TYPE_CD :(&apos;&lt;br/&gt;                           || l_cursor_data (i).old_typ&lt;br/&gt;                           || &apos; =&gt; &apos;&lt;br/&gt;                           || l_cursor_data (i).new_typ&lt;br/&gt;                           || &apos;)&apos;;&lt;br/&gt;                        l_audit_recon.operation_perf :=&lt;br/&gt;                                            pkg_utility.c_recon_update_perform;&lt;br/&gt;                        pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                             p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                             p_table_key            =&gt; l_table_key,&lt;br/&gt;                             p_modif_values         =&gt; l_audit_recon.modif_values,&lt;br/&gt;                             p_account_details      =&gt; NULL,&lt;br/&gt;                             p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                             p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;                     END IF;&lt;br/&gt;&lt;br/&gt;                     -- did the type change from settop to non-settop or reverse?&lt;br/&gt;                     l_settop_before :=&lt;br/&gt;                        pkg_equip_utility.is_csg_settop_box&lt;br/&gt;                                                     (l_cursor_data (i).old_typ&lt;br/&gt;                                                     );&lt;br/&gt;                     l_settop_after :=&lt;br/&gt;                        pkg_equip_utility.is_csg_settop_box&lt;br/&gt;                                                     (l_cursor_data (i).new_typ&lt;br/&gt;                                                     );&lt;br/&gt;                     l_ins_up_ind := NULL;&lt;br/&gt;&lt;br/&gt;                     IF (l_settop_before &lt;&gt; l_settop_after)&lt;br/&gt;                     THEN&lt;br/&gt;                        -- fetch the settop box instance&lt;br/&gt;                        BEGIN&lt;br/&gt;                           SELECT *&lt;br/&gt;                             INTO l_settop_box&lt;br/&gt;                             FROM t_settop_box_instance sbi&lt;br/&gt;                            WHERE sbi.settop_box_instance_id =&lt;br/&gt;                                          l_cursor_data (i).equip_prod_inst_id;&lt;br/&gt;                        EXCEPTION&lt;br/&gt;                           WHEN NO_DATA_FOUND&lt;br/&gt;                           THEN&lt;br/&gt;                              l_settop_box.settop_box_instance_id := NULL;&lt;br/&gt;                        END;&lt;br/&gt;&lt;br/&gt;                        IF (l_settop_before)&lt;br/&gt;                        THEN&lt;br/&gt;                           --delete settop box instance&lt;br/&gt;                           IF (    l_settop_box.settop_box_instance_id IS NOT NULL&lt;br/&gt;                               AND l_settop_box.record_stat = &apos;A&apos;&lt;br/&gt;                              )&lt;br/&gt;                           THEN&lt;br/&gt;                              UPDATE t_settop_box_instance sbi&lt;br/&gt;                                 SET sbi.record_stat = &apos;D&apos;,&lt;br/&gt;                                     modified_by = p_audit_user_i,&lt;br/&gt;                                     modified_dttm = SYSTIMESTAMP&lt;br/&gt;                               WHERE sbi.settop_box_instance_id =&lt;br/&gt;                                          l_cursor_data (i).equip_prod_inst_id&lt;br/&gt;                                 AND created_dttm &lt; g_recon_cutoff_time&lt;br/&gt;                                 AND NVL (modified_dttm, g_recon_cutoff_time) &lt;=&lt;br/&gt;                                                           g_recon_cutoff_time;&lt;br/&gt;&lt;br/&gt;                              l_ins_up_ind := &apos;U&apos;;&lt;br/&gt;                              l_updated := TRUE;&lt;br/&gt;                              l_audit_recon.modif_values :=&lt;br/&gt;                                                      &apos;record_stat : (A =&gt; D)&apos;;&lt;br/&gt;                           END IF;&lt;br/&gt;                        ELSE                                 -- l_settop_after&lt;br/&gt;                           --create settop box instance&lt;br/&gt;                           IF (l_settop_box.settop_box_instance_id IS NULL)&lt;br/&gt;                           THEN&lt;br/&gt;                              da_settop_box_instance.ADD&lt;br/&gt;                                 (process_rec                 =&gt; l_process_rec,&lt;br/&gt;                                  estb_mac_address            =&gt; NULL,&lt;br/&gt;                                  ecm_mac_address             =&gt; NULL,&lt;br/&gt;                                  ethernet_mac_address        =&gt; NULL,&lt;br/&gt;                                  cmci_mac_address            =&gt; NULL,&lt;br/&gt;                                  model_nm                    =&gt; NULL,&lt;br/&gt;                                  rf4ce_mac_address           =&gt; NULL,&lt;br/&gt;                                  settop_box_instance_id      =&gt; l_cursor_data&lt;br/&gt;                                                                           (i).equip_prod_inst_id,&lt;br/&gt;                                  serial_num                  =&gt; l_cursor_data&lt;br/&gt;                                                                           (i).new_serial,&lt;br/&gt;                                  soc_part_num                =&gt; NULL,&lt;br/&gt;                                  manufacturer                =&gt; &apos;UNKNOWN&apos;,&lt;br/&gt;                                  manufacturer_site           =&gt; NULL,&lt;br/&gt;                                  manufacturer_date           =&gt; NULL,&lt;br/&gt;                                  cas_id                      =&gt; NULL,&lt;br/&gt;                                  audit_user                  =&gt; p_audit_user_i&lt;br/&gt;                                 );&lt;br/&gt;                              l_ins_up_ind := &apos;I&apos;;&lt;br/&gt;                           ELSE&lt;br/&gt;                              IF l_settop_box.record_stat = &apos;D&apos;&lt;br/&gt;                              THEN&lt;br/&gt;                                 UPDATE t_settop_box_instance sbi&lt;br/&gt;                                    SET sbi.record_stat = &apos;A&apos;,&lt;br/&gt;                                        modified_by = p_audit_user_i,&lt;br/&gt;                                        modified_dttm = SYSTIMESTAMP&lt;br/&gt;                                  WHERE sbi.settop_box_instance_id =&lt;br/&gt;                                           l_cursor_data (i).equip_prod_inst_id&lt;br/&gt;                                    AND created_dttm &lt; g_recon_cutoff_time&lt;br/&gt;                                    AND NVL (modified_dttm,&lt;br/&gt;                                             g_recon_cutoff_time&lt;br/&gt;                                            ) &lt;= g_recon_cutoff_time;&lt;br/&gt;&lt;br/&gt;                                 l_ins_up_ind := &apos;U&apos;;&lt;br/&gt;                                 l_audit_recon.modif_values :=&lt;br/&gt;                                                      &apos;record_stat : (D =&gt; A)&apos;;&lt;br/&gt;                              END IF;&lt;br/&gt;&lt;br/&gt;                              -- Karthik Changes &lt;Starts Here&gt;&lt;br/&gt;                              l_audit_recon.table_name :=&lt;br/&gt;                                                       &apos;T_SETTOP_BOX_INSTANCE&apos;;&lt;br/&gt;                              l_table_key :=&lt;br/&gt;                                    &apos;SETTOP_BOX_INSTANCE_ID&apos;&lt;br/&gt;                                 || &apos; = &apos;&lt;br/&gt;                                 || l_cursor_data (i).equip_prod_inst_id;&lt;br/&gt;&lt;br/&gt;                              IF l_ins_up_ind IS NOT NULL&lt;br/&gt;                              THEN&lt;br/&gt;                                 IF l_ins_up_ind = &apos;I&apos;&lt;br/&gt;                                 THEN&lt;br/&gt;                                    l_audit_recon.operation_perf :=&lt;br/&gt;                                           pkg_utility.c_recon_insert_perform;&lt;br/&gt;                                    l_audit_recon.modif_values := &apos;&apos;;&lt;br/&gt;                                 ELSE&lt;br/&gt;                                    l_audit_recon.operation_perf :=&lt;br/&gt;                                           pkg_utility.c_recon_update_perform;&lt;br/&gt;                                 END IF;&lt;br/&gt;&lt;br/&gt;                                 pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                                    (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                                     p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                                     p_table_key            =&gt; l_table_key,&lt;br/&gt;                                     p_modif_values         =&gt; l_audit_recon.modif_values,&lt;br/&gt;                                     p_account_details      =&gt; NULL,&lt;br/&gt;                                     p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                                     p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                                    );&lt;br/&gt;                              -- Karthik Changes &lt;Ends Here&gt;&lt;br/&gt;                              END IF;&lt;br/&gt;                           END IF;&lt;br/&gt;                        END IF;&lt;br/&gt;                     END IF;&lt;br/&gt;&lt;br/&gt;                     IF (l_updated)&lt;br/&gt;                     THEN&lt;br/&gt;                        l_update_cnt := l_update_cnt + 1;&lt;br/&gt;                     END IF;&lt;br/&gt;                  END IF;&lt;br/&gt;&lt;br/&gt;                  COMMIT;&lt;br/&gt;               EXCEPTION&lt;br/&gt;                  WHEN OTHERS&lt;br/&gt;                  THEN&lt;br/&gt;                     l_error_cnt := l_error_cnt + 1;&lt;br/&gt;                     ROLLBACK;&lt;br/&gt;                     pkg_logging.log_exception&lt;br/&gt;                                          (l_process_rec,&lt;br/&gt;                                              l_proc_name&lt;br/&gt;                                           || &apos;, delta_key=&apos;&lt;br/&gt;                                           || l_delta_key&lt;br/&gt;                                           || &apos;, exception=&apos;&lt;br/&gt;                                           || DBMS_UTILITY.format_error_stack&lt;br/&gt;                                                                           ()&lt;br/&gt;                                          );&lt;br/&gt;               END;&lt;br/&gt;            END LOOP;&lt;br/&gt;         END IF;&lt;br/&gt;&lt;br/&gt;         COMMIT;&lt;br/&gt;         EXIT WHEN l_cursor_data.COUNT () &lt; pkg_utility.c_rt_batchsize;&lt;br/&gt;      END LOOP;&lt;br/&gt;&lt;br/&gt;      CLOSE cur_nql_hist_delta;&lt;br/&gt;&lt;br/&gt;      -- Karthik &lt; Starts Here&gt;&lt;br/&gt;&lt;br/&gt;      --Making entry to the Process Child table against Total Processed Record Count&lt;br/&gt;      pkg_logging.process_log_detail_populate&lt;br/&gt;                          (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                           p_audit_bucket_i       =&gt; pkg_utility.c_prcssed_rec_text,&lt;br/&gt;                           p_audit_value_i        =&gt; l_process_cnt,&lt;br/&gt;                           p_process_id_i         =&gt; l_process_rec.process_id,&lt;br/&gt;                           p_in_audit_user_i      =&gt; p_audit_user_i&lt;br/&gt;                          );&lt;br/&gt;      pkg_logging.process_log_detail_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; l_process_rec,&lt;br/&gt;                             p_audit_bucket_i       =&gt; pkg_utility.c_error_rec_text,&lt;br/&gt;                             p_audit_value_i        =&gt; l_error_cnt,&lt;br/&gt;                             p_process_id_i         =&gt; l_process_rec.process_id,&lt;br/&gt;                             p_in_audit_user_i      =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;      -- Karthik &lt;Ends Here&gt;&lt;br/&gt;      pkg_logging.end_process (l_process_rec, pkg_utility.c_process_success);&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN exp_recon_not_started&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception&lt;br/&gt;            (l_process_rec,&lt;br/&gt;                l_proc_name&lt;br/&gt;             || &apos;, EXCEPTION = &apos;&lt;br/&gt;             || &apos;NO ACTIVE RECONCILIATION ENTRY FOUND IN STG.RECON_PROCESS_CTRL&apos;&lt;br/&gt;            );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         raise_application_error&lt;br/&gt;             (-20001,&lt;br/&gt;              &apos;NO ACTIVE RECONCILIATION ENTRY FOUND IN STG.RECON_PROCESS_CTRL&apos;&lt;br/&gt;             );&lt;br/&gt;      WHEN exp_multiple_logs_for_recon&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception&lt;br/&gt;            (l_process_rec,&lt;br/&gt;                l_proc_name&lt;br/&gt;             || &apos;, EXCEPTION = &apos;&lt;br/&gt;             || &apos;MULTIPLE ACTIVE RECONCILIATION ENTRIES FOUND IN STG.RECON_PROCESS_CTRL&apos;&lt;br/&gt;            );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         raise_application_error&lt;br/&gt;            (-20002,&lt;br/&gt;             &apos;MULTIPLE ACTIVE RECONCILIATION ENTRIES FOUND IN STG.RECON_PROCESS_CTRL&apos;&lt;br/&gt;            );&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         IF (cur_nql_hist_delta%ISOPEN)&lt;br/&gt;         THEN&lt;br/&gt;            CLOSE cur_nql_hist_delta;&lt;br/&gt;         END IF;&lt;br/&gt;&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception (l_process_rec,&lt;br/&gt;                                       l_proc_name&lt;br/&gt;                                    || &apos;, delta_key=&apos;&lt;br/&gt;                                    || l_delta_key&lt;br/&gt;                                    || &apos;, exception=&apos;&lt;br/&gt;                                    || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         RAISE;&lt;br/&gt;   END process;&lt;br/&gt;&lt;br/&gt;  PROCEDURE finalize (p_audit_user_i IN VARCHAR2)&lt;br/&gt;   /****************************************************************************************************************&lt;br/&gt;   ||  SubProgram Name    : Procedure finalize&lt;br/&gt;   ||  Estimated Run Time :&lt;br/&gt;   ||  Description        : Finalize the equipment changes applied in reconciliation.&lt;br/&gt;   ****************************************************************************************************************/&lt;br/&gt;   IS&lt;br/&gt;      l_proc_name     t_unit_name               := &apos;FINALIZE&apos;;&lt;br/&gt;      l_process_rec   pkg_logging.t_process_rec;&lt;br/&gt;   BEGIN&lt;br/&gt;      l_process_rec.process_name := c_pkg_name || &apos;.&apos; || l_proc_name;&lt;br/&gt;      pkg_logging.begin_process (l_process_rec,&lt;br/&gt;                                 &apos;p_audit_user_i=&apos; || p_audit_user_i&lt;br/&gt;                                );&lt;br/&gt;      pkg_equip_utility.finalize (l_process_rec, p_audit_user_i);&lt;br/&gt;      COMMIT;&lt;br/&gt;      pkg_logging.end_process (l_process_rec, pkg_utility.c_process_success);&lt;br/&gt;   EXCEPTION&lt;br/&gt;      WHEN OTHERS&lt;br/&gt;      THEN&lt;br/&gt;         ROLLBACK;&lt;br/&gt;         pkg_logging.log_exception (l_process_rec,&lt;br/&gt;                                       l_proc_name&lt;br/&gt;                                    || &apos;, exception=&apos;&lt;br/&gt;                                    || DBMS_UTILITY.format_error_stack ()&lt;br/&gt;                                   );&lt;br/&gt;         pkg_logging.end_process (l_process_rec, pkg_utility.c_process_error);&lt;br/&gt;         RAISE;&lt;br/&gt;   END finalize;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;   PROCEDURE connect_equipment (&lt;br/&gt;      p_process_rec_i       IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i        IN   t_userid,&lt;br/&gt;      p_connect_account_i   IN   t_account.account_id%TYPE,&lt;br/&gt;      p_cursor_row_i        IN   cur_nql_hist_delta%ROWTYPE&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      l_record_stat   t_equip_instance_account.record_stat%TYPE;&lt;br/&gt;      l_account_id    t_equip_instance_account.account_id%TYPE;&lt;br/&gt;      l_ins_upd       VARCHAR2 (1)                                := NULL;&lt;br/&gt;      l_audit_recon   stg.audit_recon_process%ROWTYPE;&lt;br/&gt;      l_proc_name     t_unit_name                      := &apos;CONNECT_EQUIPMENT&apos;;&lt;br/&gt;   BEGIN&lt;br/&gt;      chtr.pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                     l_proc_name&lt;br/&gt;                                  || &apos; p_connect_account_i=&apos;&lt;br/&gt;                                  || p_connect_account_i&lt;br/&gt;                                 );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         SELECT record_stat, account_id&lt;br/&gt;           INTO l_record_stat, l_account_id&lt;br/&gt;           FROM t_equip_instance_account eia&lt;br/&gt;          WHERE eia.equip_prod_inst_id = p_cursor_row_i.equip_prod_inst_id;&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN NO_DATA_FOUND&lt;br/&gt;         THEN&lt;br/&gt;            l_record_stat := NULL;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      IF (l_record_stat IS NULL)&lt;br/&gt;      THEN&lt;br/&gt;         da_equip_instance_account.ADD&lt;br/&gt;                  (process_rec              =&gt; p_process_rec_i,&lt;br/&gt;                   account_id               =&gt; p_connect_account_i,&lt;br/&gt;                   data_load_type_cd        =&gt; &apos;NQL&apos;,&lt;br/&gt;                   data_source_type_cd      =&gt; p_cursor_row_i.data_source_type_cd,&lt;br/&gt;                   equip_prod_inst_id       =&gt; p_cursor_row_i.equip_prod_inst_id,&lt;br/&gt;                   audit_user               =&gt; p_audit_user_i&lt;br/&gt;                  );&lt;br/&gt;         l_audit_recon.operation_perf := pkg_utility.c_recon_insert_perform;&lt;br/&gt;&lt;br/&gt;         INSERT INTO stg.work_queue_vnt_eqp&lt;br/&gt;                     (keycol, valcol, record_stat, created_dttm,&lt;br/&gt;                      created_by&lt;br/&gt;                     )&lt;br/&gt;              VALUES (&apos;ACCOUNT_ID&apos;, p_connect_account_i, &apos;A&apos;, SYSTIMESTAMP,&lt;br/&gt;                      p_audit_user_i&lt;br/&gt;                     );&lt;br/&gt;&lt;br/&gt;         pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                   p_cursor_row_i.old_serial&lt;br/&gt;                                || &apos;, new connect to account &apos;&lt;br/&gt;                                || p_connect_account_i&lt;br/&gt;                                || &apos;, l_record_stat=&apos;&lt;br/&gt;                                || l_record_stat&lt;br/&gt;                               );&lt;br/&gt;      ELSE&lt;br/&gt;         IF (l_record_stat = &apos;D&apos; OR l_account_id &lt;&gt; p_connect_account_i)&lt;br/&gt;         THEN&lt;br/&gt;            UPDATE t_equip_instance_account eia&lt;br/&gt;               SET eia.record_stat = &apos;A&apos;,&lt;br/&gt;                   eia.account_id = p_connect_account_i,&lt;br/&gt;                   eia.modified_dttm = SYSTIMESTAMP,&lt;br/&gt;                   eia.modified_by = p_audit_user_i&lt;br/&gt;             WHERE eia.equip_prod_inst_id = p_cursor_row_i.equip_prod_inst_id&lt;br/&gt;               AND created_dttm &lt; g_recon_cutoff_time&lt;br/&gt;               AND NVL (modified_dttm, g_recon_cutoff_time) &lt;=&lt;br/&gt;                                                           g_recon_cutoff_time;&lt;br/&gt;&lt;br/&gt;            IF (SQL%ROWCOUNT &gt; 0)&lt;br/&gt;            THEN&lt;br/&gt;               -- Queue Old Account if it is diff then new account&lt;br/&gt;               IF (l_record_stat = &apos;A&apos; AND l_account_id &lt;&gt; p_connect_account_i&lt;br/&gt;                  )&lt;br/&gt;               THEN&lt;br/&gt;                  INSERT INTO stg.work_queue_vnt_eqp&lt;br/&gt;                              (keycol, valcol, record_stat,&lt;br/&gt;                               created_dttm, created_by&lt;br/&gt;                              )&lt;br/&gt;                       VALUES (&apos;ACCOUNT_ID&apos;, l_account_id, &apos;A&apos;,&lt;br/&gt;                               SYSTIMESTAMP, p_audit_user_i&lt;br/&gt;                              );&lt;br/&gt;&lt;br/&gt;                  pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                            p_cursor_row_i.old_serial&lt;br/&gt;                                         || &apos;, Queueing old account=&apos;&lt;br/&gt;                                         || l_account_id&lt;br/&gt;                                        );&lt;br/&gt;               END IF;&lt;br/&gt;&lt;br/&gt;               -- Queue New Account&lt;br/&gt;               INSERT INTO stg.work_queue_vnt_eqp&lt;br/&gt;                           (keycol, valcol, record_stat,&lt;br/&gt;                            created_dttm, created_by&lt;br/&gt;                           )&lt;br/&gt;                    VALUES (&apos;ACCOUNT_ID&apos;, p_connect_account_i, &apos;A&apos;,&lt;br/&gt;                            SYSTIMESTAMP, p_audit_user_i&lt;br/&gt;                           );&lt;br/&gt;&lt;br/&gt;               pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                         p_cursor_row_i.old_serial&lt;br/&gt;                                      || &apos;, update connection to account=&apos;&lt;br/&gt;                                      || p_connect_account_i&lt;br/&gt;                                      || &apos; old account=&apos;&lt;br/&gt;                                      || l_account_id&lt;br/&gt;                                     );&lt;br/&gt;               l_audit_recon.operation_perf :=&lt;br/&gt;                                            pkg_utility.c_recon_update_perform;&lt;br/&gt;               l_audit_recon.modif_values :=&lt;br/&gt;                     &apos;RECORD_STAT : (&apos;&lt;br/&gt;                  || l_record_stat&lt;br/&gt;                  || &apos; =&gt; A), ACCOUNT_ID :(&apos;&lt;br/&gt;                  || l_account_id&lt;br/&gt;                  || &apos; =&gt; &apos;&lt;br/&gt;                  || p_connect_account_i&lt;br/&gt;                  || &apos; )&apos;;&lt;br/&gt;            END IF;&lt;br/&gt;         END IF;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      IF l_audit_recon.operation_perf IS NOT NULL&lt;br/&gt;      THEN&lt;br/&gt;         l_audit_recon.table_name := &apos;T_EQUIP_INSTANCE_ACCOUNT&apos;;&lt;br/&gt;         l_audit_recon.table_key :=&lt;br/&gt;            &apos;EQUIP_PROD_INST_ID&apos; || &apos; = &apos;&lt;br/&gt;            || p_cursor_row_i.equip_prod_inst_id;&lt;br/&gt;         pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                           (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                            p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                            p_table_key            =&gt; l_audit_recon.table_key,&lt;br/&gt;                            p_modif_values         =&gt; l_audit_recon.modif_values,&lt;br/&gt;                            p_account_details      =&gt; NULL,&lt;br/&gt;                            p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                            p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                           );&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      chtr.pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                     l_proc_name&lt;br/&gt;                                  || &apos; &apos;&lt;br/&gt;                                  || NVL (l_audit_recon.operation_perf,&lt;br/&gt;                                          &apos;No Change&apos;&lt;br/&gt;                                         )&lt;br/&gt;                                  || &apos; in T_EQUIP_INSTANCE_ACCOUNT&apos;&lt;br/&gt;                                  || &apos;, EQUIP_PROD_INST_ID&apos;&lt;br/&gt;                                  || &apos; = &apos;&lt;br/&gt;                                  || p_cursor_row_i.equip_prod_inst_id&lt;br/&gt;                                 );&lt;br/&gt;   END connect_equipment;&lt;br/&gt;&lt;br/&gt;   PROCEDURE disconnect_equipment (&lt;br/&gt;      p_process_rec_i          IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i           IN   t_userid,&lt;br/&gt;      p_disconnect_account_i   IN   t_account.account_id%TYPE,&lt;br/&gt;      p_cursor_row_i           IN   cur_nql_hist_delta%ROWTYPE&lt;br/&gt;   )&lt;br/&gt;   IS&lt;br/&gt;      l_proc_name     t_unit_name                   := &apos;DISCONNECT_EQUIPMENT&apos;;&lt;br/&gt;      l_record_stat   t_equip_instance_account.record_stat%TYPE;&lt;br/&gt;      l_account_id    t_equip_instance_account.account_id%TYPE;&lt;br/&gt;      l_audit_recon   stg.audit_recon_process%ROWTYPE;&lt;br/&gt;   BEGIN&lt;br/&gt;      chtr.pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                     l_proc_name&lt;br/&gt;                                  || &apos; p_disconnect_account_i=&apos;&lt;br/&gt;                                  || p_disconnect_account_i&lt;br/&gt;                                  || &apos;, new_serial=&apos;&lt;br/&gt;                                  || p_cursor_row_i.new_serial&lt;br/&gt;                                 );&lt;br/&gt;&lt;br/&gt;      BEGIN&lt;br/&gt;         SELECT record_stat, account_id&lt;br/&gt;           INTO l_record_stat, l_account_id&lt;br/&gt;           FROM t_equip_instance_account eia&lt;br/&gt;          WHERE eia.equip_prod_inst_id = p_cursor_row_i.equip_prod_inst_id;&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN NO_DATA_FOUND&lt;br/&gt;         THEN&lt;br/&gt;            l_record_stat := NULL;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      IF (l_record_stat IS NOT NULL)&lt;br/&gt;      THEN&lt;br/&gt;         IF (l_account_id = p_disconnect_account_i)&lt;br/&gt;         THEN&lt;br/&gt;            UPDATE t_equip_instance_account eia&lt;br/&gt;               SET record_stat = &apos;D&apos;,&lt;br/&gt;                   modified_dttm = SYSTIMESTAMP,&lt;br/&gt;                   modified_by = p_audit_user_i&lt;br/&gt;             WHERE eia.equip_prod_inst_id = p_cursor_row_i.equip_prod_inst_id&lt;br/&gt;               AND created_dttm &lt; g_recon_cutoff_time&lt;br/&gt;               AND modified_dttm &lt; g_recon_cutoff_time;&lt;br/&gt;&lt;br/&gt;            IF (SQL%ROWCOUNT &gt; 0)&lt;br/&gt;            THEN&lt;br/&gt;               INSERT INTO stg.work_queue_vnt_eqp&lt;br/&gt;                           (keycol, valcol&lt;br/&gt;                           )&lt;br/&gt;                    VALUES (&apos;ACCOUNT_ID&apos;, p_disconnect_account_i&lt;br/&gt;                           );&lt;br/&gt;&lt;br/&gt;               pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                         p_cursor_row_i.old_serial&lt;br/&gt;                                      || &apos;, disconnect from account &apos;&lt;br/&gt;                                      || p_disconnect_account_i&lt;br/&gt;                                     );&lt;br/&gt;               l_audit_recon.table_name := &apos;T_EQUIP_INSTANCE_ACCOUNT&apos;;&lt;br/&gt;               l_audit_recon.table_key :=&lt;br/&gt;                     &apos;EQUIP_PROD_INST_ID&apos;&lt;br/&gt;                  || &apos; = &apos;&lt;br/&gt;                  || p_cursor_row_i.equip_prod_inst_id;&lt;br/&gt;               l_audit_recon.operation_perf :=&lt;br/&gt;                                            pkg_utility.c_recon_update_perform;&lt;br/&gt;               l_audit_recon.modif_values :=&lt;br/&gt;                     &apos;RECORD_STAT : (A =&gt; D), ACCOUNT_ID :(&apos;&lt;br/&gt;                  || l_account_id&lt;br/&gt;                  || &apos; =&gt; &apos;&lt;br/&gt;                  || p_disconnect_account_i&lt;br/&gt;                  || &apos; )&apos;;&lt;br/&gt;               pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                             p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                             p_table_key            =&gt; l_audit_recon.table_key,&lt;br/&gt;                             p_modif_values         =&gt; l_audit_recon.modif_values,&lt;br/&gt;                             p_account_details      =&gt; NULL,&lt;br/&gt;                             p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                             p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;            END IF;&lt;br/&gt;         END IF;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      chtr.pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                     l_proc_name&lt;br/&gt;                                  || &apos; &apos;&lt;br/&gt;                                  || l_audit_recon.operation_perf&lt;br/&gt;                                 );&lt;br/&gt;   END disconnect_equipment;&lt;br/&gt;&lt;br/&gt;   FUNCTION create_account (&lt;br/&gt;      p_process_rec_i   IN   pkg_logging.t_process_rec,&lt;br/&gt;      p_audit_user_i    IN   t_userid,&lt;br/&gt;      p_cursor_row_i    IN   cur_nql_hist_delta%ROWTYPE&lt;br/&gt;   )&lt;br/&gt;      RETURN NUMBER&lt;br/&gt;   IS&lt;br/&gt;      l_account_id    t_account_vantage_xref.account_id%TYPE;&lt;br/&gt;      l_record_stat   t_account_vantage_xref.record_stat%TYPE;&lt;br/&gt;      l_audit_recon   stg.audit_recon_process%ROWTYPE;&lt;br/&gt;      l_proc_name     t_unit_name                         := &apos;CREATE_ACCOUNT&apos;;&lt;br/&gt;   BEGIN&lt;br/&gt;      BEGIN&lt;br/&gt;         SELECT xref.account_id, xref.record_stat&lt;br/&gt;           INTO l_account_id, l_record_stat&lt;br/&gt;           FROM t_account_vantage_xref xref&lt;br/&gt;          WHERE xref.sub_acct_num = p_cursor_row_i.new_local;&lt;br/&gt;      EXCEPTION&lt;br/&gt;         WHEN NO_DATA_FOUND&lt;br/&gt;         THEN&lt;br/&gt;            l_account_id := NULL;&lt;br/&gt;      END;&lt;br/&gt;&lt;br/&gt;      IF (l_account_id IS NULL)&lt;br/&gt;      THEN&lt;br/&gt;         l_account_id :=&lt;br/&gt;            da_account.ADD&lt;br/&gt;                  (process_rec                     =&gt; p_process_rec_i,&lt;br/&gt;                   data_source_type_cd             =&gt; p_cursor_row_i.data_source_type_cd,&lt;br/&gt;                   account_num                     =&gt; p_cursor_row_i.new_local,&lt;br/&gt;                   account_nm                      =&gt; NULL,&lt;br/&gt;                   account_open_dt                 =&gt; NULL,&lt;br/&gt;                   account_close_dt                =&gt; NULL,&lt;br/&gt;                   account_type_cd                 =&gt; NULL,&lt;br/&gt;                   account_purpose_subtype_cd      =&gt; NULL,&lt;br/&gt;                   subaccount_ind                  =&gt; 0,&lt;br/&gt;                   account_qualifier_cd            =&gt; NULL,&lt;br/&gt;                   billing_station_id              =&gt; p_cursor_row_i.billing_station_id ,&lt;br/&gt;                   audit_user                      =&gt; p_audit_user_i,&lt;br/&gt;                   dunning_group_cd                =&gt; NULL&lt;br/&gt;                  );&lt;br/&gt;         da_account_vantage_xref.ADD&lt;br/&gt;                                    (process_rec       =&gt; p_process_rec_i,&lt;br/&gt;                                     sub_acct_num      =&gt; p_cursor_row_i.new_local,&lt;br/&gt;                                     account_id        =&gt; l_account_id,&lt;br/&gt;                                     audit_user        =&gt; p_audit_user_i&lt;br/&gt;                                    );&lt;br/&gt;         chtr.pkg_logging.log_debug (p_process_rec_i,&lt;br/&gt;                                        l_proc_name&lt;br/&gt;                                     || &apos; account created. account_id=&apos;&lt;br/&gt;                                     || l_account_id&lt;br/&gt;                                     || &apos;, Serial=&apos;&lt;br/&gt;                                     || p_cursor_row_i.new_serial&lt;br/&gt;                                     || &apos;, sub_acct_no=&apos;&lt;br/&gt;                                     || p_cursor_row_i.new_local&lt;br/&gt;                                    );&lt;br/&gt;         l_audit_recon.table_name := &apos;T_ACCOUNT&apos;;&lt;br/&gt;         l_audit_recon.table_key := &apos;ACCOUNT_ID&apos; || &apos; = &apos; || l_account_id;&lt;br/&gt;         l_audit_recon.operation_perf := pkg_utility.c_recon_insert_perform;&lt;br/&gt;         l_audit_recon.modif_values := NULL;&lt;br/&gt;         pkg_vnt_recon_process.audit_recon_process_populate&lt;br/&gt;                            (p_process_rec_i        =&gt; p_process_rec_i,&lt;br/&gt;                             p_table_name           =&gt; l_audit_recon.table_name,&lt;br/&gt;                             p_table_key            =&gt; l_audit_recon.table_key,&lt;br/&gt;                             p_modif_values         =&gt; l_audit_recon.modif_values,&lt;br/&gt;                             p_account_details      =&gt; NULL,&lt;br/&gt;                             p_operation_perf       =&gt; l_audit_recon.operation_perf,&lt;br/&gt;                             p_audit_user_i         =&gt; p_audit_user_i&lt;br/&gt;                            );&lt;br/&gt;      ELSIF (l_record_stat &lt;&gt; &apos;A&apos;)&lt;br/&gt;      THEN&lt;br/&gt;         UPDATE t_account_vantage_xref xref&lt;br/&gt;            SET xref.record_stat = &apos;A&apos;&lt;br/&gt;          WHERE xref.sub_acct_num = p_cursor_row_i.new_local;&lt;br/&gt;      END IF;&lt;br/&gt;&lt;br/&gt;      RETURN l_account_id;&lt;br/&gt;   END create_account;&lt;br/&gt;END pkg_vnt_recon_nql_hist;</source>
</body>
</PackageOracle>